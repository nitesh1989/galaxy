{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["ToolShedRepositoryView","Backbone","View","extend","el","initialize","params","this","options","_","defaults","model","_toolshedModel2","default","RepositoryCollection","listenTo","render","shed","tool_shed","replace","url","repository_id","tool_shed_url","category","fetch","repo_details_template","templateRepoDetails","models","repository","get","queueLength","changesets","Object","metadata","length","current_changeset","current_metadata","tools","templateRepoDependency","templateGlobalSectionSelect","templateToolSectionSelect","tps_select_options","templatePanelSelectOptions","tool_dependencies","shed_tool_conf","templateShedToolConf","stc_html","root","queue","checkInstalled","bindEvents","$","that","on","repository_dependency_template","tps_template_global_select","panel_section_dict","ev","preventDefault","repositories","JSON","stringify","attr","find","install_tool_dependencies","val","install_resolver_dependencies","panelSelect","tool_panel_section","tool_shed_repository_ids","install_repository_dependencies","text","prepareInstall","repository_metadata","key","changeset","substr","default_tps","new_value","removeAttr","jstree","guid","tsr_id","name","api_url","Galaxy","desc","data","input","cls","toolform","_formView2","_utils2","deepeach","inputs","modal","modal_title","indexOf","type","show","closing_events","textify","extensions","Close","hide","title","body","$el","buttons","changeset_match","changeset_revision","already_installed","index","deleted","uninstalled","installed_changeset_revision","repoQueued","prop","new_tool_panel_section","tool_guid","action","each","element_name","repository_queue","parse","localStorage","reDraw","empty","shed_url","queue_key","queueKey","tpsSelection","new_tps","post","iri_parameters","doInstall","new_route","controller_url","console","trigger","templateRepoDependencies","template","templateToolDependency","templateGlobalSectionCreate","join","templateToolSectionCreate","RepoDetails"],"mappings":"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6IACA,kIACA,SACA,SACA,wBACA,4DACA,gIACA,6BACA,oDACA,yEACA,uFACA,OACA,0FACA,oEACA,2BACA,wEACA,qGACA,OACA,SACA,4DACA,SACA,SACA,UACA,2DACA,qDACA,6BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFF,KAAK,KAGXJ,yBAA0BnI,EAAEoI,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFG,KAAK,KAGX1G,uBAAwB7B,EAAEoI,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFG,KAAK,KAGXnG,qBAAsBpC,EAAEoI,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFG,KAAK,KAGXF,uBAAwBrI,EAAEoI,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFG,KAAK,KAGXD,4BAA6BtI,EAAEoI,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFG,KAAK,KAGXzG,4BAA6B9B,EAAEoI,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFG,KAAK,KAGXC,0BAA2BxI,EAAEoI,UAErB,uFACA,+KACA,uLACA,UACFG,KAAK,KAGXxG,0BAA2B/B,EAAEoI,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFG,KAAK,KAGXtG,2BAA4BjC,EAAEoI,UAEtB,6CACA,iEACA,aACFG,KAAK,kBAKXE,YAAalJ","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport jstree from \"libs/jquery/jstree\";\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport FormView from \"mvc/form/form-view\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar ToolShedRepositoryView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(params) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new toolshed_model.RepositoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += `?tool_shed_url=${shed}&repository_id=${params.repository_id}`;\n        this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n        this.model.tool_shed = shed;\n        this.model.category = params.repository_id;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        var repo_details_template = this.templateRepoDetails;\n        var models = this.model.models[0];\n        this.options = {\n            repository: models.get(\"repository\"),\n            tool_shed: this.model.tool_shed,\n            queue: toolshed_util.queueLength()\n        };\n        var changesets = Object.keys(this.options.repository.metadata);\n        this.options.current_changeset = this.options.current_changeset || changesets[changesets.length - 1];\n        this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n        this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n        this.options.tools = this.options.current_metadata.tools;\n        this.options.repository_dependencies_template = this.templateRepoDependencies;\n        this.options.repository_dependency_template = this.templateRepoDependency;\n        this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n        this.options.tps_template_tool_select = this.templateToolSectionSelect;\n        this.options.tps_select_options = this.templatePanelSelectOptions;\n        this.options.tool_dependencies = models.get(\"tool_dependencies\");\n        this.options.shed_tool_conf = this.templateShedToolConf({\n            stc_html: models.get(\"shed_conf\")\n        });\n        this.options.panel_section_dict = models.get(\"panel_section_dict\");\n        this.options.api_url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        this.options = _.extend(this.options, options);\n        this.$el.html(repo_details_template(this.options));\n        this.checkInstalled(this.options.current_metadata);\n        this.bindEvents();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#changeset\").on(\"change\", () => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            that.checkInstalled(that.options.current_metadata);\n            that.reDraw();\n        });\n        $(\"#tool_panel_section_select\").on(\"change\", () => {\n            that.tpsSelection();\n        });\n        $(\"#install_repository\").on(\"click\", ev => {\n            var form = $(\"#repository_installation\");\n            ev.preventDefault();\n            var params = {};\n            params.repositories = JSON.stringify([\n                [\n                    $(\"#install_repository\").attr(\"data-tsrid\"),\n                    $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val()\n                ]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([$(\"#install_repository\").attr(\"data-tsrid\")]);\n            params.tool_shed_url = that.model.tool_shed_url;\n            params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            var tps = that.panelSelect(params);\n            params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n            params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            params.changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var url = $(\"#repository_installation\").attr(\"action\");\n            that.prepareInstall(params, url);\n        });\n        $(\"#queue_install\").on(\"click\", ev => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            var changeset = that.options.current_changeset;\n            var repository_metadata = {};\n            _.each(Object.keys(that.options.current_metadata), key => {\n                if (!repository_metadata[key]) {\n                    repository_metadata[key] = that.options.current_metadata[key];\n                }\n            });\n            repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n            repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            repository_metadata.tool_shed_url = that.model.tool_shed_url;\n            if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                    0,\n                    repository_metadata.tool_shed_url.length - 1\n                );\n            }\n            toolshed_util.addToQueue(repository_metadata);\n            that.checkInstalled(repository_metadata);\n        });\n        $(\".tool_panel_section_picker\").on(\"change\", function() {\n            var new_value = $(this)\n                .find(\"option:selected\")\n                .val();\n            var default_tps = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n            if (new_value == default_tps) {\n                $(this).attr(\"default\", \"active\");\n            } else {\n                $(this).removeAttr(\"default\");\n            }\n        });\n        $(() => {\n            $(\"#repository_dependencies\").jstree();\n        });\n        $(\".tool_form\").on(\"click\", function() {\n            var guid = $(this).attr(\"data-guid\");\n            var clean = $(this).attr(\"data-clean\");\n            var name = $(this).attr(\"data-name\");\n            var desc = $(this).attr(\"data-desc\");\n            var tool_shed_url = that.model.tool_shed_url;\n            var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n            var changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var api_url = `${Galaxy.root}api/tool_shed/tool_json`;\n            var params = {\n                guid: guid,\n                tool_shed_url: tool_shed_url,\n                tsr_id: tsr_id,\n                changeset: changeset\n            };\n            $.get(api_url, params, data => {\n                data.cls = \"ui-portlet-plain\";\n                var toolform = new FormView(data);\n                Utils.deepeach(data.inputs, input => {\n                    if (input.type) {\n                        if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                            input.type = \"hidden\";\n                            input.info = `Data input '${input.name}' (${Utils.textify(input.extensions)})`;\n                        }\n                    }\n                });\n                var modal = new Modal.View();\n                var modal_title = `<u>${name}</u> ${desc}`;\n                modal.show({\n                    closing_events: true,\n                    title: modal_title,\n                    body: toolform.$el,\n                    buttons: {\n                        Close: function() {\n                            modal.hide();\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    checkInstalled: function(metadata) {\n        var that = this;\n        var params = { name: metadata.name, owner: metadata.owner };\n        var already_installed = false;\n        var queued = that.repoQueued(metadata);\n        $.get(`${Galaxy.root}api/tool_shed_repositories`, params, data => {\n            for (var index = 0; index < data.length; index++) {\n                var repository = data[index];\n                var installed = !repository.deleted && !repository.uninstalled;\n                var changeset_match =\n                    repository.changeset_revision == metadata.changeset_revision ||\n                    repository.installed_changeset_revision == metadata.changeset_revision;\n                if (\n                    repository.name == metadata.repository.name &&\n                    repository.owner == metadata.repository.owner &&\n                    installed &&\n                    changeset_match\n                ) {\n                    already_installed = true;\n                }\n                if (already_installed) {\n                    $(\"#install_repository\").prop(\"disabled\", true);\n                    $(\"#install_repository\").val(\"This revision is already installed\");\n                } else {\n                    $(\"#install_repository\").prop(\"disabled\", false);\n                    $(\"#install_repository\").val(\"Install this revision\");\n                }\n            }\n            if (that.repoQueued(metadata) || already_installed) {\n                $(\"#queue_install\").hide();\n                $(\"#queue_install\").val(\"This revision is already in the queue\");\n            } else {\n                $(\"#queue_install\").show();\n                $(\"#queue_install\").val(\"Install this revision later\");\n            }\n        });\n    },\n\n    panelSelect: function(params) {\n        var tool_panel_section = {};\n        if ($(\"#tool_panel_section_select\").length) {\n            params.tool_panel_section_id = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n        } else {\n            params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n        }\n        $(\".tool_panel_section_picker\").each(function() {\n            var element_name = $(this).attr(\"name\");\n            var tool_guid = $(this).attr(\"data-toolguid\");\n            if (element_name === \"tool_panel_section_id\") {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this)\n                        .find(\"option:selected\")\n                        .val(),\n                    action: \"append\"\n                };\n            } else {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).val(),\n                    action: \"create\"\n                };\n            }\n        });\n        return tool_panel_section;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    repoQueued: function(metadata) {\n        var that = this;\n        if (!localStorage.repositories) {\n            return;\n        }\n        var repository_queue = JSON.parse(localStorage.repositories);\n        var changeset = metadata.changeset_revision;\n        var queue_key = that.queueKey(metadata);\n        if (localStorage.repositories) {\n            queued_repos = JSON.parse(localStorage.repositories);\n        }\n        if (queued_repos.hasOwnProperty(queue_key)) {\n            return true;\n        }\n        return false;\n    },\n\n    queueKey: function(metadata) {\n        var shed_url = this.model.tool_shed_url;\n        // Make sure there is never a trailing slash on the shed URL.\n        if (shed_url.substr(-1) == \"/\") {\n            shed_url = shed_url.substr(0, shed_url.length - 1);\n        }\n        return `${shed_url}|${metadata.repository_id}|${metadata.changeset_revision}`;\n    },\n\n    tpsSelection: function() {\n        new_tps = $(\"#tool_panel_section_select\")\n            .find(\"option:selected\")\n            .val();\n        $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n            $(this).val(new_tps);\n        });\n    },\n\n    prepareInstall: function(params, api_url) {\n        var that = this;\n        $.post(api_url, params, data => {\n            var iri_parameters = JSON.parse(data);\n            that.doInstall(iri_parameters);\n        });\n    },\n\n    doInstall: function(params) {\n        var controller_url = `${Galaxy.root}admin_toolshed/install_repositories`;\n        var repositories = params.repositories;\n        var new_route = `status/r/${repositories.join(\"|\")}`;\n        $.post(controller_url, params, data => {\n            console.log(\"Initializing repository installation succeeded\");\n        });\n        Backbone.history.navigate(new_route, {\n            trigger: true,\n            replace: true\n        });\n    },\n\n    templateRepoDetails: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n            '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n            '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n            '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">Changeset</div>',\n            '<div class=\"toolFormBody changeset\">',\n            '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n            \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n            '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n            '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n            \"<% }); %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n            '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n            \"</div>\",\n            \"</div>\",\n            \"<%= shed_tool_conf %>\",\n            \"<% if (current_metadata.has_repository_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_repository_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n            '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n            \"</p>\",\n            \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n            '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n            \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n            \"</a>\",\n            \"</div>\",\n            \"<%= repository_dependencies_template(current_metadata) %>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Tool dependencies</div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_resolver_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n            '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n            \"</p>\",\n            '<p id=\"install_tool_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n            '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n            \"</p>\",\n            '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n            \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n            \"</a>\",\n            \"</div>\",\n            '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Version</th>\",\n            \"<th>Type</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            '<tbody id=\"tool_deps\">',\n            \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n            '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n            '<td style=\"padding-left: 40px;\">',\n            \"<%= dependency.name %></td>\",\n            \"<td><%= dependency.version %></td>\",\n            \"<td><%= dependency.type %></td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n            '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tables container-table\" id=\"tools_toggle\">',\n            '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Description</th>\",\n            \"<th>Version</th>\",\n            \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n            \"</thead>\",\n            '<tbody id=\"tools_in_repo\">',\n            \"<% _.each(current_metadata.tools, function(tool) { %>\",\n            '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n            '<td style=\"padding-left: 40px;\">',\n            '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n            '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"<td><%= tool.description %></td>\",\n            '<td style=\"width: 15%\"><%= tool.version %></td>',\n            '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n            \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</form>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependencies: _.template(\n        [\n            '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n            '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n            \"<ul>\",\n            \"<li>Repository installation requires the following\",\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"<% } %>\",\n            \"</li>\",\n            \"</ul>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependency: _.template(\n        [\n            '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n            \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n            \"<% if (has_repository_dependencies) { %>\",\n            '<ul class=\"child_dependencies\">',\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"<% } %>\",\n            \"</li>\"\n        ].join(\"\")\n    ),\n\n    templateShedToolConf: _.template(\n        [\n            '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"form-row\">',\n            \"<%= stc_html %>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolDependency: _.template(\n        [\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% if (dependency.includes_tool_dependencies) { %>\",\n            \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n            \"<%= tool_dependency_template(dependency) %>\",\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"<% } %>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionCreate: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"form-row\" id=\"new_tps\">',\n            '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Add a new tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionSelect: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tab-pane\" id=\"select_tps\">',\n            '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Select an existing tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionCreate: _.template(\n        [\n            '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n            '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n            '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionSelect: _.template(\n        [\n            '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n            '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n            '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templatePanelSelectOptions: _.template(\n        [\n            \"<% _.each(sections, function(section) { %>\",\n            '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n            \"<% }); %>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoDetails: ToolShedRepositoryView\n};\n"]}