{"version":3,"sources":["mvc/toolshed/repository-queue-view.js"],"names":["View","Backbone","extend","el","defaults","initialize","options","that","this","model","_toolshedModel2","default","RepoQueue","listenTo","render","fetch","templateRepoQueue","repositories","models","$el","html","title","_util2","queueLength","$","repo_queue_template","attr","queue","repo_queue","JSON","parse","localStorage","css","queue_key","bindEvents","repository","id","repository_id","remove","stringify","repository_metadata","installFromQueue","on","trigger","replace","Object","install_tool_dependencies","params","install_repository_dependencies","install_resolver_dependencies","navigate","tool_panel_section","shed_tool_conf","changeset_revision","tool_shed_repository_ids","tool_shed_url","split","url","root","hasOwnProperty","repository_queue","post","iri_params","undefined","new_route","join","data","console","loadFromQueue","log","reDraw","empty","_","template","RepoQueueView"],"mappings":"6PAEIA,EAAOC,SAASD,KAAKE,QACrBC,GAAI,UAEJC,cAEAC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,MAAQ,IAAIC,EAAAC,QAAeC,UAChCJ,KAAKK,SAASL,KAAKC,MAAO,OAAQD,KAAKM,QACvCN,KAAKC,MAAMM,QACXR,EAAKO,UAGTA,OAAQ,SAASR,GACb,IAAIC,EAAOC,KAdfR,EAAqBE,EAAOc,kBACxBC,EADwBV,EAAAE,MAAAS,OAiBxBX,EAAKY,IAAIC,KAdbhB,GAgBYiB,MAAO,gCAdnBhB,aAAYY,EACJV,MAAOe,EAAAX,QAAXY,iBAGAC,EAAA,WAAKf,IAAMM,WAAX,QACAR,EAAAA,cAGJO,WAAQ,WACJ,IAAAP,EAAIA,KACJiB,EAAA,gBAAIC,GAAAA,QAAsBlB,WAC1B,IAAIU,EAAoBR,EAAMS,cAA9BM,EAAAhB,MAAAkB,KAAA,iBACAnB,EAAKY,iBACDM,EAAoBD,EAAAhB,MAAAkB,KAAA,mBAEhBT,EAAAA,eAAAA,GAAAA,QAAcA,WACdU,IAAAA,EAAOH,EAAAhB,MAAAkB,KAAcH,gBAJ7BK,EAAAC,KAAAC,MAAAC,aAAAd,cAOAO,GAAEI,EAAWI,eAAgBC,GAA7B,CACA1B,IAAK2B,EAALN,EAAAK,GAAAE,WAAAC,UAzBwBR,EAAAK,GAwChBT,EAAAA,sBAAwBa,GAAiBC,SAXjDP,aAAWd,aAAXY,KAAAU,UAAAX,KAEIJ,EAAA,gBAAIgB,GAAAA,QAAAA,WACJjC,aAAKkC,aAAiBD,OAE1BhB,EAAAA,kBAAAkB,GAAA,QAAA,WACIzC,SAAIgC,QAAAA,SAAY,aAChBU,SAAIf,EACJgB,SAAIhB,OAKJG,iBAAAA,SAAad,EAAoBsB,GACpC,IACDf,EAAEqB,SACEd,EAAAA,0BAAAS,EAAAM,0BACHC,EAFDC,gCAAAR,EAAAQ,gCAGAxB,EAAEyB,8BAA8BT,EAAMS,8BAClChD,EAAAA,mBAAiBiD,EAAsBC,mBACnCR,EAAAA,eAASH,EAD0BY,eAEnCR,EAAAA,aAASf,KAAAU,YAF0BC,EAAvCL,WAAAC,GAAAI,EAAAa,sBAKPN,EArD2BO,yBAAAzB,KAAAU,WAAAC,EAAAL,WAAAC,KAmExBW,EAAOQ,cAAgBtB,EAAUuB,MAAM,KAAK,GAZhDf,EAAAA,UAAkBD,EAAAa,mBACd,IAAAI,EAAIlD,OAAJmD,KAAA,gDAEAX,GADAvB,EAAAA,sBAAaqB,EAAbV,WAAAC,IAAAE,SACAS,aAAOD,aAAAA,MACAE,IAAPD,IACAA,EAAOE,EAAAA,QAAAA,SAAgCT,IAEvCO,IAAAA,EAAAlB,KAAwBW,MAAAA,aAAoBY,cAC5CL,EAAAY,eAAsB1B,YAGfqB,EAAAA,GACPP,aAAOQ,aAAgBtB,KAAUuB,UAAjCI,IAIApC,EAAAqC,KAAAJ,EAAI1B,EAAAA,SAAAA,GACA,IAAA+B,EAAI7B,KAAc8B,MAAAA,GAEjBC,EAAAA,YADG/B,EAAYhB,aACfgD,KAAA,KACDzC,EAAAqC,KAAID,OAAAA,KAAJ,sCAA+C3C,EAA/C,SAAAiD,GACAC,QAAIP,IAAAA,oDAEA7B,SAAAA,QAAAA,SAAad,GAChB0B,SAAA,EACJC,SAAA,OAKGwB,cAAA,SAAIJ,GACJxC,IAAAA,EAAiBkC,KAAjB5B,MAAAC,aAAAd,cACIkD,GAAAA,EAAQE,eAAIpC,GACf,OAFD2B,EAAA3B,IAOHqC,OAAA,SAXDhE,GAYHE,KA9F2BW,IAAAoD,QA0GxB/D,KAAKH,WAAWC,GAVpB8D,KAAAA,MAAAA,QACI5D,KAAAM,OAAI8C,IAGH5C,kBAAAwD,EAAAC,UApGuB,yEAkHpB,6DAVRH,wJACI,SACA,iEACA,wGACA,iCA5GwB,OAyHpB,mCAVRtD,oCA/GJ,uCA4HY,uCACA,sCA4BR0D,sIA1BQ,QACA,WACA,UACA,oDACA,0DACA,uEACA,wEACA,0EACA,qEACA,0BACA,kNACA,QACA,0BACA,uNACA,QACA,QACA,YACA,WACA,WACA,+FACA,UACFT,KAAK,kBAKXS,cAAe1E","file":"../../../scripts/mvc/toolshed/repository-queue-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function(options) {\n        var that = this;\n        this.model = new toolshed_model.RepoQueue();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function(options) {\n        var that = this;\n        var repo_queue_template = that.templateRepoQueue;\n        var repositories = that.model.models;\n        that.$el.html(\n            repo_queue_template({\n                title: \"Repository Installation Queue\",\n                repositories: repositories,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\".install_one\").on(\"click\", function() {\n            var repository_metadata = that.loadFromQueue($(this).attr(\"data-repokey\"));\n            that.installFromQueue(repository_metadata, $(this).attr(\"data-repokey\"));\n        });\n        $(\".remove_one\").on(\"click\", function() {\n            var queue_key = $(this).attr(\"data-repokey\");\n            var repo_queue = JSON.parse(localStorage.repositories);\n            if (repo_queue.hasOwnProperty(queue_key)) {\n                var repository_id = repo_queue[queue_key].repository.id;\n                delete repo_queue[queue_key];\n                $(`#queued_repository_${repository_id}`).remove();\n            }\n            localStorage.repositories = JSON.stringify(repo_queue);\n        });\n        $(\"#clear_queue\").on(\"click\", () => {\n            localStorage.repositories = \"{}\";\n        });\n        $(\"#from_workflow\").on(\"click\", () => {\n            Backbone.history.navigate(\"workflows\", {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    installFromQueue: function(repository_metadata, queue_key) {\n        var that = this;\n        var params = Object();\n        params.install_tool_dependencies = repository_metadata.install_tool_dependencies;\n        params.install_repository_dependencies = repository_metadata.install_repository_dependencies;\n        params.install_resolver_dependencies = repository_metadata.install_resolver_dependencies;\n        params.tool_panel_section = repository_metadata.tool_panel_section;\n        params.shed_tool_conf = repository_metadata.shed_tool_conf;\n        params.repositories = JSON.stringify([\n            [repository_metadata.repository.id, repository_metadata.changeset_revision]\n        ]);\n        params.tool_shed_repository_ids = JSON.stringify([repository_metadata.repository.id]);\n        params.tool_shed_url = queue_key.split(\"|\")[0];\n        params.changeset = repository_metadata.changeset_revision;\n        var url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        $(`#queued_repository_${repository_metadata.repository.id}`).remove();\n        if (localStorage.repositories) {\n            if (queue_key === undefined) {\n                queue_key = toolshed_util.queueKey(repository_metadata);\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                delete repository_queue[queue_key];\n                localStorage.repositories = JSON.stringify(repository_queue);\n            }\n        }\n\n        $.post(url, params, data => {\n            var iri_params = JSON.parse(data);\n            var repositories = iri_params.repositories;\n            var new_route = `status/r/${repositories.join(\"|\")}`;\n            $.post(`${Galaxy.root}admin_toolshed/install_repositories`, iri_params, data => {\n                console.log(\"Initializing repository installation succeeded\");\n            });\n            Backbone.history.navigate(new_route, {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    loadFromQueue: function(queue_key) {\n        var repository_queue = JSON.parse(localStorage.repositories);\n        if (repository_queue.hasOwnProperty(queue_key)) {\n            return repository_queue[queue_key];\n        }\n        return undefined;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n        this.model.fetch();\n        this.render(options);\n    },\n\n    templateRepoQueue: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n            '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th class=\"datasetRow\">Name</th>',\n            '<th class=\"datasetRow\">Owner</th>',\n            '<th class=\"datasetRow\">Revision</th>',\n            '<th class=\"datasetRow\">ToolShed</th>',\n            '<th class=\"datasetRow\">Install</th>',\n            '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n            \"</tr>\",\n            \"</thead>\",\n            \"<tbody>\",\n            \"<% _.each(repositories, function(repository) { %>\",\n            '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n            \"</td>\",\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoQueueView: View\n};\n"]}