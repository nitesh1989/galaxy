{"version":3,"sources":["mvc/toolshed/categories-view.js"],"names":["ToolShedCategories","Backbone","View","extend","el","defaults","tool_shed","initialize","options","shed","replace","this","_","model","_toolshedModel2","default","Categories","listenTo","render","url","fetch","categories","models","queue","_util2","category_list_template","templateCategoryList","$el","$","bindEvents","that","autocomplete","source","request","response","shed_url","term","post","base_url","params","data","log","result_list","shedParser","event","ui","tsr_id","Galaxy","console","new_route","trigger","reDraw","empty","tool_shed_url","CategoryView","join"],"mappings":"+QAGIA,EAAqBC,SAASC,KAAKC,QACnCC,GAAI,UAEJC,UACIC,UAAW,mCAGfC,WAAY,SAASC,GACjB,IACIC,EAAOD,EAAQF,UAAUI,QAAQ,MAAO,OAC5CC,KAAKH,QAAUI,EAAEP,SAASM,KAAKH,SAAWA,EAASG,KAAKN,UACxDM,KAAKE,MAAQ,IAAIC,EAAAC,QAAeC,WAChCL,KAAKM,SAASN,KAAKE,MAAO,OAAQF,KAAKO,QACvCP,KAAKE,MAAMM,IAASR,KAAKE,MAAMM,IAA/B,kBAAoDR,KAAKH,QAAQF,UAbrEN,KAAAA,MAAAA,UAAqBC,EACrBG,KAAIS,MAAAO,SAGAd,OAAAA,SAAAA,GADMK,KAHgCH,QAAAI,EAAAT,OAAAQ,KAAAH,QAAAA,GAoBtCG,KAAKH,QAAQa,WAAaV,KAAKE,MAAMS,OAbzCf,KAAAA,QAAYgB,MAAAC,EAAAT,QAASP,cACjB,IAAAiB,EAAAd,KAAAe,qBACAf,KAAAgB,IAAIlB,KAAAA,EAAyBC,KAAQF,UACrCoB,EAAA,WAAKpB,IAAL,WAAe,QACfG,KAAAkB,cAGAA,WAAA,WACA,IAAAC,EAAKjB,KACRe,EAhByC,eAAAG,cA+BlCC,OAAQ,SAASC,EAASC,GAb1B,IAAAC,EAAAL,EAAStB,MAASF,UAAAI,QAAA,OAAA,KACjBF,EAAYL,OAAYK,KAAxBA,uBACAA,GACAA,KAAQe,EAAQa,KACjBX,cAAAA,GAEFG,EAAAS,KAAFC,EAAiBC,EAAY,SAAAC,GACxBX,QAALY,IAAAD,GAzBsC,IAAAE,EAAAlB,EAAAT,QAAA4B,WAAAH,GAyC1BN,EAASQ,MAXrBd,UAAE,EACEI,OAAAA,SAAQY,EAAAC,GACJ,IAAAC,EAAIX,EAAAA,KAAWL,MAMfF,GALIU,OAAcS,KAERd,EAAQG,MADL9B,UAIbsB,gBAAyBE,EAAAjB,MAAAP,UAAzBsB,MAAiCkB,GAC7BE,SAAAA,QAAQP,SAARQ,GACAC,SAAIR,EACJR,SAAAA,QAMJiB,OAAA,SAAA3C,GACAG,KAAAgB,IAAAyB,QACIC,KAAAA,MAAAA,IAAAA,KAAAA,MAAevB,IAAfuB,kBADS1C,KAAAH,QAAAF,UAETwC,KAAAA,WAAAA,IAGJ7C,qBAAAA,EAAAA,UAEIS,0BAFiC,+CAIxC,6CA3ByB,WA9BQ,yEA0ElC,4HAbRyC,wJACI,SACA,wDACA,+DAhEsC,4BAgFlC,8LAbRzB,UAnEJ,SAmFY,8CACA,uBAyBR4B,iCAvBQ,OACA,gBACA,uBACA,wBACA,QACA,WACA,gDACA,OACA,OACA,sGACA,QACA,8CACA,+CACA,QACA,YACA,WACA,SACA,UACFC,KAAK,kBAKXD,aAActD","file":"../../../scripts/mvc/toolshed/categories-view.js","sourcesContent":["import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nimport \"libs/jquery/jquery-ui\";\nvar ToolShedCategories = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: {\n        tool_shed: \"https://toolshed.g2.bx.psu.edu/\"\n    },\n\n    initialize: function(options) {\n        var self = this;\n        var shed = options.tool_shed.replace(/\\//g, \"%2f\");\n        this.options = _.defaults(this.options || options, this.defaults);\n        this.model = new toolshed_model.Categories();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.url = `${this.model.url}?tool_shed_url=${this.options.tool_shed}`;\n        this.model.tool_shed = shed;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        this.options.categories = this.model.models;\n        this.options.queue = toolshed_util.queueLength();\n        var category_list_template = this.templateCategoryList;\n        this.$el.html(category_list_template(this.options));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#search_box\").autocomplete({\n            source: function(request, response) {\n                var shed_url = that.model.tool_shed.replace(/%2f/g, \"/\");\n                var base_url = `${Galaxy.root}api/tool_shed/search`;\n                var params = {\n                    term: request.term,\n                    tool_shed_url: shed_url\n                };\n                $.post(base_url, params, data => {\n                    console.log(data);\n                    var result_list = toolshed_util.shedParser(data);\n                    response(result_list);\n                });\n            },\n            minLength: 3,\n            select: function(event, ui) {\n                var tsr_id = ui.item.value;\n                var api_url = `${Galaxy.root}api/tool_shed/repository`;\n                var params = {\n                    tool_shed_url: that.model.tool_shed,\n                    tsr_id: tsr_id\n                };\n                var new_route = `repository/s/${that.model.tool_shed}/r/${tsr_id}`;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            }\n        });\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.model.url = `${this.model.url}?tool_shed_url=${this.options.tool_shed}`;\n        this.initialize(options);\n    },\n\n    templateCategoryList: _.template(\n        [\n            '<style type=\"text/css\">',\n            \".ui-autocomplete { background-color: #fff; }\",\n            \"li.ui-menu-item { list-style-type: none; }\",\n            \"</style>\",\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\" style=\"layout: inline;\">Categories in <%= tool_shed.replace(/%2f/g, \"/\") %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"list_categories\">',\n            '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">',\n            '<span class=\"ui-widget\" >',\n            '<input class=\"search-box-input\" id=\"search_box\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" name=\"search\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />',\n            \"</span>\",\n            \"</div>\",\n            '<div style=\"clear: both; margin-top: 1em;\">',\n            '<table class=\"grid\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            \"<th>Name</th>\",\n            \"<th>Description</th>\",\n            \"<th>Repositories</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            \"<% _.each(categories, function(category) { %>\",\n            \"<tr>\",\n            \"<td>\",\n            '<a href=\"#/category/s/<%= tool_shed %>/c/<%= category.get(\"id\") %>\"><%= category.get(\"name\") %></a>',\n            \"</td>\",\n            '<td><%= category.get(\"description\") %></td>',\n            '<td><%= category.get(\"repositories\") %></td>',\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    CategoryView: ToolShedCategories\n};\n"]}