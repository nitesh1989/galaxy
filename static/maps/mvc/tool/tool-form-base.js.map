{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["_formView2","default","extend","initialize","options","self","this","deferred","_deferred2","prototype","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","collection","$el","on","callback","reset","process","then","_render","_destroy","execute","attributes","set","title","fixed_title","name","description","version","operations","hide_operations","_operations","onchange","off","emit","debug","render","message","id","persistent","show_message","status","versions_button","_uiMisc2","ButtonMenu","icon","narrow","tooltip","versions","length","i","addMenu","onclick","replace","hide","menu_button","open","biostar_url","window","location","origin","root","user","prompt","href","requirements","requirements_visible","portlet","collapsed","expand","update","_templateRequirements","sharable_url","_","each","webhooks","webhook","activate","config","function","Function","menu","$","append","_templateHelp","citations","$citations","_citationModel2","ToolCitationCollection","_footer","tool_id","CitationListView","citation_list_view","$tmpl","addClass","help","find","attr","nreq","requirements_message","req","requirements_link","text"],"mappings":"4WASeA,EAAAC,QAASC,QACpBC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,SAAW,IAAAC,EAAAP,QAChBD,EAAAC,QAASQ,UAAUN,WAAWO,KAAKJ,KAAMF,GAGzCE,KAAKK,QAAQL,KAAKM,MAAMC,IAAI,iBAGxBP,KAAKM,MAAMC,IAAI,sBAAwBC,OAAOC,QAAUD,OAAOC,OAAOC,kBACtEV,KAAKW,SAASH,OAAOC,OAAOC,iBAAiBE,WAAY,SAAU,WAC/Db,EAAKO,MAAMC,IAAI,WAAfR,KAIRC,KAAKa,IAAIC,GAAG,SAhBL,WACXjB,EAAAA,cAKIQ,QAAA,SAAAU,GACA,IAAAhB,EAAKM,MAiBLU,EAAWA,GAAYf,KAAKM,MAAMC,IAAI,gBAdtCP,KAAIC,SAAAe,QACAhB,KAAAC,SAAKU,QAASH,SAAAA,GACVT,EAAKO,EAALP,GACHkB,EAFDC,KAAA,WAGHnB,EAAAoB,eAIAnB,KAFDmB,WAOAC,SAAA,WACAL,IAAAA,EAAAA,KACAf,KAAAa,IAAIE,MAAAA,OACAf,KAAAC,SAAKA,QAASe,WACdtB,EAAAC,QAAKM,UAASoB,OAAQjB,KAAAL,GAClBgB,OAAAA,KAAAA,MAASE,6BAAT,oBAKPE,QARD,WASI,IAAApB,EAAAC,KACHF,EAAAE,KAAAM,MAAAgB,WACJtB,KApC0BM,MAAAiB,KAqDnBC,MAfR1B,EAAA2B,aAAA,MACU3B,EAAA4B,KADV,QACqB5B,EAAA6B,YADrB,oBACqB7B,EAAA8B,QADrB,IAEIC,YAAW/B,EAAXgC,iBAAA9B,KAAA+B,cACAC,SAASC,WACTlC,EAAKE,SAASoB,QACVtB,EAAAE,SAAAoB,QAASlB,SAAAA,GACTM,EAAOyB,MAAKC,IAAM,aAAlB1B,CAAkBQ,EAAAlB,QAI1BC,KAAAoC,SACAjB,KAASb,MAAAC,IAAA,gBACLP,KAAID,IAAAA,OACAD,EAAAA,UACCQ,SAAU,uBACXkB,OACI1B,KAAQ2B,YAIR1B,KAAAA,cACAA,KAAAA,QAAKE,QACDF,OAAAA,UACHsC,QAAAA,sBAFDvC,EAAA4B,KAEC,aAFD5B,EAAA8B,QAEC,SAFD9B,EAAAwC,GAEC,KACJC,YAAA,IAELvC,KAAAwC,cAAA,GAQAT,YAAKS,WAEGC,IAAAA,EAAAA,KACAJ,EAAAA,KAAAA,MAAAA,WAGRK,EAAA,IAAoBC,EAAAhD,QAApBiD,YA9EuBC,KAAA,WAyFnBrB,OAAS1B,EAAQgD,QAAU,YAAe,KARlDC,QAAA,gCAEI,IAAAjD,EAAIC,iBAAJD,EAAAkD,UAAAlD,EAAAkD,SAAAC,OAAA,EACA,IAAInD,IAAAA,KAAUA,EAAKQ,SAAMgB,CAUjB,IAAIM,EAAU9B,EAAQkD,SAASE,GARvCtB,GAAA9B,EAAA8B,SACIc,EAAkBS,SACZ3B,MAAAA,aAD8BI,EAE3B9B,QAAQgD,EACjBC,KAAS,UAHbK,QAAA,WAMIrD,EAAcD,MAAQkD,IAAAA,KAAUlD,EAAAwC,GAAAe,QAAAvD,EAAA8B,QAAA5B,KAAA4B,UACxBA,EAAAA,MAAU9B,IAAQkD,UAAtBhD,KAAA4B,SACIA,EAAAA,kBAMQc,EAAA7B,IAAAyC,OAIH,IAAAC,EAAA,IAAAZ,EAAAhD,QAAAiD,YATmBC,KAAA,gBAW3BrB,OAAA1B,EAAAgD,QAAA,WAAA,KACJC,QAAA,2BA4FY,OA1FbL,EAAAA,cACHa,EAAAJ,SAUON,KAAM,qBARdrB,MAAA,YACI+B,QAAAA,WACAV,OAAMW,KAAA1D,EAD0B2D,YAChCZ,mBADgCU,EAApCJ,SAKIrD,KAAAA,YACAyD,MAAAA,SACIV,QAAAA,WACArB,OAAOgC,KAAA1D,EAFS2D,YAEhBjC,yBAFgB1B,EAAA4B,UAAA6B,EAApBJ,SAOAI,KAAAA,WACIV,MAAAA,QACArB,QAAAA,WACA4B,OACIM,mCACHA,OAAAC,SAAAC,OAAAnD,OAAAoD,KAFDT,gBAECtD,EAAAwC,OAMLc,OAAAA,MAAS3C,OAAAqD,KAAAvD,IAAA,aACLwD,EAAAA,SAIHlB,KAAA,cARLrB,MAAA,WAgBQ4B,QAAS,WALjBM,OAAAC,SAAAK,KAAAvD,OAAAoD,KAAA,aAAA/D,EAAAwC,GAAA,eAMYoB,EAAAA,cAAOC,EAAPM,aAAiCJ,OAAjC,GACHN,EAAAJ,SALeN,KAApB,iBAOHrB,MAAA,eAOO4B,QAAS,YALjBpD,KAAAkE,sBAAAnE,EAAAoE,QAAAC,WACYH,KAAAA,sBAAwBA,EAChCV,EAAYJ,QAAQkB,SAChBxB,EAAMR,QAAAiC,QACC/B,YAAA,EACPa,QAASrD,EAAAwE,sBAAWzE,GACZ2C,OAAMyB,WAGNnE,KAAAA,sBAAoB,EAChBwC,EAAAA,QAAAA,QAAYF,QADI,SAQvBvC,EAAA0E,cACJjB,EAAAJ,SAhBeN,KAApB,mBAkBHrB,MAAA,mBAOO4B,QAAS,WALjBM,OAAAF,KAAA1D,EAAA0E,iBAMYd,EAAAA,QAAAA,8BAAoBc,SAAAA,GACvBC,EAAAC,KAAAC,EAAA,SAAAC,GALLA,EAAAC,UAAAD,EAAAE,OAAAC,UAOHxB,EAAAJ,SAOeN,KAAM+B,EAAQE,OAAOjC,KALrCrB,MAAAoD,EAAAE,OAAAtD,MACU4B,QAAA,WACW,IAAA4B,SAAW,UAAAJ,EAAAE,OAAAC,SACpBH,CAAQC,WACYI,KAAA1B,EAQvBP,SAAAN,IAKLuC,QAAAA,WACAjC,IAAAA,EAAAA,KAAUN,MAAAA,WAFP7B,EAAPqE,EAAA,UAAAC,OAAAnF,KAAAoF,cAAAtF,IAIH,GAlN0BA,EAAAuF,UAAA,CAyNnB,IAAIC,EAAaJ,EAAE,UAL3BG,EAAA,IAAAE,EAAA5F,QAAA6F,uBACAC,EAASC,QAAA5F,EAAWwC,GACShB,IAAAA,EAAAA,QAAzBqE,kBACI9E,GAAAA,EACAf,WAAQuF,IAEJA,SACJA,EAAAA,QACAxE,EAAAsE,OAAIS,GAEAhF,OAAAA,GAIJC,cAAAA,SAAWyE,GACd,IAAAO,EAAAX,EAAA,UACDY,SAAA,gBApOuBX,OAAArF,EAAAiG,MAuO3B,OAKIF,EAAMG,KAAK,KAAKC,KAAK,SAAU,UALnCJ,GAKIA,sBAAA,SAAqB/F,GACrB,IAAAoG,EAAOL,EAAP5B,aAAAhB,OACH,GA9O0BiD,EAAA,EAAA,CAmPnB,IAAIC,EAAuB,sBAHnC5B,EAAAA,KAAAA,EAAAA,aAAuB,SAAA6B,EAAAlD,GACfgD,GACAA,EAAJxE,MACQyE,EAAAA,QAAAA,aAAuBC,EAAAxE,QAAvBuE,IAAJ,KACEzB,EAAK5E,EAAQmE,EAAAA,KAAff,GAA6BgD,EAACE,EAAD,QAAY,MAKxC,IAAAC,EALDnB,EAAA,QAMAe,KAAII,SAAAA,UAIJJ,KAAA,OAAS,iDAIZK,KAAA,QACD,OAAOpB,EAAA,WACVC,OAAAgB,EADU,YAHEhB,OAAOkB,GACPlB,OAAO,0BAEhB,MAAO","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormBase from \"mvc/form/form-view\";\nimport CitationModel from \"mvc/citation/citation-model\";\nimport CitationView from \"mvc/citation/citation-view\";\nexport default FormBase.extend({\n    initialize: function(options) {\n        var self = this;\n        this.deferred = new Deferred();\n        FormBase.prototype.initialize.call(this, options);\n\n        // optional model update\n        this._update(this.model.get(\"initialmodel\"));\n\n        // listen to history panel\n        if (this.model.get(\"listen_to_history\") && parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n            this.listenTo(parent.Galaxy.currHistoryPanel.collection, \"change\", () => {\n                self.model.get(\"onchange\")();\n            });\n        }\n        // destroy dom elements\n        this.$el.on(\"remove\", () => {\n            self._destroy();\n        });\n    },\n\n    /** Allows tool form variation to update tool model */\n    _update: function(callback) {\n        var self = this;\n        callback = callback || this.model.get(\"buildmodel\");\n        if (callback) {\n            this.deferred.reset();\n            this.deferred.execute(process => {\n                callback(process, self);\n                process.then(() => {\n                    self._render();\n                });\n            });\n        } else {\n            this._render();\n        }\n    },\n\n    /** Wait for deferred build processes before removal */\n    _destroy: function() {\n        var self = this;\n        this.$el.off().hide();\n        this.deferred.execute(() => {\n            FormBase.prototype.remove.call(self);\n            Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n        });\n    },\n\n    /** Build form */\n    _render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.model.set({\n            title:\n                options.fixed_title ||\n                `<b>${options.name}</b> ${options.description} (Galaxy Version ${options.version})`,\n            operations: !options.hide_operations && this._operations(),\n            onchange: function() {\n                self.deferred.reset();\n                self.deferred.execute(process => {\n                    self.model.get(\"postchange\")(process, self);\n                });\n            }\n        });\n        this.render();\n        if (!this.model.get(\"collapsible\")) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-margin-top-large\")\n                    .append(this._footer())\n            );\n        }\n        this.show_message &&\n            this.message.update({\n                status: \"success\",\n                message: `Now you are using '${options.name}' version ${options.version}, id '${options.id}'.`,\n                persistent: false\n            });\n        this.show_message = true;\n    },\n\n    /** Create tool operation menu */\n    _operations: function() {\n        var self = this;\n        var options = this.model.attributes;\n\n        // button for version selection\n        var versions_button = new Ui.ButtonMenu({\n            icon: \"fa-cubes\",\n            title: (!options.narrow && \"Versions\") || null,\n            tooltip: \"Select another tool version\"\n        });\n        if (!options.sustain_version && options.versions && options.versions.length > 1) {\n            for (var i in options.versions) {\n                var version = options.versions[i];\n                if (version != options.version) {\n                    versions_button.addMenu({\n                        title: `Switch to ${version}`,\n                        version: version,\n                        icon: \"fa-cube\",\n                        onclick: function() {\n                            // here we update the tool version (some tools encode the version also in the id)\n                            self.model.set(\"id\", options.id.replace(options.version, this.version));\n                            self.model.set(\"version\", this.version);\n                            self._update();\n                        }\n                    });\n                }\n            }\n        } else {\n            versions_button.$el.hide();\n        }\n\n        // button for options e.g. search, help\n        var menu_button = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: (!options.narrow && \"Options\") || null,\n            tooltip: \"View available options\"\n        });\n        if (options.biostar_url) {\n            menu_button.addMenu({\n                icon: \"fa-question-circle\",\n                title: \"Question?\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/p/new/post/`);\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-search\",\n                title: \"Search\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/local/search/page/?q=${options.name}`);\n                }\n            });\n        }\n        menu_button.addMenu({\n            icon: \"fa-share\",\n            title: \"Share\",\n            onclick: function() {\n                prompt(\n                    \"Copy to clipboard: Ctrl+C, Enter\",\n                    `${window.location.origin + Galaxy.root}root?tool_id=${options.id}`\n                );\n            }\n        });\n\n        // add admin operations\n        if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n            menu_button.addMenu({\n                icon: \"fa-download\",\n                title: \"Download\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}api/tools/${options.id}/download`;\n                }\n            });\n        }\n\n        // button for version selection\n        if (options.requirements && options.requirements.length > 0) {\n            menu_button.addMenu({\n                icon: \"fa-info-circle\",\n                title: \"Requirements\",\n                onclick: function() {\n                    if (!this.requirements_visible || self.portlet.collapsed) {\n                        this.requirements_visible = true;\n                        self.portlet.expand();\n                        self.message.update({\n                            persistent: true,\n                            message: self._templateRequirements(options),\n                            status: \"info\"\n                        });\n                    } else {\n                        this.requirements_visible = false;\n                        self.message.update({ message: \"\" });\n                    }\n                }\n            });\n        }\n\n        // add toolshed url\n        if (options.sharable_url) {\n            menu_button.addMenu({\n                icon: \"fa-external-link\",\n                title: \"See in Tool Shed\",\n                onclick: function() {\n                    window.open(options.sharable_url);\n                }\n            });\n        }\n\n        // add tool menu webhooks\n        $.getJSON(\"/api/webhooks/tool-menu/all\", webhooks => {\n            _.each(webhooks, webhook => {\n                if (webhook.activate && webhook.config.function) {\n                    menu_button.addMenu({\n                        icon: webhook.config.icon,\n                        title: webhook.config.title,\n                        onclick: function() {\n                            var func = new Function(\"options\", webhook.config.function);\n                            func(options);\n                        }\n                    });\n                }\n            });\n        });\n\n        return {\n            menu: menu_button,\n            versions: versions_button\n        };\n    },\n\n    /** Create footer */\n    _footer: function() {\n        var options = this.model.attributes;\n        var $el = $(\"<div/>\").append(this._templateHelp(options));\n        if (options.citations) {\n            var $citations = $(\"<div/>\");\n            var citations = new CitationModel.ToolCitationCollection();\n            citations.tool_id = options.id;\n            var citation_list_view = new CitationView.CitationListView({\n                el: $citations,\n                collection: citations\n            });\n            citation_list_view.render();\n            citations.fetch();\n            $el.append($citations);\n        }\n        return $el;\n    },\n\n    /** Templates */\n    _templateHelp: function(options) {\n        var $tmpl = $(\"<div/>\")\n            .addClass(\"ui-form-help\")\n            .append(options.help);\n        $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n        return $tmpl;\n    },\n\n    _templateRequirements: function(options) {\n        var nreq = options.requirements.length;\n        if (nreq > 0) {\n            var requirements_message = \"This tool requires \";\n            _.each(options.requirements, (req, i) => {\n                requirements_message +=\n                    req.name +\n                    (req.version ? ` (Version ${req.version})` : \"\") +\n                    (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n            });\n            var requirements_link = $(\"<a/>\")\n                .attr(\"target\", \"_blank\")\n                .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                .text(\"here\");\n            return $(\"<span/>\")\n                .append(`${requirements_message}. Click `)\n                .append(requirements_link)\n                .append(\" for more information.\");\n        }\n        return \"No requirements found.\";\n    }\n});\n"]}