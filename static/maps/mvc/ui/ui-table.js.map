{"version":3,"sources":["mvc/ui/ui-table.js"],"names":["View","Backbone","extend","initialize","options","this","_utils2","default","merge","content","onchange","ondblclick","onconfirm","cls","selectable","cls_tr","setElement","_template","$thead","$","row","_row","addHeader","$el","$tbody","append","appendHeader","events","add","width","align","wrapper","css","id","fade","_commit","prepend","get","del","item","find","length","remove","_refresh","delAll","empty","row_count","value","new_value","before","attr","undefined","removeClass","addClass","after","size","hide","fadeIn","_onclick","old_value","e","closest","_ondblclick","$tmessage","show"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-table.js","sourcesContent":["/** This class creates a ui table element. */\nimport Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.options = Utils.merge(options, {\n            content: \"No content available.\",\n            onchange: null,\n            ondblclick: null,\n            onconfirm: null,\n            cls: \"ui-table\",\n            selectable: true,\n            cls_tr: \"\"\n        });\n        this.setElement(this._template());\n        this.$thead = this.$(\"thead\");\n        this.$tbody = this.$(\"tbody\");\n        this.$tmessage = this.$(\"tmessage\");\n        this.row = this._row();\n        this.row_count = 0;\n    },\n\n    events: {\n        click: \"_onclick\",\n        dblclick: \"_ondblclick\"\n    },\n\n    /** Add cell to header row */\n    addHeader: function($el) {\n        this.row.append($(\"<th/>\").append($el));\n    },\n\n    /** Append header row to table */\n    appendHeader: function() {\n        this.$thead.append(this.row);\n        this.row = $(\"<tr/>\");\n    },\n\n    /** Add cell to row */\n    add: function($el, width, align) {\n        var wrapper = $(\"<td/>\");\n        if (width) {\n            wrapper.css(\"width\", width);\n        }\n        if (align) {\n            wrapper.css(\"text-align\", align);\n        }\n        this.row.append(wrapper.append($el));\n    },\n\n    /** Append row to table */\n    append: function(id, fade) {\n        this._commit(id, fade, false);\n    },\n\n    /** Prepend row to table */\n    prepend: function(id, fade) {\n        this._commit(id, fade, true);\n    },\n\n    /** Helper to get row element */\n    get: function(id) {\n        return this.$(`#${id}`);\n    },\n\n    /** Delete row by id */\n    del: function(id) {\n        var item = this.$tbody.find(`#${id}`);\n        if (item.length > 0) {\n            item.remove();\n            this.row_count--;\n            this._refresh();\n        }\n    },\n\n    /** Delete all rows */\n    delAll: function() {\n        this.$tbody.empty();\n        this.row_count = 0;\n        this._refresh();\n    },\n\n    /** Set a value i.e. selects/highlights a particular row by id */\n    value: function(new_value) {\n        if (this.options.selectable) {\n            this.before = this.$tbody.find(\".current\").attr(\"id\");\n            if (new_value !== undefined) {\n                this.$tbody.find(\"tr\").removeClass(\"current\");\n                if (new_value) {\n                    this.$tbody.find(`#${new_value}`).addClass(\"current\");\n                }\n            }\n            var after = this.$tbody.find(\".current\").attr(\"id\");\n            if (after === undefined) {\n                return null;\n            } else {\n                if (after != this.before && this.options.onchange) {\n                    this.options.onchange(new_value);\n                }\n                return after;\n            }\n        }\n    },\n\n    /** Return the number of rows */\n    size: function() {\n        return this.$tbody.find(\"tr\").length;\n    },\n\n    /** Helper to append rows */\n    _commit: function(id, fade, prepend) {\n        this.del(id);\n        this.row.attr(\"id\", id);\n        if (prepend) {\n            this.$tbody.prepend(this.row);\n        } else {\n            this.$tbody.append(this.row);\n        }\n        if (fade) {\n            this.row.hide();\n            this.row.fadeIn();\n        }\n        this.row = this._row();\n        this.row_count++;\n        this._refresh();\n    },\n\n    /** Helper to create new row */\n    _row: function() {\n        return $(`<tr class=\"${this.options.cls_tr}\"></tr>`);\n    },\n\n    /** Handles onclick events */\n    _onclick: function(e) {\n        var old_value = this.value();\n        var new_value = $(e.target)\n            .closest(\"tr\")\n            .attr(\"id\");\n        if (new_value != \"\") {\n            if (new_value && old_value != new_value) {\n                if (this.options.onconfirm) {\n                    this.options.onconfirm(new_value);\n                } else {\n                    this.value(new_value);\n                }\n            }\n        }\n    },\n\n    /** Handles ondblclick events */\n    _ondblclick: function(e) {\n        var value = this.value();\n        if (value && this.options.ondblclick) {\n            this.options.ondblclick(value);\n        }\n    },\n\n    /** Refresh helper */\n    _refresh: function() {\n        if (this.row_count == 0) {\n            this.$tmessage.show();\n        } else {\n            this.$tmessage.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return `<div><table class=\"${this.options.cls}\"><thead/><tbody/></table><tmessage>${this.options\n            .content}</tmessage><div>`;\n    }\n});\n\nexport default {\n    View: View\n};\n"]}