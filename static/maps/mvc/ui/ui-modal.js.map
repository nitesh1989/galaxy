{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["View","Backbone","extend","className","optionsDefault","container","body","backdrop","title","cls","closing_events","initialize","options","this","_","defaults","$","prepend","el","render","show","visible","self","document","on","e","hide","$backdrop","canceled","$el","fadeOut","closing_callback","off","html","_template","$header","$body","$footer","$buttons","$dialog","removeClass","addClass","find","buttonList","counter","each","$button","name","callback","text","click","append","removeAttr","title_separator","css","height","window","width","getButton","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["var View = Backbone.View.extend({\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault: {\n        container: \"body\",\n        title: \"ui-modal\",\n        cls: \"ui-modal\",\n        body: \"\",\n        backdrop: true,\n        height: null,\n        width: null,\n        closing_events: false,\n        closing_callback: null,\n        title_separator: true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        $(this.options.container).prepend(this.el);\n        // optional render\n        if (options) {\n            this.render();\n        }\n    },\n\n    /**\n     * Displays modal\n    */\n    show: function(options) {\n        if (options) {\n            this.options = _.defaults(options, this.optionsDefault);\n            this.render();\n        }\n        if (!this.visible) {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            if (this.options.closing_events) {\n                var self = this;\n                $(document).on(\"keyup.ui-modal\", e => {\n                    if (e.keyCode == 27) {\n                        self.hide(true);\n                    }\n                });\n                this.$backdrop.on(\"click\", () => {\n                    self.hide(true);\n                });\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n    */\n    hide: function(canceled) {\n        this.visible = false;\n        this.$el.fadeOut(\"fast\");\n        if (this.options.closing_callback) {\n            this.options.closing_callback(canceled);\n        }\n        $(document).off(\"keyup.ui-modal\");\n        this.$backdrop.off(\"click\");\n    },\n\n    /**\n     * Render modal\n    */\n    render: function() {\n        var self = this;\n        this.$el.html(this._template());\n\n        // link elements\n        this.$header = this.$(\".modal-header\");\n        this.$dialog = this.$(\".modal-dialog\");\n        this.$body = this.$(\".modal-body\");\n        this.$footer = this.$(\".modal-footer\");\n        this.$backdrop = this.$(\".modal-backdrop\");\n        this.$buttons = this.$(\".buttons\");\n\n        if (this.options.body == \"progress\") {\n            this.options.body = $(\n                '<div class=\"progress progress-striped active\">' +\n                    '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                    \"</div>\"\n            );\n        }\n\n        // fix main content\n        this.$el\n            .removeClass()\n            .addClass(\"modal\")\n            .addClass(this.options.cls);\n        this.$header.find(\".title\").html(this.options.title);\n        this.$body.html(this.options.body);\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if (this.options.buttons) {\n            var counter = 0;\n            $.each(this.options.buttons, (name, callback) => {\n                var $button = $(\"<button/>\")\n                    .attr(\"id\", `button-${counter++}`)\n                    .text(name)\n                    .click(callback);\n                self.$buttons.append($button).append(\"&nbsp;\");\n                self.buttonList[name] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[(this.options.backdrop && \"addClass\") || \"removeClass\"](\"in\");\n        this.$header[(!this.options.title_separator && \"addClass\") || \"removeClass\"](\"no-separator\");\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr(\"style\");\n        if (this.options.height) {\n            this.$body.css(\"height\", this.options.height);\n            this.$body.css(\"overflow\", \"hidden\");\n        } else {\n            this.$body.css(\"max-height\", $(window).height() / 2);\n        }\n        if (this.options.width) {\n            this.$dialog.css(\"width\", this.options.width);\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n    getButton: function(name) {\n        return this.buttonList[name];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n    enableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", false);\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n    disableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", true);\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n    showButton: function(name) {\n        this.getButton(name).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n    hideButton: function(name) {\n        this.getButton(name).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n    */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n    */\n    _template: function() {\n        return (\n            '<div class=\"modal-backdrop fade\"/>' +\n            '<div class=\"modal-dialog\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"modal-header\">' +\n            '<h4 class=\"title\"/>' +\n            \"</div>\" +\n            '<div class=\"modal-body\"/>' +\n            '<div class=\"modal-footer\">' +\n            '<div class=\"buttons\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}