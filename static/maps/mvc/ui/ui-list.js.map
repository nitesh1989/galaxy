{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["View","Backbone","extend","initialize","options","self","this","name","multiple","message","_uiMisc2","default","Message","cls","select","Select","optional","button","ButtonIcon","icon","tooltip","onclick","add","id","value","text","setElement","_template","$","append","$el","portlet","undefined","val","empty","isArray","i","v","v_name","type","v_id","_refresh","each","prop","find","lst","length","_templateRow","on","remove","addClass","status","update","disable","show","enable","hide","onchange"],"mappings":"mPAKIA,EAAOC,SAASD,KAAKE,QAErBC,WAAY,SAASC,GAEjB,IAAIC,EAAOC,KAGXA,KAAKF,QAAUA,EACfE,KAAKC,KAAOH,EAAQG,MAAQ,UAC5BD,KAAKE,SAAWJ,EAAQI,WAAY,EAGpCF,KAAKG,QAAU,IAAIC,EAAAC,QAAGC,QAZ1BZ,KAAAA,QAAOC,IAASD,EAAAA,QAATA,MAAqBa,IAAA,uBAGxBP,KAAAQ,OAAA,IAAAJ,EAAAC,QAAAI,OAAAf,MAAAgB,SAAAZ,EAAAY,WAGAV,KAAAW,OAAA,IAAAP,EAAAC,QAAAO,YACAC,KAAKf,gBACLgB,QAAAA,cAAoBb,KAAQA,KAC5Bc,QAAKb,WAgBGH,EAAKiB,KAdbC,GAAAlB,EAAAS,OAAAU,QACKf,KAALJ,EAAmBS,OAAAW,YAMnBnB,KAAAoB,WAAApB,KAAcqB,UAAIvB,IAgBlBE,KAAKsB,EAAE,oBAAoBC,OAAOvB,KAAKG,QAAQqB,KAd/CxB,KAAAsB,EAAA,oBAAAC,OAAAvB,KAAAyB,QAAAD,KACAxB,KAAAsB,EAAA,mBAAkBC,OAAAvB,KAAAW,OAAGC,KACjBC,KAAAA,EAAAA,mBAAMU,OADsBvB,KAAAQ,OAAAgB,MAKpBP,MAAAA,SAAAA,GADK,QAAAS,IAAAC,EAAT,CAJwB,GAQ3B3B,KAAAyB,QAAAG,QARLN,EAAAO,QAAAF,GAyBQ,IAAK,IAAIG,KAAKH,EAAK,CAd3B,IAAAI,EAAAJ,EAAAG,GACKV,EAAW,KACTY,EAAA,KACP,UAAOV,EAAAW,KAAAF,IACAG,EAAAH,EAAAd,GACAe,EAAAD,EAAA9B,MAiBSiC,EAAOF,EAASD,EAbpBJ,MAATO,GACHlC,KAAAgB,KACYU,GAAAA,EACRzB,KAAA+B,IAKQhC,KAAAmC,WAGIH,IAAAA,KASH,OARAhC,KAAAsB,EAAA,eAHDc,KAGO,WACHF,EAAAA,MACHjB,GAAAK,EAAAtB,MAAAqC,KAAA,MACDpC,KAAAqB,EAAAtB,MACIsC,KAAA,iBACIrB,WAGP,GAAAsB,EAAAC,OACJ,KAELD,GAIJvB,IAAA,SAAAlB,GACIyC,IAAAA,EAAAA,KACItB,GADK,IACLA,KAAAA,EAAAA,QAAMnB,EAAMuC,GAAZpB,MADKuB,OAELvC,GAAAA,EAAAA,QAAAA,QAAQH,EACEmB,IAuBNlB,KAAAA,QAAKoC,QACRhC,QAAAA,yBAHDH,KAAAC,KAGC,IACDuB,OAAO,eAzBG,CAHL,IAATA,EAAAF,EADJtB,KAAAyC,cAQQD,GAAJ1C,EAAiBmB,GACVhB,KAAPH,EAAAG,QA7EoBuB,EAAAkB,GAAA,QAAA,WA8FZlB,EAAImB,SAZpB5C,EAAAoC,aAEQpC,EAAAA,GAAO,YAAX,WACIyB,EAAAoB,SAAA,uBAEIpB,EAAAkB,GAAA,WACI,WACIzB,EAAAA,YAAYA,uBADEjB,KAAlByB,QADJF,OAAAC,GAMAA,KAAAA,gBAQIA,KAAAA,QAAAA,QACHrB,QAAAA,QAFDH,KAAAC,KAEC,8BAMG4C,OAAAA,SAAAA,GAFgB7C,KAAAQ,OAAAsC,OAApBhD,IAOAK,SAAAA,WADgBH,KAApBsB,EAAA,eAAAkB,OAAA,IAGHxC,KAAAE,UAAAF,KAAAW,OAAAoC,UAnHuB/C,KAAAsB,EAAA,oBAAA0B,SAsH5BhD,KAAAW,OAAAsC,SACAH,KAAQxB,EAAA,oBAAA4B,QAEPlD,KAzH2BF,QAAAqD,UAAAnD,KAAAF,QAAAqD,YA6HxB9B,UAAA,SAAWvB,GACP,MACA,wLAuBR2C,aAAc,SAAS3C,GADvB,MAAA,YAAAA,EAAAmB,GAAA,6FAAAnB,EAAAG,KAAA,8BAOAP,KAAMA","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || \"element\";\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new Ui.Message();\n\n        // create portlet\n        this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new Ui.Select.View({ optional: options.optional });\n\n        // create insert new list element button\n        this.button = new Ui.ButtonIcon({\n            icon: \"fa fa-sign-in\",\n            tooltip: `Insert new ${this.name}`,\n            onclick: function() {\n                self.add({\n                    id: self.select.value(),\n                    name: self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$(\".ui-list-message\").append(this.message.$el);\n        this.$(\".ui-list-portlet\").append(this.portlet.$el);\n        this.$(\".ui-list-button\").append(this.button.$el);\n        this.$(\".ui-list-select\").append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != \"string\") {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id: v_id,\n                            name: v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$(\".ui-list-id\").each(function() {\n            lst.push({\n                id: $(this).prop(\"id\"),\n                name: $(this)\n                    .find(\".ui-list-name\")\n                    .html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function(options) {\n        var self = this;\n        if (this.$(`[id=\"${options.id}\"]`).length === 0) {\n            if (!Utils.isEmpty(options.id)) {\n                var $el = $(\n                    this._templateRow({\n                        id: options.id,\n                        name: options.name\n                    })\n                );\n                $el.on(\"click\", () => {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on(\"mouseover\", () => {\n                    $el.addClass(\"portlet-highlight\");\n                });\n                $el.on(\"mouseout\", () => {\n                    $el.removeClass(\"portlet-highlight\");\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({\n                    message: `Please select a valid ${this.name}.`,\n                    status: \"danger\"\n                });\n            }\n        } else {\n            this.message.update({\n                message: `This ${this.name} is already in the list.`\n            });\n        }\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        if (this.$(\".ui-list-id\").length > 0) {\n            !this.multiple && this.button.disable();\n            this.$(\".ui-list-portlet\").show();\n        } else {\n            this.button.enable();\n            this.$(\".ui-list-portlet\").hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return (\n            '<div class=\"ui-list\">' +\n            '<div class=\"ui-margin-top\">' +\n            '<span class=\"ui-list-button\"/>' +\n            '<span class=\"ui-list-select\"/>' +\n            \"</div>\" +\n            '<div class=\"ui-list-message\"/>' +\n            '<div class=\"ui-list-portlet\"/>' +\n            \"</div>\"\n        );\n    },\n\n    /** Row Template */\n    _templateRow: function(options) {\n        return `<div id=\"${options.id}\" class=\"ui-list-id\"><span class=\"ui-list-delete fa fa-trash\"/><span class=\"ui-list-name\">${options.name}</span></div>`;\n    }\n});\n\nexport default {\n    View: View\n};\n"]}