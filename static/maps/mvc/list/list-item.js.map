{"version":3,"sources":["mvc/list/list-item.js"],"names":["ExpandableView","Backbone","View","extend","_baseMvc2","default","LoggableMixin","_logNamespace","initialize","attributes","this","expanded","log","fxSpeed","undefined","speed","$newRender","_buildNewRender","_setUpBehaviors","_queueNewRender","$","templates","el","model","toJSON","render","$details","replaceWith","_renderDetails","show","view","_swapNewRender","trigger","queue","next","$el","fadeOut","fadeIn","append","children","empty","$where","find","tooltip","placement","details","$newDetails","toggleExpanded","expand","collapse","_fetchModelDetails","always","_expand","hasDetails","jQuery","when","fetch","slideDown","debug","slideUp","ListItemView","mixin","SelectableViewMixin","DraggableViewMixin","tagName","className","prototype","call","_setUpListeners","on","isSelectable","hide","_renderWarnings","_renderTitleBar","_renderPrimaryActions","selectable","draggable","$warnings","_","each","warnings","templateFn","json","titleBar","_renderSubtitle","subtitle","events","click .title-bar","keydown .title-bar","click .selector","_clickTitleBar","event","stopPropagation","toggleSelect","showSelector","_keyDownTitleBar","keyCode","toString","wrapTemplate","detailsTemplate","foldoutStyle","FoldoutListItemView","_createFoldoutPanel","foldoutPanelClass","FoldoutClass","foldout","_getFoldoutPanelClass","_attachFoldout","options","_getFoldoutPanelOptions","_expandByDrilldown","$whereTo","listenTo"],"mappings":"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","file":"../../../scripts/mvc/list/list-item.js","sourcesContent":["import BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed = attributes.fxSpeed !== undefined ? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [\n                next => {\n                    view.$el.fadeOut(speed, next);\n                },\n                next => {\n                    view._swapNewRender($newRender);\n                    next();\n                },\n                next => {\n                    view.$el.fadeIn(speed, next);\n                },\n                next => {\n                    view.trigger(\"rendered\", view);\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function($newRender) {\n        return this.$el\n            .empty()\n            .attr(\"class\", _.isFunction(this.className) ? this.className() : this.className)\n            .append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function() {\n        var view = this;\n        var $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, () => {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function() {\n        this.debug(`${this}(ExpandableView).collapse`);\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, () => {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n    BASE_MVC.mixin(BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n        tagName: \"div\",\n        className: \"list-item\",\n\n        /** Set up the base class and all mixins */\n        initialize: function(attributes) {\n            ExpandableView.prototype.initialize.call(this, attributes);\n            BASE_MVC.SelectableViewMixin.initialize.call(this, attributes);\n            BASE_MVC.DraggableViewMixin.initialize.call(this, attributes);\n            this._setUpListeners();\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            // hide the primary actions in the title bar when selectable and narrow\n            this.on(\n                \"selectable\",\n                function(isSelectable) {\n                    if (isSelectable) {\n                        this.$(\".primary-actions\").hide();\n                    } else {\n                        this.$(\".primary-actions\").show();\n                    }\n                },\n                this\n            );\n            return this;\n        },\n\n        // ........................................................................ rendering\n        /** In this override, call methods to build warnings, titlebar and primary actions */\n        _buildNewRender: function() {\n            var $newRender = ExpandableView.prototype._buildNewRender.call(this);\n            $newRender.children(\".warnings\").replaceWith(this._renderWarnings());\n            $newRender.children(\".title-bar\").replaceWith(this._renderTitleBar());\n            $newRender.children(\".primary-actions\").append(this._renderPrimaryActions());\n            $newRender.find(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n            return $newRender;\n        },\n\n        /** In this override, render the selector controls and set up dragging before the swap */\n        _swapNewRender: function($newRender) {\n            ExpandableView.prototype._swapNewRender.call(this, $newRender);\n            if (this.selectable) {\n                this.showSelector(0);\n            }\n            if (this.draggable) {\n                this.draggableOn();\n            }\n            return this.$el;\n        },\n\n        /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n        _renderWarnings: function() {\n            var view = this;\n            var $warnings = $('<div class=\"warnings\"></div>');\n            var json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.warnings, templateFn => {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderTitleBar: function() {\n            return $(this.templates.titleBar(this.model.toJSON(), this));\n        },\n\n        /** Return an array of jQ objects containing common/easily-accessible item controls */\n        _renderPrimaryActions: function() {\n            // override this\n            return [];\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: {\n            // expand the body when the title is clicked or when in focus and space or enter is pressed\n            \"click .title-bar\": \"_clickTitleBar\",\n            \"keydown .title-bar\": \"_keyDownTitleBar\",\n            \"click .selector\": \"toggleSelect\"\n        },\n\n        /** expand when the title bar is clicked */\n        _clickTitleBar: function(event) {\n            event.stopPropagation();\n            if (event.altKey) {\n                this.toggleSelect(event);\n                if (!this.selectable) {\n                    this.showSelector();\n                }\n            } else {\n                this.toggleExpanded();\n            }\n        },\n\n        /** expand when the title bar is in focus and enter or space is pressed */\n        _keyDownTitleBar: function(event) {\n            // bail (with propagation) if keydown and not space or enter\n            var KEYCODE_SPACE = 32;\n\n            var KEYCODE_RETURN = 13;\n            if (\n                event &&\n                event.type === \"keydown\" &&\n                (event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN)\n            ) {\n                this.toggleExpanded();\n                event.stopPropagation();\n                return false;\n            }\n            return true;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `ListItemView(${modelString})`;\n        }\n    })\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (() => {\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n        // errors, messages, etc.\n        '<div class=\"warnings\"></div>',\n\n        // multi-select checkbox\n        '<div class=\"selector\">',\n        '<span class=\"fa fa-2x fa-square-o\"></span>',\n        \"</div>\",\n        // space for title bar buttons - gen. floated to the right\n        '<div class=\"primary-actions\"></div>',\n        '<div class=\"title-bar\"></div>',\n\n        // expandable area for more details\n        '<div class=\"details\"></div>',\n        \"</div>\"\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n})();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model);\n        var options = this._getFoldoutPanelOptions(model);\n\n        var foldout = new FoldoutClass(\n            _.extend(options, {\n                model: model\n            })\n        );\n\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", () => {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (() => {\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n"]}