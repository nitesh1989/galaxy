{"version":3,"sources":["mvc/history/history-list.js"],"names":["View","Backbone","extend","title","initialize","options","self","this","setElement","$","model","Model","_utils2","default","get","url","Galaxy","root","action_id","param","params","success","response","_","each","operation","label","onclick","id","_showCopyDialog","render","attributes","append","grid","$el","fetch","fail","alert","_copyDialog2","history","done","window","parent","currHistoryPanel","loadCurrentHistory","location","reload"],"mappings":"4SAKIA,EAAOC,SAASD,KAAKE,QACrBC,MAAO,YACPC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,WAAWC,EAAE,WAClBF,KAAKG,MAAQ,IAAIT,SAASU,MAC1BC,EAAAC,QAAMC,KACFC,IAAQC,OAAOC,KAAf,WAA8BZ,EAAQa,UAAtC,IAAmDT,EAAEU,MAAMH,OAAOI,QAClEC,QAAS,SAASC,GACdA,EAAA,aAA0B,EAC1BC,EAAEC,KAAKF,EAAA,WAAwB,SAAAG,GACJ,QAAnBA,EAAUC,QACVD,EAAUE,QAAU,SAAAC,GAChBtB,EAAKuB,gBAAgBD,OAbtC3B,EAAAA,MAASD,IAAKE,GACdI,EAAAwB,aAKHA,OAAA,WACIf,IAAAA,EAAAA,IAAAA,EAAAA,QAAAR,KAAAG,MAAAqB,YACAV,KAAAA,IAAAA,QAASW,OAAAC,EAAAC,MAGDL,gBAAA,SAAIJ,GACAA,IAAAA,EAAAA,IAAAA,EAAAA,QAAUE,SAAUC,GAAAA,IAChBtB,EACH6B,QACJC,KAAA,WACJC,MAND,mEAQA/B,KAAAA,YACH,EAAAgC,EAAAzB,SAAA0B,MAAAC,KAAA,WAbLC,OAAAC,QAAAD,OAAAC,OAAA1B,QAAAyB,OAAAC,OAAA1B,OAAA2B,kBANwBF,OAAAC,OAAA1B,OAAA2B,iBAAAC,qBAuBpBH,OAAAI,SAAWC,QAAA,qBAOfP,KAAAA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url: `${Galaxy.root}history/${options.action_id}?${$.param(Galaxy.params)}`,\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], operation => {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = id => {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(() => {\n                alert(\"History could not be fetched. Please contact an administrator\");\n            })\n            .done(() => {\n                historyCopyDialog(history, {}).done(() => {\n                    if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n"]}