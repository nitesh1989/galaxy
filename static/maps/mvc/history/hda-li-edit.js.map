{"version":3,"sources":["mvc/history/hda-li-edit.js"],"names":["_super","_datasetLiEdit2","default","DatasetListItemEdit","HDAListItemEdit","extend","className","prototype","_fetchModelDetails","view","this","model","inReadyState","hasDetails","fetch","silent","has","data","keys","join","events","_","clone","click .unhide-link","ev","unhide","templates","warnings","hidden","_baseMvc2","wrapTemplate","toString","modelString","_localization2","titleBar","_hdaLi2","HDAListItemView"],"mappings":"ySAMIA,EAASC,EAAAC,QAAgBC,oBAGzBC,EAAkBJ,EAAOK,QAErBC,UAAcN,EAAOO,UAAUD,UAA/B,mBAKAE,mBAAoB,WAChB,IAAIC,EAAOC,KACX,OAAID,EAAKE,MAAMC,iBAAmBH,EAAKE,MAAME,aAClCJ,EAAKE,MAAMG,OAAQC,QAAQ,IAZlDN,EAAAE,MAAAK,IAAA,cASQR,OAAAA,OAQeC,EAAKE,MAAMG,OAf9BV,QAAkBJ,EAClBiB,MAkBoBC,MAAO,aAAc,gBAAgBC,KAAK,SAQ1DC,OAAQC,EAAEhB,OAAOgB,EAAEC,MAAMtB,EAAOO,UAAUa,SAflCG,qBAAA,SAAAC,GAHJ,OAIId,KAAAC,MAAAc,UACO,KAKCP,SAAAA,WAJgB,MAAA,oBAEdR,KAAAC,MAAA,GAAAD,KAAAC,MAAA,cAFc,OAa5BP,EAAAG,UAAAmB,UAAsB,WAClB,IAAAC,EAAAN,EAAKV,UAAMc,EAAXlB,UAAAmB,UAAAC,UACAC,OAAAC,EAAA3B,QAAO4B,cA7BqB,gCAiCpC,gDACAC,EAAAA,EAAAA,SAAU,gCACFC,8DACJ,EAAAC,EAAA/B,SAAA,aACH,OAtCT,SAwDgB,WAbhB,aAMgB,OAAAmB,EAAAhB,UAAAL,EAAAO,UAAAmB,WAJqDQ,SAAjEC,EAAAjC,QAAAkC,gBAAA7B,UAAAmB,UAAAQ,SAoBIP,SAAUA,IArCgB,cAuCjCvB,gBAvBDA","file":"../../../scripts/mvc/history/hda-li-edit.js","sourcesContent":["import DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n    /** @lends HDAListItemEdit.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n\n                // special case the need for the rerunnable and creating_job attributes\n                // needed for rendering re-run button on queued, running datasets\n            } else if (!view.model.has(\"rerunnable\")) {\n                return view.model.fetch({\n                    silent: true,\n                    data: {\n                        // only fetch rerunnable and creating_job to keep overhead down\n                        keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                    }\n                });\n            }\n            return jQuery.when();\n        },\n\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .unhide-link\": function(ev) {\n                this.model.unhide();\n                return false;\n            }\n        }),\n\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDAListItemEdit(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                \"<% if( !dataset.visible ){ %>\",\n                // add a link to unhide a dataset\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">',\n                _l(\"Unhide it\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: HDA_LI.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemEdit: HDAListItemEdit\n};\n"]}