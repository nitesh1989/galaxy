{"version":3,"sources":["mvc/history/copy-dialog.js"],"names":["CopyDialog","defaultName","_","template","title","_localization2","default","submitLabel","errorMessage","progressive","activeLabel","allLabel","anonWarning","_template","_showAjaxIndicator","dialog","options","defaultCopyNameFn","name","join","allowAll","indicator","this","modal","$","empty","append","css","margin-top","history","get","body","val","prop","buttons","object","copyAllDatasets","deferred","response","closing_events","status","message","closing_callback","cancelled","_errorModal2","originalClosingCallback","xhr","done","autoClose","hide","show","jQuery","Deferred","defaultCopyName","nameFn","rejectWith","isUndefined","ev","checkNameAndCopy","extend","isAnon","Galaxy","user","isAnonymous","copyWhat","defaultCopyWhat","height","reject","focus","historyCopyDialog","on","keyCode","ImportDialog","window","parent","_uiModal2","View","useImport"],"mappings":"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","file":"../../../scripts/mvc/history/copy-dialog.js","sourcesContent":["import MODAL from \"mvc/ui/ui-modal\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/**\n * A dialog/modal that allows copying a user history or 'importing' from user\n * another. Generally called via historyCopyDialog below.\n * @type {Object}\n */\nvar CopyDialog = {\n    // language related strings/fns\n    defaultName: _.template(\"Copy of '<%- name %>'\"),\n    title: _.template(`${_l(\"Copying history\")} \"<%- name %>\"`),\n    submitLabel: _l(\"Copy\"),\n    errorMessage: _l(\"History could not be copied.\"),\n    progressive: _l(\"Copying history\"),\n    activeLabel: _l(\"Copy only the active, non-deleted datasets\"),\n    allLabel: _l(\"Copy all datasets including deleted ones\"),\n    anonWarning:\n        _l(\"As an anonymous user, unless you login or register, you will lose your current history \") +\n        _l(\"after copying this history. \"),\n\n    // template for modal body\n    _template: _.template(\n        [\n            //TODO: remove inline styles\n            // show a warning message for losing current to anon users\n            \"<% if( isAnon ){ %>\",\n            '<div class=\"warningmessage\">',\n            \"<%- anonWarning %>\",\n            _l(\"You can\"),\n            ' <a href=\"/user/login\">',\n            _l(\"login here\"),\n            \"</a> \",\n            _l(\"or\"),\n            \" \",\n            ' <a href=\"/user/create\">',\n            _l(\"register here\"),\n            \"</a>.\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<form>\",\n            '<label for=\"copy-modal-title\">',\n            _l(\"Enter a title for the new history\"),\n            \":\",\n            \"</label><br />\",\n            // TODO: could use required here and the form validators\n            // NOTE: use unescaped here if escaped in the modal function below\n            '<input id=\"copy-modal-title\" class=\"form-control\" style=\"width: 100%\" value=\"<%= name %>\" />',\n            '<p class=\"invalid-title bg-danger\" style=\"color: red; margin: 8px 0px 8px 0px; display: none\">',\n            _l(\"Please enter a valid history title\"),\n            \"</p>\",\n            // if allowAll, add the option to copy deleted datasets, too\n            \"<% if( allowAll ){ %>\",\n            \"<br />\",\n            \"<p>\",\n            _l(\"Choose which datasets from the original history to include:\"),\n            \"</p>\",\n            // copy non-deleted is the default\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-non-deleted\" value=\"copy-non-deleted\" ',\n            '<% if( copyWhat === \"copy-non-deleted\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-non-deleted\"> <%- activeLabel %></label>',\n            \"<br />\",\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-all\" value=\"copy-all\" ',\n            '<% if( copyWhat === \"copy-all\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-all\"> <%- allLabel %></label>',\n            \"<% } %>\",\n            \"</form>\"\n        ].join(\"\")\n    ),\n\n    // empty modal body and let the user know the copy is happening\n    _showAjaxIndicator: function _showAjaxIndicator() {\n        var indicator = `<p><span class=\"fa fa-spinner fa-spin\"></span> ${this.progressive}...</p>`;\n        this.modal\n            .$(\".modal-body\")\n            .empty()\n            .append(indicator)\n            .css({ \"margin-top\": \"8px\" });\n    },\n\n    // (sorta) public interface - display the modal, render the form, and potentially copy the history\n    // returns a jQuery.Deferred done->history copied, fail->user cancelled\n    dialog: function _dialog(modal, history, options) {\n        options = options || {};\n\n        var dialog = this;\n        var deferred = jQuery.Deferred();\n\n        var // TODO: getting a little byzantine here\n        defaultCopyNameFn = options.nameFn || this.defaultName;\n\n        var defaultCopyName = defaultCopyNameFn({\n            name: history.get(\"name\")\n        });\n\n        var // TODO: these two might be simpler as one 3 state option (all,active,no-choice)\n        defaultCopyWhat = options.allDatasets ? \"copy-all\" : \"copy-non-deleted\";\n\n        var allowAll = !_.isUndefined(options.allowAll) ? options.allowAll : true;\n\n        var autoClose = !_.isUndefined(options.autoClose) ? options.autoClose : true;\n\n        this.modal = modal;\n\n        // validate the name and copy if good\n        function checkNameAndCopy() {\n            var name = modal.$(\"#copy-modal-title\").val();\n            if (!name) {\n                modal.$(\".invalid-title\").show();\n                return;\n            }\n            // get further settings, shut down and indicate the ajax call, then hide and resolve/reject\n            var copyAllDatasets = modal.$('input[name=\"copy-what\"]:checked').val() === \"copy-all\";\n            modal.$(\"button\").prop(\"disabled\", true);\n            dialog._showAjaxIndicator();\n            history\n                .copy(true, name, copyAllDatasets)\n                .done(response => {\n                    deferred.resolve(response);\n                })\n                .fail(function(xhr, status, message) {\n                    var options = {\n                        name: name,\n                        copyAllDatasets: copyAllDatasets\n                    };\n                    ERROR_MODAL.ajaxErrorModal(history, xhr, options, dialog.errorMessage);\n                    deferred.rejectWith(deferred, arguments);\n                })\n                .done(() => {\n                    if (autoClose) {\n                        modal.hide();\n                    }\n                });\n        }\n\n        var originalClosingCallback = options.closing_callback;\n        modal.show(\n            _.extend(options, {\n                title: this.title({ name: history.get(\"name\") }),\n                body: $(\n                    dialog._template({\n                        name: defaultCopyName,\n                        isAnon: Galaxy.user.isAnonymous(),\n                        allowAll: allowAll,\n                        copyWhat: defaultCopyWhat,\n                        activeLabel: this.activeLabel,\n                        allLabel: this.allLabel,\n                        anonWarning: this.anonWarning\n                    })\n                ),\n                buttons: _.object([\n                    [\n                        _l(\"Cancel\"),\n                        () => {\n                            modal.hide();\n                        }\n                    ],\n                    [this.submitLabel, checkNameAndCopy]\n                ]),\n                height: \"auto\",\n                closing_events: true,\n                closing_callback: function _historyCopyClose(cancelled) {\n                    if (cancelled) {\n                        deferred.reject({ cancelled: true });\n                    }\n                    if (originalClosingCallback) {\n                        originalClosingCallback(cancelled);\n                    }\n                }\n            })\n        );\n\n        // set the default dataset copy, autofocus the title, and set up for a simple return\n        modal\n            .$(\"#copy-modal-title\")\n            .focus()\n            .select();\n        modal.$(\"#copy-modal-title\").on(\"keydown\", ev => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                checkNameAndCopy();\n            }\n        });\n\n        return deferred;\n    }\n};\n\n//==============================================================================\n// maintain the (slight) distinction between copy and import\n/**\n * Subclass CopyDialog to use the import language.\n */\nvar ImportDialog = _.extend({}, CopyDialog, {\n    defaultName: _.template(\"imported: <%- name %>\"),\n    title: _.template(`${_l(\"Importing history\")} \"<%- name %>\"`),\n    submitLabel: _l(\"Import\"),\n    errorMessage: _l(\"History could not be imported.\"),\n    progressive: _l(\"Importing history\"),\n    activeLabel: _l(\"Import only the active, non-deleted datasets\"),\n    allLabel: _l(\"Import all datasets including deleted ones\"),\n    anonWarning:\n        _l(\"As an anonymous user, unless you login or register, you will lose your current history \") +\n        _l(\"after importing this history. \")\n});\n\n//==============================================================================\n/**\n * Main interface for both history import and history copy dialogs.\n * @param  {Backbone.Model} history     the history to copy\n * @param  {Object}         options     a hash\n * @return {jQuery.Deferred}            promise that fails on close and succeeds on copy\n *\n * options:\n *     (this object is also passed to the modal used to display the dialog and accepts modal options)\n *     {Function} nameFn    if defined, use this to build the default name shown to the user\n *                          (the fn is passed: {name: <original history's name>})\n *     {bool} useImport     if true, use the 'import' language (instead of Copy)\n *     {bool} allowAll      if true, allow the user to choose between copying all datasets and\n *                          only non-deleted datasets\n *     {String} allDatasets default initial checked radio button: 'copy-all' or 'copy-non-deleted',\n */\nvar historyCopyDialog = (history, options) => {\n    options = options || {};\n    // create our own modal if Galaxy doesn't have one (mako tab without use_panels)\n    var modal = window.parent.Galaxy.modal || new MODAL.View({});\n    return options.useImport\n        ? ImportDialog.dialog(modal, history, options)\n        : CopyDialog.dialog(modal, history, options);\n};\n\n//==============================================================================\nexport default historyCopyDialog;\n"]}