{"version":3,"sources":["mvc/history/hdca-li.js"],"names":["_super","_collectionLi2","default","DCListItemView","HDCAListItemView","extend","className","prototype","_setUpListeners","call","this","listenTo","model","change:tags change:populated change:visible","options","render","_getFoldoutPanelClass","get","_collectionView2","ListCollectionView","PairCollectionView","ListOfPairsCollectionView","TypeError","_swapNewRender","$newRender","state","_states2","OK","RUNNING","$el","addClass","toString","templates","warnings","_","hidden","_baseMvc2","_localization2","titleBarTemplate","titleBar"],"mappings":"gVAOIA,EAASC,EAAAC,QAAMC,eAGfC,EAAmBJ,EAAOK,QAEtBC,UAAcN,EAAOO,UAAUD,UAA/B,mBAGAE,gBAAiB,WACbR,EAAOO,UAAUC,gBAAgBC,KAAKC,MACtCA,KAAKC,SAASD,KAAKE,OACfC,8CAA+C,SAASD,EAAOE,GAC3DJ,KAAKK,aAXzBC,sBAAA,WAkBY,OAAQN,KAAKE,MAAMK,IAAI,oBAhB/Bb,IAAAA,OACA,OAAAc,EAAAhB,QAAAiB,mBACIb,IAAcN,SAkBF,OAAOkB,EAAAhB,QAAQkB,mBAhB3B,IAAA,cACAZ,OAAiBU,EAAAhB,QAAAmB,0BACbrB,IAAOO,YACFI,OAASO,EAAAhB,QAAKU,0BAEX,MAAA,IAAAU,UAAA,2BAAAZ,KAAAE,MAAAK,IAAA,qBAqBZM,eAAgB,SAASC,GAhBzBxB,EAAAO,UAAAgB,eAAAd,KAAAC,KAAAc,GAEI,IAAAC,EAAab,KAALA,MAAeK,IAAA,aAAvBS,EAAAxB,QAAAyB,GAAAD,EAAAxB,QAAA0B,QAIQ,OAFAlB,KAAAmB,IAAAC,SAAA,SAAOL,GAEPf,KAAAmB,KAJRE,SAAA,WAfiC,MAAA,qBAyBvBT,KAAJV,MAAIU,GAAJZ,KAAAE,MAAyC,cAzBd,OAgCjCR,EAAIqB,UAASO,UAAe,WAC5B,IAAAC,EAAAC,EAAA7B,UAAAL,EAAAO,UAAAyB,UAAAC,UACAE,OAAAC,EAAAlC,QAAS4B,cAlCwB,mCAuD7B,gDAhBR,EAAAO,EAAAnC,SAAA,mCACA,SACA6B,WAEI,gBAMZ3B,EAAiBG,EAAAA,QAAUyB,cAIX,6CACA,mCAJZ,sBAcA,kDACIM,mDAEI,SACA,+BAGA,0BACA,2FAMA,wCAUR,4DACIL,UACAM,YAFJ,UAvCJ,UA6CA,cACe,OAPJL,EAAE7B,UAAWL,EAAOO,UAAUyB,WACjCC,SAAUA,EACVM,SAAUD,IA1DsB,cAgEpClC,iBAAkBA","file":"../../../scripts/mvc/history/hdca-li.js","sourcesContent":["import STATES from \"mvc/dataset/states\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport DC_VIEW from \"mvc/collection/collection-view\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n    /** @lends HDCAListItemView.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, {\n                \"change:tags change:populated change:visible\": function(model, options) {\n                    this.render();\n                }\n            });\n        },\n\n        /** Override to provide the proper collections panels as the foldout */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW.ListCollectionView;\n                case \"paired\":\n                    return DC_VIEW.PairCollectionView;\n                case \"list:paired\":\n                    return DC_VIEW.ListOfPairsCollectionView;\n                case \"list:list\":\n                    return DC_VIEW.ListOfListsCollectionView;\n            }\n            throw new TypeError(`Uknown collection_type: ${this.model.get(\"collection_type\")}`);\n        },\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            //TODO: model currently has no state\n            var state = !this.model.get(\"populated\") ? STATES.RUNNING : STATES.OK;\n            //if( this.model.has( 'state' ) ){\n            this.$el.addClass(`state-${state}`);\n            //}\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDCAListItemView(${modelString})`;\n        }\n    }\n);\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !collection.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This collection has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"collection\"\n        )\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- collection.hid %></span> ',\n            '<span class=\"name\"><%- collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDCAListItemView: HDCAListItemView\n};\n"]}