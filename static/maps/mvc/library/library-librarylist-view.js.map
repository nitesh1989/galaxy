{"version":3,"sources":["mvc/library/library-librarylist-view.js"],"names":["LibraryListView","Backbone","View","extend","el","events","click .sort-libraries-link","defaults","page_count","show_page","all_fetched","options","this","_underscore2","default","modal","collection","_libraryModel2","Libraries","url","urlRoot","fetch","error","model","response","responseJSON","_toastr2","err_msg","that","template","templateLibraryList","libraries_to_render","models","is_public","get","$","hide","sortLibraries","Galaxy","libraries","preferences","where","deleted","filter","total_libraries_count","length","page_start","is_deleted","slice","$el","search_term","renderRows","order","html","libraryToolbarView","renderPaginator","css","render","tooltip","remove","success","fetchDeleted","i","library","renderOne","rowView","_libraryLibraryrowView2","LibraryRowView","find","append","sort_clicked","set","sort_order","searchLibraries","trim","results","search","searching","join"],"mappings":"iUAIIA,EAAkBC,SAASC,KAAKC,QAChCC,GAAI,qBAEJC,QACIC,6BAA8B,gBAGlCC,UACIC,WAAY,KACZC,UAAW,KACXC,aAAa,GATjBN,WAAI,SAAAO,GAkBAC,KAAKD,QAAUE,EAAAC,QAAEP,SAASK,KAAKD,YAAeA,EAASC,KAAKL,UAhBhEF,IAAAA,EAAQO,KACJA,KAAAG,MAAA,KAmBAH,KAAKI,WAAa,IAAIC,EAAAH,QAAkBI,UAhB5CX,KAAAA,WAAUY,IAAAP,KAAAI,WAAAI,QAAVb,iBACIC,KAAAA,WAAYa,OACZZ,QAAAA,WACAC,EAAAA,UAmBIY,MAAO,SAASC,EAAOC,QAhB/B,IAAAA,EAAAC,aAkBgBC,EAAAZ,QAAWQ,MAAME,EAASC,aAAaE,SAEvCD,EAAAZ,QAAWQ,MAAM,0BANrBM,OAAAA,SAAAA,GACHhB,KAAAD,QAHiBE,EAAAC,QAAAX,OAAAS,KAAAD,QAAAA,GAIlBW,KAAAA,WAAO,sBACH,IAAAO,EAAAjB,KAAIkB,sBACAC,EAAA,KACHC,EAFD,KAGIC,EAAA,SAAAV,GAAA,OAAiB,IAAjBA,EAAAW,IAAWZ,WAsBvB,GArBSa,EAAA,YAAAC,YACJ,IAAAzB,IAViBqB,OAAtB,IAAArB,EAAAqB,OAAArB,EAAAqB,OAAA,MA8BwB,OAApBpB,KAAKI,YAAkC,OAAXgB,EAhBpCpB,KAAAyB,gBAmBYN,EADAO,OAAOC,UAAUC,YAAYN,IAAI,gBACXtB,KAAKI,WAAWgB,OAEhBpB,KAAKI,WAAWyB,OAhB1CC,SAAA,IAGAb,OAAAA,UAAgBC,YAAAA,IAAAA,wBAChBC,EAAsBlB,EAAAC,QAAA6B,OAA1BZ,EAAAE,SAEA,GAAgB,OAAZA,EAAY,CAAA,GAAAK,OAASf,UAAUiB,YAAVN,IAAwB,gBAAjDH,EAAAC,MACE,CAEEA,EAAgBrB,EAAAA,QAAQqB,OAAfA,EADT,SAAAT,GAAA,OAAgC,IAAbA,EAAaW,IAAA,aAGhCI,OAAKtB,UAALwB,YAA4BR,IAAAA,wBAC5BD,EAAAlB,EAAAC,QAAA6B,OAAAZ,EAAAE,SAGCF,MAIA,OAAAnB,KAAAD,QAAAF,WAAAG,KAAAD,QAAAF,UAAA,KACDG,KAAAD,QAAI2B,UAAiBE,GAEpB5B,KAAAD,QAAAiC,sBAAAb,EAAAc,OACJ,IAAAC,EAAUd,OAAAA,UAAiBQ,YAAAN,IAAA,sBAAAtB,KAAAD,QAAAF,UAAA,GACxBG,KAAAD,QAAI2B,WAAOC,KAAUC,KACjBT,KAAAA,QAAAA,sBAAAO,OAAAC,UAAAC,YAAAN,IAAA,sBAEAtB,KAAAD,QAAIoC,sBAAAA,GAAAA,EAAanC,KAAAD,QAAAiC,uBAAAb,EAASR,EAAAyB,MAATF,EACjBf,EAAAA,OAAAA,UAAsBS,YAAAN,IAAA,sBAE1BtB,KAAAD,QAAI2B,gBAAiBE,EAAgBK,OAPlCP,OAUAC,UAAAC,YAAAN,IAAA,qBAAAtB,KAAAD,QAAAF,UACHsB,KAAAA,QAAAA,sBAAAO,OAAAC,UAAAC,YAAAN,IAAA,uBAuBIH,MAnBRnB,KAAIqC,IAAKtC,KACLkB,GACHgB,OAAA,EACIlC,MAAQiC,OAAAA,UAAAA,YAAwBb,IAAAA,cACjCe,YAAaR,OAAOC,UAAUC,mBAAgB7B,QAAAuC,eAK9CnB,OAAAA,UAAAA,mBAAsBA,gBAClBe,KAAAA,SAGJlC,KAAAuC,WAAApB,KAEAnB,KAAAqC,IACIX,KAGAP,GACHc,OAAA,EACDO,MAASC,OACLxB,UAASW,YAAAN,IAAA,cACLW,YADKP,OAAAC,UAAAe,mBAAA3C,QAAAuC,eAAAZ,OADbC,UAAAe,mBAAAC,gBAAA3C,KAAAD,UAQAwB,EAAA,yBAAgBJ,UACnBI,EAAA,WAAMqB,IAAA,WAAA,SAIKJ,aAAAA,WACAF,GAAAA,KAAAA,QAAAA,YAHKtC,KAAT6C,aAMJnB,CACH,IAAAV,EAAAhB,KACDuB,KAAEnB,WAAAG,IAAFP,KAA2B8C,WAA3BtC,QAAAe,gBACAA,KAAEnB,WAAFK,OA3HmCsC,QAAA,EAsI3BC,QAAS,WARrBC,EAAclD,QAAAD,aAAW,EACjBkB,EAAKjB,UAATW,MAEO,SAAAC,EAAAC,QACH,IAAAA,EAAAC,aACKT,EAAAA,QAALM,MAAyBE,EAAKR,aAA9BW,SAEIgC,EAAAA,QADkBrC,MAAA,2BAYjB6B,WAAA,SAAApB,GAZiB,IAAA,IAAtB+B,EAAA,EAAAA,EAAA/B,EAAAc,OAAAiB,IAAA,CAcH,IAAAC,EAAAhC,EAAA+B,GAlJkClD,KAAAoD,WAAAD,QAAAA,MA2J/BC,UAAA,SAAID,GACJ,IAAAA,EAAKC,EAALD,QACHE,EAAA,IAAAC,EAAApD,QAAAqD,eAAAJ,GACJnD,KA9JsCqC,IAAAmB,KAAA,sBAAAC,OAAAJ,EAAA7D,KAqKnCkE,aAAIP,WAC0CI,QAA9C7B,OAAI2B,UAAUzB,YAAIN,IAAA,cAClBI,OAAKW,UAAST,YAAA+B,KAAdC,WAA2CP,SAWvC3B,OAAOC,UAAUC,YAAY+B,KAAMC,WAAY,QAEnD5D,KAAK6C,UAFDnB,cAAAA,WACH,SAAAA,OAAAC,UAAAC,YAAAN,IAAA,aACD,QAAAI,OAAAC,UAAAC,YAAAN,IAAA,cApLmCtB,KAAAI,WAAAqB,cAAA,OAAA,OA+L+B,SAAnDC,OAAOC,UAAUC,YAAYN,IAAI,eARpDtB,KAAAI,WAAAqB,cAAA,OAAA,UAUSoC,gBAAA,SAAAvB,GAER,GAnMsC,KAkMlCf,EAAAuC,KAAAxB,GAlMkC,CA6M/B,IAAIyB,EAAU,KARtBA,EAAA/D,KAAAI,WAAA4D,OAAA1B,GAUQtC,KAAKD,QAAQkE,WAAY,EACzBjE,KAAK6C,QAASzB,OAAQ2C,EAASlE,UAAW,SAE1CG,KAAKD,QAAQkE,WAAY,EARjCJ,KAAAA,UAQQ3C,oBAAKnB,WACL,OAAAE,EAAAC,QAAAe,UAnN+B,mDA+N3B,2BARZ,qCACA,QACA,sEAUY,SARZC,gBACI,QA6BQ,iGACA,iHAMX,kGAhQL,SA0OgB,SACA,gBAyBZ9B,6CAvBY,UACA,0BACA,0EACA,OACA,OACA,8EACA,QACA,0CACA,wCACA,+BACA,WACA,iCAEA,WACA,WACA,SACA,UACF8E,KAAK,mBAMf9E,gBAAiBA","file":"../../../scripts/mvc/library/library-librarylist-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_library_libraryrow_view from \"mvc/library/library-libraryrow-view\";\nimport _ from \"libs/underscore\";\nvar LibraryListView = Backbone.View.extend({\n    el: \"#libraries_element\",\n\n    events: {\n        \"click .sort-libraries-link\": \"sort_clicked\"\n    },\n\n    defaults: {\n        page_count: null,\n        show_page: null,\n        all_fetched: false\n    },\n\n    /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n    initialize: function(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        var that = this;\n        this.modal = null;\n        // collection of {Item}s\n        this.collection = new mod_library_model.Libraries();\n        this.collection.url = `${this.collection.urlRoot}?deleted=false`;\n        this.collection.fetch({\n            success: function() {\n                that.render();\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        this.setElement(\"#libraries_element\");\n        var template = this.templateLibraryList();\n        var libraries_to_render = null;\n        var models = null;\n        var is_public = model => model.get(\"public\") === true;\n        $(\".tooltip\").hide();\n        if (typeof options !== \"undefined\") {\n            models = typeof options.models !== \"undefined\" ? options.models : null;\n        }\n        if (this.collection !== null && models === null) {\n            this.sortLibraries();\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = this.collection.models;\n            } else {\n                libraries_to_render = this.collection.where({\n                    deleted: false\n                });\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _.filter(libraries_to_render, is_public);\n            }\n        } else if (models !== null) {\n            if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                libraries_to_render = models;\n            } else {\n                var is_deleted = model => model.get(\"deleted\") === false;\n                libraries_to_render = _.filter(models, is_deleted);\n            }\n            if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                libraries_to_render = _.filter(libraries_to_render, is_public);\n            }\n        } else {\n            libraries_to_render = [];\n        }\n\n        // pagination\n        if (this.options.show_page === null || this.options.show_page < 1) {\n            this.options.show_page = 1;\n        }\n        this.options.total_libraries_count = libraries_to_render.length;\n        var page_start = Galaxy.libraries.preferences.get(\"library_page_size\") * (this.options.show_page - 1);\n        this.options.page_count = Math.ceil(\n            this.options.total_libraries_count / Galaxy.libraries.preferences.get(\"library_page_size\")\n        );\n        if (this.options.total_libraries_count > 0 && page_start < this.options.total_libraries_count) {\n            libraries_to_render = libraries_to_render.slice(\n                page_start,\n                page_start + Galaxy.libraries.preferences.get(\"library_page_size\")\n            );\n            this.options.libraries_shown = libraries_to_render.length;\n            // User requests page with no libraries\n            if (\n                Galaxy.libraries.preferences.get(\"library_page_size\") * this.options.show_page >\n                this.options.total_libraries_count + Galaxy.libraries.preferences.get(\"library_page_size\")\n            ) {\n                libraries_to_render = [];\n            }\n            this.$el.html(\n                template({\n                    length: 1,\n                    order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                    search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                })\n            );\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n            this.renderRows(libraries_to_render);\n        } else {\n            this.$el.html(\n                template({\n                    length: 0,\n                    order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                    search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                })\n            );\n            Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n        }\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    fetchDeleted: function() {\n        if (this.options.all_fetched) {\n            this.render();\n        } else {\n            var that = this;\n            this.collection.url = `${this.collection.urlRoot}?deleted=true`;\n            this.collection.fetch({\n                remove: false,\n                success: function() {\n                    that.options.all_fetched = true;\n                    that.render();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n    renderRows: function(libraries_to_render) {\n        for (var i = 0; i < libraries_to_render.length; i++) {\n            var library = libraries_to_render[i];\n            this.renderOne({ library: library });\n        }\n    },\n\n    /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n    renderOne: function(options) {\n        var library = options.library;\n        var rowView = new mod_library_libraryrow_view.LibraryRowView(library);\n        this.$el.find(\"#library_list_body\").append(rowView.el);\n    },\n\n    /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n    sort_clicked: function() {\n        if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n            Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n        } else {\n            Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n        }\n        this.render();\n    },\n\n    /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n    sortLibraries: function() {\n        if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n            if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                this.collection.sortLibraries(\"name\", \"asc\");\n            } else if (Galaxy.libraries.preferences.get(\"sort_order\") === \"desc\") {\n                this.collection.sortLibraries(\"name\", \"desc\");\n            }\n        }\n    },\n\n    /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n    searchLibraries: function(search_term) {\n        var trimmed_term = $.trim(search_term);\n        if (trimmed_term !== \"\") {\n            var results = null;\n            results = this.collection.search(search_term);\n            this.options.searching = true;\n            this.render({ models: results, show_page: 1 });\n        } else {\n            this.options.searching = false;\n            this.render();\n        }\n    },\n\n    // MMMMMMMMMMMMMMMMMM\n    // === TEMPLATES ====\n    // MMMMMMMMMMMMMMMMMM\n\n    templateLibraryList: function() {\n        return _.template(\n            [\n                '<div class=\"library_container table-responsive\">',\n                \"<% if(length === 0) { %>\",\n                \"<% if(search_term.length > 0) { %>\",\n                \"<div>\",\n                \"There are no libraries matching your search. Try different keyword.\",\n                \"</div>\",\n                \"<% } else{ %>\",\n                \"<div>\",\n                \"There are no libraries visible to you here. If you expected some to show up please consult the\",\n                ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                \"</div>\",\n                \"<% }%>\",\n                \"<% } else{ %>\",\n                '<table class=\"grid table table-condensed\">',\n                \"<thead>\",\n                '<th style=\"width:30%;\">',\n                '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                \"name\",\n                \"</a>\",\n                '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n                \"</th>\",\n                '<th style=\"width:22%;\">description</th>',\n                '<th style=\"width:22%;\">synopsis</th> ',\n                '<th style=\"width:26%;\"></th>',\n                \"</thead>\",\n                '<tbody id=\"library_list_body\">',\n                // library item views will attach here\n                \"</tbody>\",\n                \"</table>\",\n                \"<% }%>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryListView: LibraryListView\n};\n"]}