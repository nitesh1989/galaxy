{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["LibraryDatasetView","Backbone","View","extend","el","model","options","defaults","edit_mode","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .toolbtn_save_permissions","select_extension","list_extensions","auto","id","text","description","list_genomes","initialize","this","_","fetchDataset","_libraryModel2","default","Item","self","fetchExtAndGenomes","fetch","success","show_permissions","showPermissions","show_version","fetchVersion","render","error","response","responseJSON","err_msg","library_router","back","onclick","Galaxy","libraries","$el","html","template","item","$","get","tooltip","ldda_id","ldda","Ldda","url","urlRoot","renderVersion","_toastr2","remove","templateVersion","enableModification","templateModifyDataset","file_ext","root","data","processDownload","renderSelectBoxes","method","param","each","split","ld_ids","inputs","pair","submit","importIntoHistory","refreshUserHistoriesList","modal","show","closing_events","title","body","histories","models","hide","Close","callback","GalaxyHistories","length","warning","location","window","importCurrentIntoHistory","disableButton","new_history_name","val","post","name","new_history","xhr","status","done","enableButton","history_id","find","always","processImportToHistory","historyItem","HistoryItem","save","jQuery","getJSON","templateDatasetPermissions","undefined","fetched_permissions","access_dataset_roles","set","is_unrestricted","is_admin","config","is_admin_user","prepareSelectBoxes","_serializeRoles","selected_roles","i","push","role_list","replace","initialData","accessSelectObject","modifySelectObject","_uiSelect2","selector","_generate_select_options","modify_item_roles","minimumInputLength","multiple","placeholder","formatResult","roleFormatResult","manage_dataset_roles","initSelection","role","element","dropdownCssClass","select_options","container","ajax","quietMillis","q","page_limit","page","join","results","more","term","total","is_changed","roles","saveModifications","ld","new_name","new_info","new_genome_build","new_ext","select_genome","select2","patch","dataset_view","copyToClipboard","prompt","e","href","makeDatasetPrivate","removeDatasetRestrictions","fail","_extractIds","roles_list","ids_list","manage_ids","access_ids","savePermissions","event","manageSelectObject","modify_ids","access_ids[]","manage_ids[]","modify_ids[]","_utils2","key","datatypes","genomes","extension","description_url","sort","a","b","unshift","current_genome","css","value","genome_build","templateDataset","current_ext","templateBulkImportInModal"],"mappings":"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DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACF4J,KAAK,MAIf7F,gBAAiB,WACb,OAAOtC,EAAEyB,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACF0G,KAAK,MAIf3F,sBAAuB,WACnB,OAAOxC,EAAEyB,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACF0G,KAAK,MAIfxC,2BAA4B,WACxB,OAAO3F,EAAEyB,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACF0G,KAAK,MAIfoD,0BAA2B,WACvB,OAAOvL,EAAEyB,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACF0G,KAAK,mBAMf5J,mBAAoBA","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_utils from \"utils/utils\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryDatasetView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    defaults: {\n        edit_mode: false\n    },\n\n    events: {\n        \"click .toolbtn_modify_dataset\": \"enableModification\",\n        \"click .toolbtn_cancel_modifications\": \"render\",\n        \"click .toolbtn-download-dataset\": \"downloadDataset\",\n        \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n        \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n        \"click .make-private\": \"makeDatasetPrivate\",\n        \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n        \"click .toolbtn_save_permissions\": \"savePermissions\",\n        \"click .toolbtn_save_modifications\": \"saveModifications\"\n    },\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        this.fetchExtAndGenomes();\n        if (this.options.id) {\n            this.fetchDataset();\n        }\n    },\n\n    fetchDataset: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Item({\n            id: this.options.id\n        });\n        var self = this;\n        this.model.fetch({\n            success: function() {\n                if (self.options.show_permissions) {\n                    self.showPermissions();\n                } else if (self.options.show_version) {\n                    self.fetchVersion();\n                } else {\n                    self.render();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        var template = this.templateDataset();\n        this.$el.html(template({ item: this.model }));\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    fetchVersion: function(options) {\n        this.options = _.extend(this.options, options);\n        var self = this;\n        if (!this.options.ldda_id) {\n            this.render();\n            mod_toastr.error(\"Library dataset version requested but no id provided.\");\n        } else {\n            this.ldda = new mod_library_model.Ldda({\n                id: this.options.ldda_id\n            });\n            this.ldda.url = `${this.ldda.urlRoot + this.model.id}/versions/${this.ldda.id}`;\n            this.ldda.fetch({\n                success: function() {\n                    self.renderVersion();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    renderVersion: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateVersion();\n        this.$el.html(template({ item: this.model, ldda: this.ldda }));\n        $(\".peek\").html(this.ldda.get(\"peek\"));\n    },\n\n    enableModification: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateModifyDataset();\n        this.$el.html(template({ item: this.model }));\n        this.renderSelectBoxes({\n            genome_build: this.model.get(\"genome_build\"),\n            file_ext: this.model.get(\"file_ext\")\n        });\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    downloadDataset: function() {\n        var url = `${Galaxy.root}api/libraries/datasets/download/uncompressed`;\n        var data = { ld_ids: this.id };\n        this.processDownload(url, data);\n    },\n\n    processDownload: function(url, data, method) {\n        //url and data options required\n        if (url && data) {\n            //data can be string of parameters or array/object\n            data = typeof data == \"string\" ? data : $.param(data);\n            //split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs += `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n            });\n            //send request\n            $(`<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`)\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n\n            mod_toastr.info(\"Your download will begin soon.\");\n        }\n    },\n\n    importIntoHistory: function() {\n        this.refreshUserHistoriesList(self => {\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events: true,\n                title: \"Import into History\",\n                body: template({ histories: self.histories.models }),\n                buttons: {\n                    Import: function() {\n                        self.importCurrentIntoHistory();\n                    },\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    refreshUserHistoriesList: function(callback) {\n        var self = this;\n        this.histories = new mod_library_model.GalaxyHistories();\n        this.histories.fetch({\n            success: function(histories) {\n                if (histories.length === 0) {\n                    mod_toastr.warning(\"You have to create history first. Click this to do so.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                } else {\n                    callback(self);\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    importCurrentIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var self = this;\n        if (new_history_name !== \"\") {\n            $.post(`${Galaxy.root}api/histories`, {\n                name: new_history_name\n            })\n                .done(new_history => {\n                    self.processImportToHistory(new_history.id);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    self.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(this.modal.$el)\n                .find(\"select[name=dataset_import_single] option:selected\")\n                .val();\n            this.processImportToHistory(history_id);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function(history_id) {\n        var historyItem = new mod_library_model.HistoryItem();\n        historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${history_id}`);\n        // save the dataset into selected history\n        historyItem.save(\n            { content: this.id, source: \"library\" },\n            {\n                success: function() {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\"Dataset imported. Click this to start analyzing it.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(`Dataset not imported. ${response.responseJSON.err_msg}`);\n                    } else {\n                        mod_toastr.error(\"An error occured. Dataset not imported. Please try again.\");\n                    }\n                }\n            }\n        );\n    },\n\n    showPermissions: function(options) {\n        var template = this.templateDatasetPermissions();\n        var self = this;\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_dataset_roles.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        this.$el.html(\n            template({\n                item: this.model,\n                is_admin: Galaxy.config.is_admin_user\n            })\n        );\n        $.get(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions,\n                    is_admin: Galaxy.config.is_admin_user\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch dataset permissions.\");\n            });\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            // Replace the : and , in role's name since these are select2 separators for initialData\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        this.accessSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"access_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n            })\n        );\n        this.modifySelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"modify_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n            })\n        );\n        this.manageSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"manage_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n            })\n        );\n    },\n\n    _generate_select_options: function(options) {\n        var select_options = {\n            minimumInputLength: 0,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        select_options.container = this.$el.find(`#${options.selector}`);\n        select_options.css = options.selector;\n        select_options.initialData = options.initialData.join(\",\");\n        select_options.ajax = {\n            url: `${Galaxy.root}api/libraries/datasets/${this.id}/permissions?scope=available`,\n            dataType: \"json\",\n            quietMillis: 100,\n            data: function(term, page) {\n                // page is the one-based page number tracked by Select2\n                return {\n                    q: term, //search term\n                    page_limit: 10, // page size, should be same as used in 'more' variable below\n                    page: page // page number\n                };\n            },\n            results: function(data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return { results: data.roles, more: more };\n            }\n        };\n        return select_options;\n    },\n\n    /**\n   * Save the changes made to the library dataset.\n   */\n    saveModifications: function(options) {\n        var is_changed = false;\n        var ld = this.model;\n        var new_name = this.$el.find(\".input_dataset_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n            if (new_name.length > 0) {\n                ld.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\"Library dataset name has to be at least 1 character long.\");\n                return;\n            }\n        }\n        var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n        if (typeof new_info !== \"undefined\" && new_info !== ld.get(\"misc_info\")) {\n            ld.set(\"misc_info\", new_info);\n            is_changed = true;\n        }\n        var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n        if (typeof new_genome_build !== \"undefined\" && new_genome_build !== ld.get(\"genome_build\")) {\n            ld.set(\"genome_build\", new_genome_build);\n            is_changed = true;\n        }\n        var new_ext = this.select_extension.$el.select2(\"data\").id;\n        if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n            ld.set(\"file_ext\", new_ext);\n            is_changed = true;\n        }\n        var dataset_view = this;\n        if (is_changed) {\n            ld.save(null, {\n                patch: true,\n                success: function(ld) {\n                    dataset_view.render();\n                    mod_toastr.success(\"Changes to library dataset saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured while attempting to update the library dataset.\");\n                    }\n                }\n            });\n        } else {\n            dataset_view.render();\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    copyToClipboard: function(e) {\n        e.preventDefault();\n        var href = Backbone.history.location.href;\n        if (href.lastIndexOf(\"/permissions\") !== -1) {\n            href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n        }\n        window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n    savePermissions: function(event) {\n        var self = this;\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set dataset permissions.\");\n            });\n    },\n\n    /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n    fetchExtAndGenomes: function() {\n        var self = this;\n        if (this.list_genomes.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/datatypes?extension_only=False`,\n                success: function(datatypes) {\n                    for (var key in datatypes) {\n                        self.list_extensions.push({\n                            id: datatypes[key].extension,\n                            text: datatypes[key].extension,\n                            description: datatypes[key].description,\n                            description_url: datatypes[key].description_url\n                        });\n                    }\n                    self.list_extensions.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                    self.list_extensions.unshift(self.auto);\n                }\n            });\n        }\n        if (this.list_extensions.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/genomes`,\n                success: function(genomes) {\n                    for (var key in genomes) {\n                        self.list_genomes.push({\n                            id: genomes[key][1],\n                            text: genomes[key][0]\n                        });\n                    }\n                    self.list_genomes.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                }\n            });\n        }\n    },\n\n    renderSelectBoxes: function(options) {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var self = this;\n        var current_genome = \"?\";\n        var current_ext = \"auto\";\n        if (typeof options !== \"undefined\") {\n            if (typeof options.genome_build !== \"undefined\") {\n                current_genome = options.genome_build;\n            }\n            if (typeof options.file_ext !== \"undefined\") {\n                current_ext = options.file_ext;\n            }\n        }\n        this.select_genome = new mod_select.View({\n            css: \"dataset-genome-select\",\n            data: self.list_genomes,\n            container: self.$el.find(\"#dataset_genome_select\"),\n            value: current_genome\n        });\n        this.select_extension = new mod_select.View({\n            css: \"dataset-extension-select\",\n            data: self.list_extensions,\n            container: self.$el.find(\"#dataset_extension_select\"),\n            value: current_ext\n        });\n    },\n\n    templateDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-download\"></span>',\n                \"&nbsp;Download\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-book\"></span>',\n                \"&nbsp;to History\",\n                \"</button>\",\n                '<% if (item.get(\"can_user_modify\")) { %>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-pencil\"></span>',\n                \"&nbsp;Modify\",\n                \"</button>\",\n                \"<% } %>\",\n                '<% if (item.get(\"can_user_manage\")) { %>',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-group\"></span>',\n                \"&nbsp;Permissions\",\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<% if (item.get(\"is_unrestricted\")) { %>',\n                \"<div>\",\n                'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                \"</div>\",\n                \"<% } %>\",\n\n                // TABLE START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><%= _.escape(item.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (item.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. info</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">UUID</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">State</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n\n                '<% if (item.get(\"job_stderr\")) { %>',\n                \"<h4>Job Standard Error</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stderr\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                '<% if (item.get(\"job_stdout\")) { %>',\n                \"<h4>Job Standard Output</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stdout\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n\n                '<% if (item.get(\"has_versions\")) { %>',\n                \"<div>\",\n                \"<h3>Expired versions:</h3>\",\n                \"<ul>\",\n                '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                \"<% }) %>\",\n                \"<ul>\",\n                \"</div>\",\n                \"<% } %>\",\n                // TABLE END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateVersion: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                \"&nbsp;Latest dataset\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                // DATASET START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (ldda.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous blurb</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous information</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                // DATASET END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateModifyDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-times\"></span>',\n                \"&nbsp;Cancel\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                \"<td>\",\n                '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                \"<td>\",\n                '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                '<tr scope=\"row\">',\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"<% } else { %>\",\n                '<td scope=\"row\">unknown</td>',\n                \"<% } %>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. information</th>',\n                '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                \"</tr>\",\n                //TODO: add functionality to modify tags here\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDatasetPermissions: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-file-o\"></span>',\n                \"&nbsp;Dataset Details\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% } %>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library-related permissions</h2>\",\n                \"<h4>Roles that can modify the library item</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                \"<hr/>\",\n                \"<h2>Dataset-related permissions</h2>\",\n                '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                '<% if (!item.get(\"is_unrestricted\")) { %>',\n                '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                \"<% } else { %>\",\n                '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                \"<% } %>\",\n                \"<h4>Roles that can access the dataset</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBulkImportInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                \"</input>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryDatasetView: LibraryDatasetView\n};\n"]}