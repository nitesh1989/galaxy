{"version":3,"sources":["mvc/tours.js"],"names":["gxy_root","Galaxy","root","tour_opts","step","_","sessionStorage","removeItem","delay","orphan","data","each","preclick","$","postclick","click","onShown","element","textinsert","Backbone","val","TourItem","tourdata","hooked_tour_from_data","steps","url","model","tour","tour_id","getJSON","ToursView","title","setItem","JSON","stringify","initialize","Tour","extend","success","init","console","restart","render","View","tourtags","this","setElement","error","tpl","template","tourpage_template","tours","undefined","tourtagorder","e","preventDefault","push","on","attributes","tags","tag","elem","toUpperCase","slice","display","attr","name","toggleClass","keys","sort","html","models","giveTour","target","hasClass","css"],"mappings":"wRAMIA,EAA6B,oBAAXC,OAAyB,IAAMA,OAAOC,KAiDpDC,GACIC,QAAAA,OAAAA,eACIC,MAAAA,WACIC,eAAAC,WAAA,qBAEHC,MAAA,IACJC,QAAA,GAGDL,EAAA,SAAAM,GA+BR,OA9BYL,EAAAA,KAAAA,EAAAA,MAAEM,SAAAA,GACEP,EAAAQ,WACAC,EAAAA,OAAEC,WACLT,EAAAM,KAHDP,EAAAQ,SAAA,SAAAA,GAKPC,EAAAD,GAAAG,YAIGX,EAAAU,YACAV,EAAAA,OAAKY,WACDH,EAAAA,KAAET,EAAKa,UAAP,SAAAH,GAIPD,EAAAC,GAAAC,YATGX,EAAKc,aAILd,EAAKY,QAAU,WAcfG,EAAAA,EAAAA,SACRC,IAAAhB,EAAAc,YACOG,QAAAA,cAIPX,GAGIW,EAAAF,SAAIG,MAAWC,QACfjB,QAAAA,EAAAA,cAKYkB,EAAAA,SAAAA,WAAgBA,QADpBC,IAAAzB,EAAA,YAMR0B,MAAAL,IAGAM,EAAAA,SAAAA,GACH,IAAAF,EAjBDzB,EAiBC,aAjBD4B,EAkBHf,EApBDgB,QAAAJ,EAAA,SAAAf,GAsBIoB,IAAAA,EAAYX,EAAqBT,GACjCqB,eADiCC,QAAA,mBAAAC,KAAAC,UAAAxB,IAGjCyB,IAAAA,EAAAA,IAAYC,KACR/B,EAAAgC,QAEKX,MAAQJ,EAAbE,OAEIc,IAIIX,EAAAY,OACAC,EAAAA,KAAAA,GACHb,EAAAc,aAITC,EAAQvB,SAAAwB,KAAAN,QACJN,MAAA,QAEAI,WAAIS,WACJvC,IAAAA,EAAOwC,KACHA,KAAAC,WAAInB,UACAkB,KAAAnB,MAAA,IAAIkB,EACAA,KAAAA,MAAAA,OACHN,QAAA,WACDM,EAAAA,UAEAvC,MAAAA,WAEImC,QAAAO,MAAIH,8BAKXF,OAAA,WACJ,IAAAM,EAfD3C,EAAA4C,SAlIJC,uzCAiIQN,KAmBJvC,EAAAM,KAAAkC,KAAAnB,MAEQsB,OAAI,SAAArB,GAAA,OACAwB,EAAAA,WAAYzB,WADZ0B,IAEAR,EAAUA,WACVS,EAAAA,UAAcA,KAAAA,WAAAA,WAIlBC,EAAEC,SAAFJ,MAAAK,KAAA7B,IAGH8B,EAAG9C,KAAAgB,EAAS+B,WAAAC,KAAA,SAAAC,GACLC,EAAAA,EAASP,OAAF,GAAXQ,cAAAF,EAAAG,MAAA,QACAX,IAAIY,EAAUJ,KACVA,EAAWK,IAAKC,KAAAN,EAAAT,WAEpBU,EAAKM,GAAYhB,MAAAK,KAAA7B,OAIbqC,IAAAA,EAAAA,OAAUI,KAAVxB,GAAAyB,OAEJxD,KAAAA,IAvBRyD,KAyBHtB,GAjELG,MAAAN,KAAAnB,MAAA6C,OA4CoB3B,SAAUA,EACVS,aAuBLA,KAGXlD,GAAAA,QAAWA,YAHA,SAAAmD,GAIXkB,EAAUA,iBAtBEA,EAAS3D,EAAEgC,MAAMnC,KAAK,cAEzB+C,GAAG,QAAS,uBAAwB,SAAAH,GACjC,IAAIO,EAAOhD,EAAEyC,EAAEmB,QACXT,EAAU,QACVJ,EAAMC,EAAKI,KAAK,uBAEpBJ,EAAKM,YAAY,eACjBN,EAAKM,YAAY,iBAEbN,EAAKa,SAAS,mBACdV,EAAU,QAEdnD,EAAAA,YAAc+C,EAAd,MAAuBe,KAAMX,QAASA,oBAMlDlC,UAAWA,EACXP,sBAAuBA,EACvBpB,UAAWA,EACXqE,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\nimport * as BootstrapTour from \"libs/bootstrap-tour\";\nvar gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\nvar tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n\n<div class=\"col-12 btn-group\" role=\"group\" aria-label=\"Tag selector\">\n    <% _.each(tourtagorder, function(tag) { %>\n    <button class=\"btn btn-primary tag-selector-button\" tag-selector-button=\"<%- tag %>\">\n        <%- tag %>\n    </button>\n    <% }); %>\n</div>\n\n<% _.each(tourtagorder, function(tourtagkey) { %>\n<div tag=\"<%- tourtagkey %>\" style=\"display: block;\">\n    <% var tourtag = tourtags[tourtagkey]; %>\n    <h4>\n        <%- tourtag.name %>\n    </h4>\n    <ul class=\"list-group\">\n    <% _.each(tourtag.tours, function(tour) { %>\n        <li class=\"list-group-item\">\n            <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n                <%- tour.name || tour.id %>\n            </a>\n             - <%- tour.attributes.description || \\\"No description given.\\\" %>\n             <% _.each(tour.attributes.tags, function(tag) { %>\n                <span class=\"label label-primary sm-label-pad\">\n                    <%- tag.charAt(0).toUpperCase() + tag.slice(1) %>\n                </span>\n             <% }); %>\n        </li>\n    <% }); %>\n    </ul>\n</div>\n<% }); %>`;\n\nvar tour_opts = {\n    storage: window.sessionStorage,\n    onEnd: function() {\n        sessionStorage.removeItem(\"activeGalaxyTour\");\n    },\n    delay: 150, // Attempts to make it look natural\n    orphan: true\n};\n\nvar hooked_tour_from_data = data => {\n    _.each(data.steps, step => {\n        if (step.preclick) {\n            step.onShow = () => {\n                _.each(step.preclick, preclick => {\n                    // TODO: click delay between clicks\n                    $(preclick).click();\n                });\n            };\n        }\n        if (step.postclick) {\n            step.onHide = () => {\n                _.each(step.postclick, postclick => {\n                    // TODO: click delay between clicks\n                    $(postclick).click();\n                });\n            };\n        }\n        if (step.textinsert) {\n            // Have to manually trigger a change here, for some\n            // elements which have additional logic, like the\n            // upload input box\n            step.onShown = () => {\n                $(step.element)\n                    .val(step.textinsert)\n                    .trigger(\"change\");\n            };\n        }\n    });\n    return data;\n};\n\nvar TourItem = Backbone.Model.extend({\n    urlRoot: `${gxy_root}api/tours`\n});\n\nvar Tours = Backbone.Collection.extend({\n    url: `${gxy_root}api/tours`,\n    model: TourItem\n});\n\nvar giveTour = tour_id => {\n    var url = `${gxy_root}api/tours/${tour_id}`;\n    $.getJSON(url, data => {\n        // Set hooks for additional click and data entry actions.\n        var tourdata = hooked_tour_from_data(data);\n        sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n        // Store tour steps in sessionStorage to easily persist w/o hackery.\n        var tour = new Tour(\n            _.extend(\n                {\n                    steps: tourdata.steps\n                },\n                tour_opts\n            )\n        );\n        // Always clean restart, since this is a new, explicit giveTour execution.\n        tour.init();\n        tour.goTo(0);\n        tour.restart();\n    });\n};\n\nvar ToursView = Backbone.View.extend({\n    title: \"Tours\",\n    // initialize\n    initialize: function() {\n        var self = this;\n        this.setElement(\"<div/>\");\n        this.model = new Tours();\n        this.model.fetch({\n            success: function() {\n                self.render();\n            },\n            error: function() {\n                // Do something.\n                console.error(\"Failed to fetch tours.\");\n            }\n        });\n    },\n\n    render: function() {\n        var tpl = _.template(tourpage_template);\n\n        var tourtags = {};\n        _.each(this.model.models, tour => {\n            if (tour.attributes.tags === null) {\n                if (tourtags.Untagged === undefined) {\n                    tourtags.Untagged = { name: \"Untagged\", tours: [] };\n                }\n                tourtags.Untagged.tours.push(tour);\n            } else {\n                _.each(tour.attributes.tags, tag => {\n                    tag = tag.charAt(0).toUpperCase() + tag.slice(1);\n                    if (tourtags[tag] === undefined) {\n                        tourtags[tag] = { name: tag, tours: [] };\n                    }\n                    tourtags[tag].tours.push(tour);\n                });\n            }\n        });\n        var tourtagorder = Object.keys(tourtags).sort();\n\n        this.$el\n            .html(\n                tpl({\n                    tours: this.model.models,\n                    tourtags: tourtags,\n                    tourtagorder: tourtagorder\n                })\n            )\n            .on(\"click\", \".tourItem\", function(e) {\n                e.preventDefault();\n                giveTour($(this).data(\"tour.id\"));\n            })\n            .on(\"click\", \".tag-selector-button\", e => {\n                var elem = $(e.target);\n                var display = \"block\";\n                var tag = elem.attr(\"tag-selector-button\");\n\n                elem.toggleClass(\"btn-primary\");\n                elem.toggleClass(\"btn-secondary\");\n\n                if (elem.hasClass(\"btn-secondary\")) {\n                    display = \"none\";\n                }\n                $(`div[tag='${tag}']`).css({ display: display });\n            });\n    }\n});\n\nexport default {\n    ToursView: ToursView,\n    hooked_tour_from_data: hooked_tour_from_data,\n    tour_opts: tour_opts,\n    giveTour: giveTour\n};\n"]}