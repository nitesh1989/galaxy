{"version":3,"sources":["mvc/job/job-params.js"],"names":["View","Backbone","$el_message","initialize","status","options","this","message","console","log","$el","empty","append"],"mappings":"uKAIIA,EAAAC,SAAIC,KAAAA,QACJC,WAAIC,SAASC,GAeTC,KAAKD,QAAUA,EAZnBC,KAAIC,WAAWA,UACXL,KAAAA,UAGAA,OAAAA,WACHM,QAAAC,IAAA,MACJH,KAcYI,IAAIC,QAAQC,OAAO,kCAexBZ,KAAAA","file":"../../../scripts/mvc/job/job-params.js","sourcesContent":["/** Workflow view */\nimport Utils from \"utils/utils\";\n/** Build messages after user action */\nfunction build_messages(self) {\n    var $el_message = self.$el.find(\".response-message\");\n    var status = Utils.getQueryString(\"status\");\n    var message = Utils.getQueryString(\"message\");\n\n    if (message && message !== \"\") {\n        $el_message.addClass(`${status}message`);\n        $el_message.html(`<p>${_.escape(message)}</p>`);\n    } else {\n        $el_message.html(\"\");\n    }\n}\n\n/** View of the main workflow list page */\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        console.log(\"HI\");\n        var self = this;\n        self.$el.empty().append(\"<h1>Testing</h1>\");\n        //var self = this,\n        //min_query_length = 3;\n        //$.getJSON( Galaxy.root + 'api/workflows/', function( workflows ) {\n        //var $el_workflow = null;\n        //// Add workflow header\n        //// Add user actions message if any\n        //build_messages( self );\n        //$el_workflow = self.$el.find( '.user-workflows' );\n        //// Add the actions buttons\n        //$el_workflow.append( self._templateActionButtons() );\n        //if( workflows.length > 0) {\n        //$el_workflow.append( self._templateWorkflowTable( self, workflows) );\n        //self.adjust_actiondropdown( $el_workflow );\n        //// Register delete and run workflow events\n        //_.each( workflows, function( wf ) {\n        //self.confirm_delete( self, wf );\n        //});\n        //// Register search workflow event\n        //self.search_workflow( self, self.$el.find( '.search-wf' ), self.$el.find( '.workflow-search tr' ), min_query_length );\n        //}\n        //else {\n        //$el_workflow.append( self._templateNoWorkflow() );\n        //}\n        //});\n    }\n});\n\nexport default {\n    View: View\n};\n"]}