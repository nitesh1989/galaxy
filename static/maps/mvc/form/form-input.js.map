{"version":3,"sources":["mvc/form/form-input.js"],"names":["Backbone","View","extend","initialize","app","options","this","model","field","text_enable","app_options","text_disable","cls_enable","cls_disable","always_refresh","set","setElement","_template","$field","$","$info","$preview","$collapsible","$collapsible_text","$collapsible_icon","$title","$title_text","$error_text","$error","$backdrop","prepend","collapsible_value","get","JSON","render","stringify","listenTo","self","trigger","collapsed","reset","backdrop","error","text","help_argument","help_text","indexOf","$el","error_text","html","_","escape","color","style","collapsible_state","hide","show","undefined","addClass","removeClass","attr","tooltip","placement","append"],"mappings":"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","file":"../../../scripts/mvc/form/form-input.js","sourcesContent":["/**\n    This class creates a form input element wrapper\n*/\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = (options && options.field) || new Backbone.View();\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                text_enable: this.app_options.text_enable || \"Enable\",\n                text_disable: this.app_options.text_disable || \"Disable\",\n                cls_enable: this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n                cls_disable: this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n                always_refresh: this.app_options.always_refresh\n            }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed =\n            collapsible_value !== undefined &&\n            JSON.stringify(this.model.get(\"value\")) == JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", () => {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", () => {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (help_argument && help_text.indexOf(`(${help_argument})`) == -1) {\n            help_text += ` (${help_argument})`;\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview\n            [\n                (this.field.collapsed && this.model.get(\"collapsible_preview\")) || this.model.get(\"disabled\")\n                    ? \"show\"\n                    : \"hide\"\n            ]()\n            .html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\") ? this.$field.hide() : this.$field.show();\n        // render input field color and style\n        this.field.model &&\n            this.field.model.set({\n                color: this.model.get(\"color\"),\n                style: this.model.get(\"style\")\n            });\n        // render collapsible options\n        if (!this.model.get(\"disabled\") && this.model.get(\"collapsible_value\") !== undefined) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon\n                .removeClass()\n                .addClass(\"icon\")\n                .addClass(this.model.get(`cls_${collapsible_state}`))\n                .attr(\"data-original-title\", this.model.get(`text_${collapsible_state}`))\n                .tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-form-element\")\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-error ui-error\")\n                    .append($(\"<span/>\").addClass(\"fa fa-arrow-down\"))\n                    .append($(\"<span/>\").addClass(\"ui-form-error-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-title\")\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-collapsible\")\n                            .append($(\"<i/>\").addClass(\"ui-form-collapsible-icon\"))\n                            .append($(\"<span/>\").addClass(\"ui-form-collapsible-text\"))\n                    )\n                    .append($(\"<span/>\").addClass(\"ui-form-title-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-field\")\n                    .append($(\"<span/>\").addClass(\"ui-form-info\"))\n                    .append($(\"<div/>\").addClass(\"ui-form-backdrop\"))\n            )\n            .append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n"]}