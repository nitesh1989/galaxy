{"version":3,"sources":["mvc/form/form-repeat.js"],"names":["View","Backbone","extend","initialize","options","this","list","_utils2","default","merge","title","empty_text","max","min","button_new","_uiMisc2","ButtonIcon","icon","tooltip","cls","onclick","onnew","setElement","$list","$","append","$el","add","id","button_delete","size","ondel","Galaxy","emit","hide","portlet","fadeIn","disable","_refresh","operations","delAll","debug","del","hideOptions","_","each","hideOperation","isEmpty","addClass","html","index"],"mappings":"yPAIIA,EAAOC,SAASD,KAAKE,QACrBC,WAAY,SAASC,GACjBC,KAAKC,QACLD,KAAKD,QAAUG,EAAAC,QAAMC,MAAML,GACvBM,MAAO,SACPC,WAAY,iBACZC,IAAK,KACLC,IAAK,OAETR,KAAKS,WAAa,IAAIC,EAAAP,QAAGQ,YACrBC,KAAM,UACNP,MAAAA,UAAiBL,KAAKD,QAAQM,MAC9BQ,QAAAA,WAAoBb,KAAKD,QAAQM,MAAjC,SACAS,IAAK,gDACLC,QAAS,WAdVnB,EAASD,OAAKE,EAAOmB,WAGxBhB,KAAAiB,WACIZ,EAAAA,UACAC,OAAAA,KAAYY,MAAAC,EAAA,WACZZ,OAAKY,EAH2B,UAAAC,OAAApB,KAAAS,WAAAY,QAQhChB,KAAAA,WACAQ,OAAAA,EAAAA,KAAAA,KAAAA,OAICS,IAAA,SAAAvB,GAP+B,GAAlBA,EAAlBwB,KAAAvB,KAAAC,KAAAF,EAAAwB,IAAoC,CAgBxC,IAAAC,EAAA,IAAAd,EAAAP,QAAAQ,YACAc,KAAM,aACFZ,QAASY,2BA3BeX,IAAA,0CAwCpBC,QAAS,WAVjBhB,EAAA2B,OAAA3B,EAAA2B,WAGQC,EAAAA,IAAOC,EAAAA,QAAWjC,MAClB4B,GAAAxB,EAAAwB,GACHlB,MAAA,cACDS,IAAIU,EAAAA,KAAgB,oBAChBZ,YAAMY,cAD4BA,KAGlCV,EAAAA,OAAKf,EAAAsB,KACLN,EAAAA,IAAAA,SAAS,eAAWc,OAChB9B,KAAAA,KAAAA,EAAAA,IAAQ2B,EACX1B,KAAAkB,MAAAE,OAAAU,EAAAT,IAAAU,OAAA,SANiC/B,KAAlBD,QAApBQ,IAAA,GAAAP,KAAAyB,QAAAzB,KAAAD,QAAAQ,KAAAP,KAAAS,WAAAuB,UAQAhC,KAAAiC,gBA1BAN,OAAKV,KAAAA,MACC,qBACgBC,0CA4BlBgB,IAAAA,SAAAA,GAJUlC,KAAdC,KAAAsB,IASAvB,KAAAkB,MAAKA,KAAL,IAAWE,GAAOU,gBAClB9B,KAAKD,KAAQQ,GACbP,KAAAS,WAAKwB,SACRjC,KAxD2BiC,YAkDxBH,OAAAA,KAAQV,MAAOrB,qBAAf,6BAUAoC,OAAA,WACIR,IAAAA,IAAAA,KAAOC,KAAKQ,KACZpC,KAAAqC,IAAAd,IAKJe,YAAKL,WACRjC,KApE2BS,WAAAY,IAAAQ,OAgFxBU,EAAEC,KAAKxC,KAAKC,KAAM,SAAA6B,GAVtBA,EAAAW,cAAA,mBAEIF,EAAAG,QAAK1C,KAALC,OACID,KAAAqB,IAAKgB,OACRlB,EAAA,UA1EuBwB,SAAA,gBAuFXC,KAAK5C,KAAKD,QAAQO,cAN3BwB,SAAAA,WACH,IAAAe,EAFD,EAGAN,IAAAA,IAAEG,KAAQ1C,KAAKC,KAAf,CAnFwB,IAAA6B,EAAA9B,KAAAC,KAAAsB,GAgGpBO,EAAQzB,QAAWwC,EAAnB,KAA6B7C,KAAKD,QAAQM,OALlDyB,EAAA9B,KAAAyB,OAAAzB,KAAAD,QAAAS,IAAA,gBAAA,iBAAA,gCAMQsB,KAAAA","file":"../../../scripts/mvc/form/form-repeat.js","sourcesContent":["/** This class creates a ui component which enables the dynamic creation of portlets */\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.list = {};\n        this.options = Utils.merge(options, {\n            title: \"Repeat\",\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new Ui.ButtonIcon({\n            icon: \"fa-plus\",\n            title: `Insert ${this.options.title}`,\n            tooltip: `Add new ${this.options.title} block`,\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function() {\n                options.onnew && options.onnew();\n            }\n        });\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$list = $(\"<div/>\")))\n                .append($(\"<div/>\").append(this.button_new.$el))\n        );\n    },\n\n    /** Number of repeat blocks */\n    size: function() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\"form-repeat::add()\", \"Duplicate or invalid repeat block id.\");\n            return;\n        }\n        var button_delete = new Ui.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: \"Delete this repeat block\",\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function() {\n                options.ondel && options.ondel();\n            }\n        });\n        var portlet = new Portlet.View({\n            id: options.id,\n            title: \"placeholder\",\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        this.options.max > 0 && this.size() >= this.options.max && this.button_new.disable();\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(`#${id}`).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function() {\n        this.button_new.$el.hide();\n        _.each(this.list, portlet => {\n            portlet.hideOperation(\"button_delete\");\n        });\n        _.isEmpty(this.list) &&\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-info\")\n                    .html(this.options.empty_text)\n            );\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(`${++index}: ${this.options.title}`);\n            portlet[this.size() > this.options.min ? \"showOperation\" : \"hideOperation\"](\"button_delete\");\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n"]}