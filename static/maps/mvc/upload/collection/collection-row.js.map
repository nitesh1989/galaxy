{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","this","model","setElement","_template","$mode","$","$title","$text","$size","_uiPopover2","default","title","container","placement","select_genome","value","select_extension","$symbol","$text_content","on","e","settings","target","val","length","listenTo","default_genome","default_extension","_refreshInfo","file_size","remove","collection","render","_refreshStatus","html","_","escape","file_name","bytesToString","removeClass","addClass","_refreshFileSize","file_mode","width","$el","top","height","show","info","get","$info_text","_refreshPercentage","percentage","parseInt","css","$percentage","status","enabled","$progress_bar","hide","_utils2","_removeRow","indexOf","_showSettings","visible","empty","append","_uploadSettings2","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", () => {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: `${percentage}%` });\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return `<tr id=\"upload-row-${options.id}\" class=\"upload-row\"><td><div class=\"upload-text-column\"><div class=\"upload-mode\"/><div class=\"upload-title-extended\"/><div class=\"upload-text\"><div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\"upload-text-content form-control\"/></div></div></td><td><div class=\"upload-size\"/></td><td><div class=\"upload-info\"><div class=\"upload-info-text\"/><div class=\"upload-info-progress progress\"><div class=\"upload-progress-bar progress-bar progress-bar-success\"/><div class=\"upload-percentage\">0%</div></div></div></td><td><div class=\"upload-symbol ${this\n            .status_classes.init}\"/></td></tr>`;\n    }\n});\n"]}