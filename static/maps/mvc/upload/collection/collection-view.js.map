{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","currentFtp","setElement","_template","_uiMisc2","Button","uploadbox","select","icon","btnFtp","title","onclick","btnCreate","ftp_upload_site","id","btnLocal","_eventBuild","_eventReset","modal","hide","btnStop","btnReset","btnStart","button","$","prepend","$el","url","nginx_upload_path","index","file","each","_eventAnnounce","toData","get","history_id","progress","percentage","_eventProgress","_eventSuccess","message","_eventError","_eventComplete","addClass","removeClass","ondragleave","select_extension","_uiSelect2","css","container","ext","composite_files","onchange","extension","updateExtension","data","value","text","collectionType","select_collection","updateCollectionType","_uploadExtension2","e","target","list","placement","preventDefault","select_genome","default_genome","genome","on","model","_eventRemove","_updateScreen","new_model","Model","name","file_size","file_mode","mode","path","file_name","file_data","upload_row","it","set","_uploadPercentage","hids","_","pluck","status","upload_completed","Galaxy","currHistoryPanel","info","allHids","forEach","models","upload","push","apply","hid","getByHid","constructor","selection","historyId","_eventFtp","ftp","visible","empty","append","_uploadFtp2","onadd","ftp_file","add","size","remove","model_index","onremove","show","_eventCreate","_eventStart","_eventStop","default_extension","defaults_only","updateGenome","compatible","html","enable_reset","enable_build","enable_start","enable_sources","show_table","btnBuild"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, upload => {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, hid => Galaxy.currHistoryPanel.collection.getByHid(hid));\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${this.counter\n                    .announce} file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}