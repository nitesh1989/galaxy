{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["Backbone","View","extend","status_classes","init","ready","running","success","error","initialize","app","options","self","this","model","setElement","_template","$source","$","$settings","$status","$text","$progress_bar","$percentage","uploadinput","$el","ondragover","get","addClass","ondragleave","removeClass","onchange","$text_content","files","$info_text","length","$info_progress","reset","$file_name","$file_desc","name","$file_size","size","mode","_refreshReady","_uiMisc2","default","ButtonMenu","title","file_data","file_name","file_size","file_mode","dialog","ftp_upload_site","button_menu","addMenu","icon","onclick","_showFtp","append","container","find","placement","_uiPopover2","on","e","set","url_paste","target","val","preventDefault","listenTo","_refreshInfo","_showSettings","_refreshFileName","_refreshMode","render","id","html","_utils2","_refreshFileSize","remove","apply","height","css","width","top","trigger","hide","info","show","_refreshPercentage","percentage","parseInt","offsetHeight","_refreshStatus","status","bytesToString","ftp","visible","_uploadFtp2","ftp_file","path","empty","settings","_uploadSettings2"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["/** Renders the composite upload row view */\nimport Utils from \"utils/utils\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function(files) {\n                if (self.model.get(\"status\") != \"running\" && files && files.length > 0) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", () => {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", () => {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        this.$el.attr(\"id\", `upload-row-${this.model.id}`);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function() {\n        this.app.collection.each(model => {\n            model.set(\"status\", (model.get(\"file_size\") > 0 && \"ready\") || \"init\");\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: `${percentage}%` });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source.find(\".button\")[status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function() {\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(\n                new UploadFtp({\n                    ftp_upload_site: this.app.ftp_upload_site,\n                    onchange: function(ftp_file) {\n                        self.ftp.hide();\n                        if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                            self.model.reset({\n                                file_mode: \"ftp\",\n                                file_name: ftp_file.path,\n                                file_size: ftp_file.size,\n                                file_path: ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<tr class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-source\"/>' +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-status\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-desc upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-name upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-size upload-size\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n"]}