{"version":3,"sources":["mvc/dataset/dataset-edit-attributes.js"],"names":["View","Backbone","extend","initialize","this","setElement","model","Model","dataset_id","Galaxy","params","message","_uiMisc2","default","Message","persistent","tabs","_createTabs","$el","append","$","hide","render","self","ajax","success","response","initial_message","_","form","set","key","show","url","root","responseJSON","update","status","_submit","operation","error","data","err_msg","type","_reloadHistory","attribute","_uiTabs2","title","add","id","icon","forms","conversion","datatype","permission","tooltip","_getAttribute","ButtonIcon","onclick","operations","submit_attributes","submit_conversion","submit_datatype","submit_permission","loadCurrentHistory"],"mappings":"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","file":"../../../scripts/mvc/dataset/dataset-edit-attributes.js","sourcesContent":["/** Dataset edit attributes view */\nimport Utils from \"utils/utils\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nvar View = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.message = new Ui.Message({ persistent: true });\n        this.tabs = this._createTabs();\n        this.$el\n            .append($(\"<h4/>\").append(\"Edit dataset attributes\"))\n            .append(this.message.$el)\n            .append(\"<p/>\")\n            .append(this.tabs.$el)\n            .hide();\n        this.render();\n    },\n\n    /** fetch data for the selected dataset and build forms */\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: `${Galaxy.root}dataset/get_edit?dataset_id=${self.model.get(\"dataset_id\")}`,\n            success: function(response) {\n                !self.initial_message && self.message.update(response);\n                self.initial_message = true;\n                _.each(self.forms, (form, key) => {\n                    form.model.set(\"inputs\", response[`${key}_inputs`]);\n                    form.model.set(\"hide_operations\", response[`${key}_disable`]);\n                    form.render();\n                });\n                self.$el.show();\n            },\n            error: function(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while loading the dataset.\"\n                });\n            }\n        });\n    },\n\n    /** submit data to backend to update attributes */\n    _submit: function(operation, form) {\n        var self = this;\n        var data = form.data.create();\n        data.dataset_id = this.model.get(\"dataset_id\");\n        data.operation = operation;\n        $.ajax({\n            type: \"PUT\",\n            url: `${Galaxy.root}dataset/set_edit`,\n            data: data,\n            success: function(response) {\n                self.message.update(response);\n                self.render();\n                self._reloadHistory();\n            },\n            error: function(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while editing the dataset attributes.\"\n                });\n            }\n        });\n    },\n\n    /** create tabs for different dataset attribute categories*/\n    _createTabs: function() {\n        this.forms = {\n            attribute: this._getAttribute(),\n            conversion: this._getConversion(),\n            datatype: this._getDatatype(),\n            permission: this._getPermission()\n        };\n        var tabs = new Tabs.View();\n        tabs.add({\n            id: \"attribute\",\n            title: \"Attributes\",\n            icon: \"fa fa-bars\",\n            tooltip: \"Edit dataset attributes\",\n            $el: this.forms.attribute.$el\n        });\n        tabs.add({\n            id: \"convert\",\n            title: \"Convert\",\n            icon: \"fa-gear\",\n            tooltip: \"Convert to new format\",\n            $el: this.forms.conversion.$el\n        });\n        tabs.add({\n            id: \"datatype\",\n            title: \"Datatypes\",\n            icon: \"fa-database\",\n            tooltip: \"Change data type\",\n            $el: this.forms.datatype.$el\n        });\n        tabs.add({\n            id: \"permissions\",\n            title: \"Permissions\",\n            icon: \"fa-user\",\n            tooltip: \"Permissions\",\n            $el: this.forms.permission.$el\n        });\n        return tabs;\n    },\n\n    /** edit main attributes form */\n    _getAttribute: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Edit attributes\",\n            operations: {\n                submit_attributes: new Ui.ButtonIcon({\n                    tooltip: \"Save attributes of the dataset.\",\n                    icon: \"fa-floppy-o\",\n                    title: \"Save\",\n                    onclick: function() {\n                        self._submit(\"attributes\", form);\n                    }\n                }),\n                submit_autodetect: new Ui.ButtonIcon({\n                    tooltip:\n                        \"This will inspect the dataset and attempt to correct the values of fields if they are not accurate.\",\n                    icon: \"fa-undo\",\n                    title: \"Auto-detect\",\n                    onclick: function() {\n                        self._submit(\"autodetect\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** datatype conversion form */\n    _getConversion: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Convert to new format\",\n            operations: {\n                submit_conversion: new Ui.ButtonIcon({\n                    tooltip: \"Convert the datatype to a new format.\",\n                    title: \"Convert datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"conversion\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** change datatype form */\n    _getDatatype: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Change datatype\",\n            operations: {\n                submit_datatype: new Ui.ButtonIcon({\n                    tooltip: \"Change the datatype to a new type.\",\n                    title: \"Change datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"datatype\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** dataset permissions form */\n    _getPermission: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Manage dataset permissions\",\n            operations: {\n                submit_permission: new Ui.ButtonIcon({\n                    tooltip: \"Save permissions.\",\n                    title: \"Save permissions\",\n                    icon: \"fa-floppy-o \",\n                    onclick: function() {\n                        self._submit(\"permission\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** reload Galaxy's history after updating dataset's attributes */\n    _reloadHistory: function() {\n        if (window.Galaxy) {\n            window.Galaxy.currHistoryPanel.loadCurrentHistory();\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n"]}