{"version":3,"sources":["mvc/webhooks.js"],"names":["WebhookModel","Backbone","Model","extend","defaults","activate","Webhooks","WebhookView","View","el","model","me","this","toolId","options","$el","attr","initialize","toolVersion","fetch","success","render","toJSON","html","webhook","name","styles","$","type","text","script","add","webhooks","url","Galaxy","root","async"],"mappings":"4GAIA,IAAIA,EAAeC,SAASC,MAAMC,QAC9BC,UALJC,UAAA,KAIAC,EAAIN,SAAeC,WAASC,QACxBE,MAAAA,IADqCG,EAAzCN,SAAAO,KAAAL,QAWIM,GAAI,gBAJJC,WAAOV,SAAAA,GADX,IAAAW,EAAAC,KASYC,EAASC,EAAQD,QAAU,GALnCN,EAAcN,EAASO,aAAY,GAQ/BI,KAAKG,IAAIC,KAAK,UAAWH,GAL7BI,KAAAA,IAAAA,KAAY,eAAAC,GAERN,KAAAF,MAAIG,IAASC,EACbF,KAAAF,MAAIQ,QAAAA,EAAcJ,QAOlBF,KAAKF,MAAMS,OALXC,QAASJ,WACTL,EAAKI,aAKDK,OAAAA,WACIT,IAAAA,EAAAA,KAAGU,MAAHC,SAkBR,OApBiBV,KAAjBG,IAAAQ,KAAiB,YAAjBC,EAAAC,KAAiB,YAbcD,EAAAE,QAyB3BC,EAAE,YAAcC,KAAM,aALtBC,KAAAL,EAAAE,QACAF,SAAU,QAOVA,EAAQM,QALZH,EAAA,aAAAC,KAAA,oBACIJ,KAAAA,EAAJM,QAIIN,SAAQM,QAKZlB,mBAeJN,SAAAA,EACAC,YAAAA,EACAwB,IAbAA,SAAAA,GACA,IAAAC,EAAIA,IAAW1B,EAEf0B,EAAAA,IAASC,OAAMC,KAAOC,EAAOrB,IAC7BkB,EAAAA,OACII,OAAAA,EAAOtB,OAAQsB,EAAQtB,MACvBM,QAAAA,EAASN","file":"../../scripts/mvc/webhooks.js","sourcesContent":["/**\n  Webhooks\n**/\n\nvar WebhookModel = Backbone.Model.extend({\n    defaults: {\n        activate: false\n    }\n});\n\nvar Webhooks = Backbone.Collection.extend({\n    model: WebhookModel\n});\n\nvar WebhookView = Backbone.View.extend({\n    el: \"#webhook-view\",\n\n    initialize: function(options) {\n        var me = this;\n        var toolId = options.toolId || \"\";\n        var toolVersion = options.toolVersion || \"\";\n\n        this.$el.attr(\"tool_id\", toolId);\n        this.$el.attr(\"tool_version\", toolVersion);\n\n        this.model = new WebhookModel();\n        this.model.urlRoot = options.urlRoot;\n        this.model.fetch({\n            success: function() {\n                me.render();\n            }\n        });\n    },\n\n    render: function() {\n        var webhook = this.model.toJSON();\n\n        this.$el.html(`<div id=\"${webhook.name}\"></div>`);\n        if (webhook.styles)\n            $(\"<style/>\", { type: \"text/css\" })\n                .text(webhook.styles)\n                .appendTo(\"head\");\n        if (webhook.script)\n            $(\"<script/>\", { type: \"text/javascript\" })\n                .text(webhook.script)\n                .appendTo(\"head\");\n\n        return this;\n    }\n});\n\nvar add = options => {\n    var webhooks = new Webhooks();\n\n    webhooks.url = Galaxy.root + options.url;\n    webhooks.fetch({\n        async: options.async ? options.async : true,\n        success: options.callback\n    });\n};\n\nexport default {\n    Webhooks: Webhooks,\n    WebhookView: WebhookView,\n    add: add\n};\n"]}