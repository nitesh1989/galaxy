{"version":3,"sources":["mvc/lazy/lazy-limited.js"],"names":["Backbone","View","extend","initialize","options","this","$container","collection","new_content","max","self","content_list","$message","addClass","append","listenTo","_reset","_refresh","_remove","_done","done","_","size","each","content","remove","hide","model","model_id","id","i","models","view"],"mappings":"+HAEeA,SAASC,KAAKC,QACzBC,WAAY,SAASC,GAEjBC,KAAKC,WAAaF,EAAQE,WAC1BD,KAAKE,WAJEP,EAASC,WACpBE,KAAAA,YAAYC,EAAAI,YACRH,KAAAI,IAAIC,EAAJD,KAAA,GACAJ,KAAAM,gBACAN,KAAAO,SAAKL,EAAAA,UACLM,SAAKL,kBACLM,OAFKP,qBAELF,KAAAI,IAFKF,yBAGLF,KAAAC,WAAKK,OAALN,KAAAO,UACAP,KAAAU,SAAKH,KAALL,WAAgB,QAAAF,KACFW,OAAAX,MAEdA,KAAAU,SAAKT,KAALC,WAAuB,MAAKK,KAA5BK,SAAAZ,MACAA,KAAAU,SAAKA,KAASR,WAAKA,SAAYF,KAASa,QAAxCb,OAMJc,MAAO,WADP,IAAAC,EAAAC,EAAAC,KAAAjB,KAAAM,cAAAN,KAAAI,IAEI,OADJU,KAAAA,SAAOC,EAAA,OAAW,UACdA,GAMJJ,OAAQ,WADRK,EAAAE,KAAAlB,KAAAM,aAAA,SAAAa,GACAR,EAAQS,WAEAD,KAAAA,gBACHnB,KAFDO,SAAAc,QAQJR,QAAS,SAASS,GADlB,IAAAC,EAAAD,EAAAE,GACAX,EAASb,KAAAM,aAAAiB,GACLJ,IACAA,EAAIA,gBACAA,KAAJb,aAAaiB,IAETvB,KAAAY,YAMRA,SAAU,WADV,IAAAZ,KAAAc,QACAF,IAAAA,IAAUa,KAAAzB,KAAAE,WAAWwB,OAAA,CACb,IAACJ,EAAAtB,KAAcE,WAAAwB,OAAAD,GACfzB,KAAcM,aAAAgB,EAAgBI,IAC1B,IAAA1B,KAAIsB,aAAapB,EAAAA,IAAWwB,CAC5B,IAAIC,EAAO3B,KAAKM,YAAagB,GAEzB,GADJtB,KAAKM,aAAKA,EAAagB,IAAME,EACzBxB,KAAImB,QACJ","file":"../../../scripts/mvc/lazy/lazy-limited.js","sourcesContent":["/** Contains helpers to limit/lazy load views for backbone views */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\")\n            .addClass(\"ui-limitloader\")\n            .append(`...only the first ${this.max} entries are visible.`);\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function() {\n        _.each(this.content_list, content => {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n"]}