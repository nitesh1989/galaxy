{"version":3,"sources":["mvc/workflow/workflow-view-data.js"],"names":["window","workflow_globals","DataInputView","Backbone","View","extend","className","initialize","options","input","this","nodeView","$el","attr","name","html","label","position","terminalElement","left","top","display","$","el","outerWidth","DataOutputView","output","node","extensions","indexOf","join","calloutView","isInput","OutputCalloutView","updateMaxWidth","css","redrawWorkflowOutput","tagName","view","outputName","append","Galaxy","root","addWorkflowOutput","isWorkflowOutput","has_changes","workflow","canvas_manager","draw_overview","tooltip","delay","title","margin","right","show","hoverImage","resetImage"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view-data.js","sourcesContent":["// TODO; tie into Galaxy state?\nwindow.workflow_globals = window.workflow_globals || {};\n\nvar DataInputView = Backbone.View.extend({\n    className: \"form-row dataRow input-data-row\",\n\n    initialize: function(options) {\n        this.input = options.input;\n        this.nodeView = options.nodeView;\n        this.terminalElement = options.terminalElement;\n\n        this.$el.attr(\"name\", this.input.name).html(this.input.label);\n\n        if (!options.skipResize) {\n            this.$el.css({\n                position: \"absolute\",\n                left: -1000,\n                top: -1000,\n                display: \"none\"\n            });\n            $(\"body\").append(this.el);\n            this.nodeView.updateMaxWidth(this.$el.outerWidth());\n            this.$el.css({\n                position: \"\",\n                left: \"\",\n                top: \"\",\n                display: \"\"\n            });\n            this.$el.remove();\n        }\n    }\n});\n\nvar DataOutputView = Backbone.View.extend({\n    className: \"form-row dataRow\",\n\n    initialize: function(options) {\n        this.output = options.output;\n        this.terminalElement = options.terminalElement;\n        this.nodeView = options.nodeView;\n\n        var output = this.output;\n        var label = output.name;\n        var node = this.nodeView.node;\n\n        var isInput = output.extensions.indexOf(\"input\") >= 0 || output.extensions.indexOf(\"input_collection\") >= 0;\n        if (!isInput) {\n            label = `${label} (${output.extensions.join(\", \")})`;\n        }\n        this.$el.html(label);\n        this.calloutView = null;\n        if ([\"tool\", \"subworkflow\"].indexOf(node.type) >= 0) {\n            var calloutView = new OutputCalloutView({\n                label: label,\n                output: output,\n                node: node\n            });\n            this.calloutView = calloutView;\n            this.$el.append(calloutView.el);\n            this.$el.hover(\n                () => {\n                    calloutView.hoverImage();\n                },\n                () => {\n                    calloutView.resetImage();\n                }\n            );\n        }\n        this.$el.css({\n            position: \"absolute\",\n            left: -1000,\n            top: -1000,\n            display: \"none\"\n        });\n        $(\"body\").append(this.el);\n        this.nodeView.updateMaxWidth(this.$el.outerWidth() + 17);\n        this.$el\n            .css({\n                position: \"\",\n                left: \"\",\n                top: \"\",\n                display: \"\"\n            })\n            .detach();\n    },\n    redrawWorkflowOutput: function() {\n        if (this.calloutView) {\n            this.calloutView.resetImage();\n        }\n    }\n});\n\nvar OutputCalloutView = Backbone.View.extend({\n    tagName: \"div\",\n\n    initialize: function(options) {\n        this.label = options.label;\n        this.node = options.node;\n        this.output = options.output;\n\n        var view = this;\n        var node = this.node;\n        this.$el\n            .attr(\"class\", `callout ${this.label}`)\n            .css({ display: \"none\" })\n            .append(\n                $(\"<div class='buttons'></div>\").append(\n                    $(\"<img/>\")\n                        .attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small-outline.png`)\n                        .click(() => {\n                            var outputName = view.output.name;\n                            if (node.isWorkflowOutput(outputName)) {\n                                node.removeWorkflowOutput(outputName);\n                                view\n                                    .$(\"img\")\n                                    .attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small-outline.png`);\n                            } else {\n                                node.addWorkflowOutput(outputName);\n                                view.$(\"img\").attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small.png`);\n                            }\n                            window.workflow_globals.workflow.has_changes = true;\n                            window.workflow_globals.canvas_manager.draw_overview();\n                        })\n                )\n            )\n            .tooltip({\n                delay: 500,\n                title: \"Mark dataset as a workflow output. All unmarked datasets will be hidden.\"\n            });\n\n        this.$el.css({\n            top: \"50%\",\n            margin: \"-8px 0px 0px 0px\",\n            right: 8\n        });\n        this.$el.show();\n        this.resetImage();\n    },\n\n    resetImage: function() {\n        if (!this.node.isWorkflowOutput(this.output.name)) {\n            this.$(\"img\").attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small-outline.png`);\n        } else {\n            this.$(\"img\").attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small.png`);\n        }\n    },\n\n    hoverImage: function() {\n        this.$(\"img\").attr(\"src\", `${Galaxy.root}static/images/fugue/asterisk-small-yellow.png`);\n    }\n});\n\nexport default {\n    DataInputView: DataInputView,\n    DataOutputView: DataOutputView\n};\n"]}