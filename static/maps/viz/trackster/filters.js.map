{"version":3,"sources":["viz/trackster/filters.js"],"names":["extend","Filter","obj_dict","this","manager","name","index","tool_id","tool_exp_name","prototype","to_dict","create_action_icon","css_class","on_click_fn","$","attr","addClass","tooltip","click","low","Number","MAX_VALUE","high","min","max","container","slider_label","alert","filter","parent_div","filter_label","slider","slider_row","values_span","text","appendTo","values_span_container","append","name_span","control_element","range","step","values","slide","event","ui","call","span","parseFloat","length","multi_value","parents","input_size","edit_slider_values","cur_value","focus","select","e","stopPropagation","remove","keyCode","trigger","slider_max","invalid","a_val","isNaN","slider_min","new_value","val","removeClass","display_controls_div","alpha_filter","transparency_icon","hide","request_draw","show","force","height_icon","height_filter","clear_after","track","hover","NumberFilter","type","copy","get_slider_step","applies_to","self","setTimeout","keep","element","_keep_val","to_filter","returnVal","Array","updated","update_attrs","i","update_ui_elt","value","Math","floor","FiltersManager","alpha_filter_name","bind","filters_dict","height_filter_name","filters","run_buttons_row","run_on_dataset_button","filter_manager","console","log","visible","is","filter_dicts","run_on_dataset","toggle","add_filter","push","init_filters","remove_all","children","dict","key","clear_filters","tool_filter_conditions","new_item","active_filters_list","run_filter","input_dataset_id","get_or_create_dict_item","active_filters","filter_tuple","tool_filters","url_params","cond","Galaxy","modal","body","tool_filter_str","buttons","Close","join","input","target_dataset_id","slice","response","error","title","dataset_id"],"mappings":"6IACIA,6JAAWA,OAKXC,EAAS,SAASC,GAClBC,KAAKC,QAAU,KACfD,KAAKE,KAAOH,EAASG,KAErBF,KAAKG,MAAQJ,EAASI,MACtBH,KAAKI,QAAUL,EAASK,QAExBJ,KAAKK,cAAgBN,EAASM,eAGlCR,EAAOC,EAAOQ,WAIVC,QAAS,WACL,OACIL,KAAMF,KAAKE,KACXC,MAAOH,KAAKG,MACZC,QAASJ,KAAKI,QACdC,cAAeL,KAAKK,kBAjB5B,IAAAG,EAAYT,SAAAA,EAAZU,EAAAC,GAAYX,OACZY,EAAA,QACAC,KAAKT,OAAQJ,uBACba,KAAKR,QAAUL,GACfc,SAAA,eACAA,SAAKR,GAPTS,UAkCSC,MAAML,IApBXH,EAAS,SAAAR,GAIDK,EAAAA,KAAAA,KAAAA,GAHGJ,KAAAgB,IAAP,QAAAjB,EAAAA,EAAAiB,KAAAC,OAAAC,UAMHlB,KAAAmB,KAAA,SAAApB,EAAAA,EAAAoB,KAAAF,OAAAC,UA2BDlB,KAAKoB,IAAM,QAASrB,EAAWA,EAASqB,IAAMH,OAAOC,UAxBzDlB,KAAAqB,IAAA,QAAAtB,EAAAA,EAAAsB,KAAAJ,OAAAC,UA2BIlB,KAAKsB,UAAY,KAxBrBtB,KAAIQ,OAAAA,KAAqBR,KAAAuB,aACrB,KAaA,IAmF4BC,EAAAA,KAEHC,EAAAC,WAAAf,EAAA,UAAAE,SAAA,yBAGL,IAAAc,EAAAhB,EAAA,UACAiB,SAAAA,aACAC,SAAAA,EAAAA,YAoBhBC,GAtEInB,EAAA,WAqDHE,SAxED,eADJkB,KAAAN,EAAAvB,KAoBQ,MAoEH8B,SAASL,GAEIhB,EAAE,WAAWoB,KAAQ/B,KAAKgB,IAA1B,IAAiChB,KAAKmB,OAEpDc,EAAwBtB,EAAE,WAZ9BE,SAAA,gBACAmB,SAAIL,GAcCO,OAAO,KAVZA,OAAIC,GAYCD,OAAO,KAEZT,EAAOK,YAAcA,EAArBL,IAAAA,EAAOK,EAAAA,UAIFjB,SAAS,UAFdmB,SAAAP,EAAAC,YACAD,EAAAW,gBAAmBzB,EAAA,UAGnBc,KAAAA,KAAOW,EAAPlC,KAHmB,mBAMnBuB,SAAOW,GACHC,EAAAA,gBAD0BT,QAE1BR,OAAAA,EACAC,IAAAA,KAAKD,IACLkB,IAAAA,KAAMjB,IACNkB,KAAAA,KAAAA,gBAAmBvC,KAAXoB,IALkBpB,KAAAqB,KAM1BmB,QAAAA,KAAOxB,IAAAhB,KAAAmB,MACHM,MAAAA,SAAOe,EAAMC,GAChBhB,EARyBe,MAAAC,EAAAC,IAUtBjB,OAAAA,SAAOW,EAAAA,GACVX,EAAAW,gBAAAR,OAAA,SAAA,SAAAe,KAAAlB,EAAAW,gBAAAK,EAAAC,MAGLjB,EAAAA,OAAOF,EAAPa,gBAAAX,EAAOF,aAAeO,EA9ItB,SAAAR,EAAAsB,EAAAhB,GACAN,EAAAP,MAAA,WACAjB,IAAO6C,EAAW5C,EAAAA,OAClBsB,EAAAwB,WAAAjB,EAAAA,OAAA,SAAA,QAEKT,EAAOE,GAAUtB,EAAV,EAAqBA,GAASoB,IAAOF,EAAOC,WAAxD4B,OAAA,EAEAC,GAAoBhD,EACpB8B,EAAoB9B,EAAAA,MAATiD,QAAoBjD,eAG/B8B,EAAchB,SAAd,SAGAe,EAAAA,OAAA,SAAA,YACAqB,EAAA,EAAAA,EAAA,EACAF,GAAA,GAEAH,EAAAb,KAAA,IAEImB,EAAAA,wBACA5B,KAAUP,OAAMkC,GACZrC,KAAIuC,YAAYP,GAChBhC,KAAIS,QAAMwB,GAqBLb,SAASY,GAnBdQ,QAqBKC,SAnBLtC,MAAIgC,SAAAA,GAsBIO,EAAEC,oBAlBV1B,KAAAA,WAqBQlB,EAAEX,MAAMwD,SAnBhBZ,EAAAb,KAAAoB,GACIvB,EAAOA,YAAP,WAEAmB,MAAAA,SAAAA,GACH,GAAA,KAAAO,EAAAG,QAED9C,EAAAX,MAAA0D,QAAA,aACE,GACG9C,KADH0C,EAAAG,QACQ,CAYFb,IAAKb,EAALH,EAAAA,OAAA,SAAA,OAGG+B,EAAY/B,EAAAA,OAAA,SAAA,OAEXgC,EAAA,SAAAC,GAAA,OAAAC,MAAAD,IAAAA,EAAAF,GAAAE,EAAAE,GAEGC,EAAIrD,EAAAX,MAAJiE,MACH,GAAAlB,GAQA,GAAIa,EAAUI,EAAVJ,MAAU,KAAAI,GAAeH,WAAUA,EAAQF,IAAAA,WAAcE,EAAQE,KAArEH,EAAAI,EAAA,KAAAJ,EAAAI,EAAA,IAEIA,OAYIxC,MAAAA,yCAA+CuC,EAA/C,IAA6DJ,EAA7D,KAZJK,EAAYrD,WARhB,GADAqD,EAAAnB,WAAAmB,GACAJ,EAAAI,GAEID,OADJvC,MAAAA,yCAAAuC,EAAA,IAAAJ,EAAA,KACII,EAAanC,MAWTA,EAAAA,OAAAmB,EAAA,SAAA,QAAAiB,GACHnC,EAAAqC,YAAA,cAoEzBhB,CAAmBjB,EAAuBH,EAAaL,EAAOW,iBAM9D,IAAA+B,EAAAxD,EAAyBH,UACrBK,SAAIY,oBACAO,SAAAP,EAAAC,YACAD,KAAAA,kBAAOxB,EAAuBwB,mCAA9B,oBAAA,WACAA,EAAAxB,QAAAmE,eAAA3C,GAKAA,EAAAA,QAAO4C,aAAkBxD,EAEzBY,EAAAxB,QAAAyB,WACAD,KAAAA,sBACAA,YAAO4C,UACVC,OACD7C,EAAOxB,kBAAcsE,SAAa,UAAAC,SAAA/C,EAAlCxB,QAAAmE,aAAA,KAKCpC,EApBoBqC,kBAoBXF,YApBd,WAuBI1C,EAAAxB,QAAWA,MAAAA,cACPwE,OAAA,EACAhD,aAAOxB,MAMPwB,SAAAA,GACH6C,OACGtE,KAAA0E,YAAAlE,EAAA,6BAAA,mBAAA,WACAiB,EAAAA,QAAOxB,gBAAPwB,GAEHA,EAAAxB,QAAA0E,cAAAlD,EAEGgD,EAAAA,QAD8B/C,WAE9BkD,KAAAA,qBAFJV,YAAA,UAKClC,OAELP,EAAOC,YAAPb,SACI,UAAM2D,SAIN/C,EAAAxB,QAAM0E,cAAA,KACFlD,EAAIA,YAAe2C,YAAf,WAEH3C,EAAAxB,QAAA4E,MAAAN,cACDE,OAAIhD,EACAA,aAAOiD,MAZd1C,SAASmC,GAiBdG,OACA3D,EAAEe,WAAAoD,MArNN,WAuNOC,EAAAA,kBAAwBP,OAC3B/C,EAAAiD,YAAAF,QAdI,WAiBJjE,EAASN,QAAAmE,eAAW3C,GACZ1B,EAAAA,kBAAkBO,OAElB0E,EAAM/E,QADc0E,gBAAAlD,GAEpBL,EAAKsD,YAFeJ,SAQ5B3D,EAAA,+BAAAqB,SAAAP,EAAAC,aAdJ7B,EAAOkF,EAAazE,WAoBRH,QAAAA,WACAC,IAAAA,EAAAA,EAAcA,UAHMG,QAAAoC,KAAA3C,MAIpBK,OAAAA,EAAAA,GAJoB2E,KAAxB,SAlBuB5D,IAAApB,KAAAoB,IAyB3BC,IAAArB,KAAAqB,IAfQL,IAAKhB,KAAKgB,IACVG,KAAMnB,KAAKmB,QAsBnB8D,KAAA,WAfI,OAAO,IAAIF,GACP7E,KAAMF,KAAKE,KAiBnBsC,MAAOxC,KAAAG,MACHC,QAAImC,KAASG,QAfTrC,cAAeL,KAAKK,iBAO5B6E,gBAAiB,SAAS9D,EAAKC,GAkB3B,OADAA,EAAAD,GACW,EAAX,IAAA,GAKYwD,MAAAA,SAAAA,EAAAA,GAF4B,IAAArC,EAAhCG,EAAAH,OAMXvC,KAxD0B8B,YAAAC,KAAAQ,EAAA,GAwD1B,IAxD0BA,EAAA,IA2CvBvC,KAAKgB,IAAMuB,EAAO,GAiBtB4C,KAAAA,KAAY5C,EAAA,GAGP,IAAA6C,EAAApF,KACDqF,WAAO,WAhEgB9C,EAAA,KAAA6C,EAAApE,KAAAuB,EAAA,KAAA6C,EAAAjE,MAkE3BiE,EAAAnF,QAAA4E,MAAAN,cAfgBE,OAAO,EACPG,aAAa,KApDF,KA4E3BU,WAAM,SAAAC,GACF,OAAAA,EAAKzC,OAAKqC,KAAWI,OAQrBC,UAAA,SAAAvB,GACA,OAAAH,MAAI2B,IAAYF,GAAQvF,KAAKG,KAA7B8D,GAAAjE,KAAAmB,MAMYuE,KAAAA,SAAAA,GACA,IAAA1F,KAAAmF,WAAAI,GAEP,OAAA,EAIJ,IAbGE,EAAYF,EAAQvF,KAAKG,OAC7B,GAAIsF,aAAqBE,MAAO,CAkBhC,IAAIC,IADRC,GAAc,EACND,EAAAA,EAAUE,EAAdL,EAAA3C,OAAAgD,IACI,IAAC9F,KAAKmF,UAAWI,EAAUO,IAAA,CAE9BJ,GAAA,EAfW,MAmBZ,OAAAA,EAEA,OAAA1F,KAAAwF,UAAAD,EAAAvF,KAAAG,SAMA0F,aAAA,SAAAN,GACA,IAAAK,GAASE,EACL,IAAA9F,KAAAmF,WAAY5C,GACZ,OAAAqD,EAQH,IAAArD,EAAAgD,EAAAvF,KAAAG,OACDoC,aAAAoD,QApIuBpD,GAAAA,IAyI3BwD,IAAAA,IAAAA,EAAAA,EAAeD,EAAAvD,EAAAO,OAAAgD,IAAW,CACtB,IAAAE,EAAAzD,EAAAuD,GACAE,EAAAhG,KAAAoB,MACApB,KAAAoB,IAAA6E,KAAAC,MAAAF,GACIJ,GAAA,GAAJI,EAEOhG,KAAAqB,MACHrB,KAAK0B,IAAAA,KAAW4C,KAAhB0B,GACHJ,GAAA,GAGD,OAAAA,GAKIG,cAAA,WAIA/F,KAAAoB,IAAKQ,KAAOA,IACZ5B,KAAA0B,WAAA8C,OAEAxE,KAAA0B,WAAA4C,OAhKZ,IAAAP,EAAA/D,KAAA4B,OAAAA,OAAA,SAAA,OAoJY+B,EAAa3D,KAAK4B,OAAOA,OAAO,SAAU,QAiBtD5B,KAAAoB,IAAA2C,GAAA/D,KAAAqB,IAAAsC,KAdY3D,KAAK4B,OAAOA,OAAO,SAAU,MAAO5B,KAAKoB,KAiBjD+E,KAAAA,OAAAA,OAAiB,SAAjBA,MAAiBnG,KAAS6E,KAC1B7E,KAAK6E,OAAQA,OAAb,SAAA,OAAA7E,KAAAkF,gBAAAlF,KAAAoB,IAAApB,KAAAqB,MAZQrB,KAAK4B,OAAOA,OAAO,SAAU,UAAW5B,KAAKoB,IAAKpB,KAAKqB,UA8BvDiC,IAAAA,EAAEC,SAAFsB,EAAA9E,GAqCC,GApCJC,KAHL6E,MAIWA,EACHvB,KAAAA,aAAEC,KACLvD,KANL2E,cAOU,KACFrB,KAAAA,WAUJtD,KAAA0B,WAAAf,EAAA,UACAE,SAAIuF,WArBH9B,OAELtE,KAAK0B,WAuBD2E,KAAA,OAAIC,SAAAA,GACJhD,EAAAC,oBAEIxC,MAAA,SAAAuC,GACI7B,EAAAA,oBAEA4E,KAAA,WAAI5E,SAAAA,GACA6B,EAAAC,oBAEH8C,KAAA,UAAA,SAAA/C,GACDA,EAAAC,oBAMHxD,GAAA,YAAAA,EAAA,CAQT,IAAA,IAvBQ0B,EALA2E,GAAoB,iBAAkBrG,EAAWA,EAASqE,aAAe,MAwBzEmC,GAAgB/B,kBAAhBzE,EAAAA,EAAA4E,cAAA,MAEP2B,EAAAvG,EAAAyG,QAEDV,EAAA,EAAAA,EAAAQ,EAAAxD,OAAAgD,IAC+B,WAA3BQ,EAAaxD,GAAbkC,MACIyB,EAAAA,IAAAA,EAAoBH,EACVR,IAEVY,KAAAA,WAAAA,GAGAC,EAAAA,OAAiBP,IACrBM,KAAAA,aAA4BjF,EACxBkF,EAAAA,kBAAA9F,SAAA,UAAA2D,QAEP/C,EAAAvB,OAAAqG,IA5ELvG,KAAA2E,cAAAlD,EAoDoBA,EAAOiD,YAAY7D,SAAS,UAAU2D,SA6BhDoC,QAAAC,IAAA,8BAAW3G,KAAA8E,MAIb,YAAKtD,GAAL3B,EAAA+G,SANyB9G,KAAA0B,WAAA8C,OAYzB,GAAY9C,IAAZ1B,KAAAwG,QAAO1D,OAAgBiE,CAC1B,IAb4BN,EAAA9F,EAAA,UAc7BE,SAAA,aAzBSmB,SAAShC,KAAK0B,YA8BnBiF,EAAIK,KA7BwBrG,EAAE,0BA2BlCJ,KAAS,QAAA,2BACLyB,SAAIjC,GAEJgB,MAAA,WAzBI4F,EAAeM,qBA+BlBpH,EAAAsG,EAAA7F,WAxBLkE,KAAM,WA2BFxE,KAAA0B,WAAA8C,QAEAzE,KAAAA,WAzBAC,KAAK0B,WAAW4C,QA4BhBvE,OAAAA,WAzBAC,KAAK0B,WAAWwF,UA4BnBJ,QArC4B,WAsC7B,OAAA9G,KAAA0B,WAAAqF,GAAA,aAKIxG,QAAA,WApBA,IAAK,IAuBLkB,EAFIwD,KACH+B,KAtBQlB,EAAI,EAAGA,EAAI9F,KAAKwG,QAAQ1D,OAAQgD,IACrCrE,EAASzB,KAAKwG,QAAQV,GA2B9BqB,EAAYC,KAAA3F,EAAAlB,WAWX,OATGR,EAAK2B,QAALsF,EAGJjH,EAAAqE,aAAApE,KAAAoE,aAAApE,KAAAoE,aAAAlE,KAAA,KAzBIH,EAAS4E,cAAgB3E,KAAK2E,cAAgB3E,KAAK2E,cAAczE,KAAO,KA6BxEH,EAAKyG,QAAUxG,KAAf0B,WAAAqF,GAAA,YA5DyBhH,GAmE7BsH,KAAAA,SAAAA,GAEQ,IAAA,IADJpC,EAAK,IAAIa,EAAgBU,GACrBV,EAAIrE,EAAAA,EAAAA,KAAS+E,QAAA1D,OAAbgD,IACArE,EAAAA,WAAOsE,KAAAA,QAAPD,GAAAb,QAEP,OAxE4BA,GA6EzBkC,WAAA,SAAa1F,GACTA,EAAAxB,QAAIwB,KACJA,KAAAA,WAAOG,OAAOA,EAAOF,YACxB1B,KAAAwG,QAAAY,KAAA3F,IAKD6F,WAAA,WACHtH,KAtF4BwG,WAuF7BS,KAAAA,WAAgBM,WAAA/D,UAMP6D,aAAA,WACD,IAAA,IAAAvB,EAAA,EAAO0B,EAAKC,KAAZjB,QAAA1D,OAAAgD,IALJ9F,KAAAwG,QAAAV,GAnBWC,iBAMf2B,cAAe,WA2BX,IAAA,IAAIjG,EAAAA,EAAJqE,EAAA9F,KAAAwG,QAAA1D,OAAAgD,IAAA,CACA,IAAI6B,EAAAA,KAAAA,QAAJ7B,GACArE,EAAKG,OAALA,OAAoB,SAAK4E,UAAgBV,EAAK1E,IAAAK,EAAAJ,MAE1CrB,KAAAoE,aAAWhE,KACPJ,KAAA2E,cAAA,KAGIgD,KAAAA,WAAAA,KAAAA,gBAAAA,QAEJV,eAAA,WAkBR,IAAA,IA5BIxF,EA2BJkG,EAfYA,EAAAA,SAAAA,EAAAA,EAAuBA,GAKnC,OAHKF,KAAAD,IACJA,EAAAC,GAAAG,GAEDJ,EAAAC,IAOII,KAIJ/B,EAAA,EAAAA,EAAA9F,KAAAwG,QAAA1D,OAAAgD,KACArE,EAACzB,KAAS8H,QAAWC,IACb3H,UAxBIqB,EAAOL,MAAQK,EAAOT,OA2B1BZ,EAAJ4H,EAAAC,EAAAxG,EAAArB,aACmB8H,EAAnBpF,QAAArB,EAAApB,cAAI8H,OAAJ1G,EAAAT,KAxBQS,EAAOJ,MAAQI,EAAON,QA2B1BiH,EAAaJ,EAAAC,EAAAxG,EAAArB,aAAAuH,EAAA7E,QAAArB,EAAApB,cACbgI,OADa5G,EAAAN,OAWb,IAAA0G,KACI,IAAA,IAAAzH,KAAA6H,EACAK,EAAOC,EAAWzF,SAAA1C,EAAA6H,EAAA7H,KAKrB,SAAA0H,EAAMC,EAAIvB,GACP,IACA8B,EAAAA,EAAOC,GAEHC,EAAAA,EAAM,GAIVJ,GACAN,KAPkBW,IAGdC,EAAWC,GAHfC,KAAA,WAAkB,IAQrBC,MAAAd,EACJe,kBAnBDf,EAoBD3H,QAAAA,GAtBCoG,EA0BGA,EAAAuC,MAAA,GAEXhE,EAAAA,QAAcA,aAAAA,EAAAA,SAAAA,GAzBEiE,EAASC,MAETX,OAAOC,MAAM/D,MACT0E,MAAO,iBACPV,KAAAA,sBAA4BpI,EAC5BsI,SAAWC,MAAOL,OAAOC,MAAMjE,UAET,IAAnBkC,EAAQ1D,OAEfwF,OAAOC,MAAM/D,MACT0E,MAAO,oBACPV,KAAM,mFACNE,SAAWC,MAAOL,OAAOC,MAAMjE,UAInCwD,EAAWkB,EAASG,WAAY3C,KATnC,CAYNxG,KAAK6E,MAAMsE,WAAYtB,iBAK9B1B,eAAgBA,EAChBpB,aAAcA","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = (title, css_class, on_click_fn) =>\n    $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = (container, span, slider) => {\n        container.click(function() {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size = max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(e => {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\");\n\n                        var slider_max = slider.slider(\"option\", \"max\");\n\n                        var invalid = a_val => isNaN(a_val) || a_val > slider_max || a_val < slider_min;\n\n                        var new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(`Parameter value must be in the range [${slider_min}-${slider_max}]`);\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [parseFloat(new_value[0]), parseFloat(new_value[1])];\n                            if (invalid(new_value[0]) || invalid(new_value[1])) {\n                                alert(`Parameter value must be in the range [${slider_min}-${slider_max}]`);\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(multi_value ? \"values\" : \"value\", new_value);\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n        .addClass(\"elt-label\")\n        .appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\")\n        .addClass(\"slider-name\")\n        .text(`${filter.name}  `)\n        .appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(`${this.low}-${this.high}`);\n\n    var values_span_container = $(\"<span/>\")\n        .addClass(\"slider-value\")\n        .appendTo(filter_label)\n        .append(\"[\")\n        .append(values_span)\n        .append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", `${filter.name}-filter-control`)\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element.slider(\"option\", \"slide\").call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(values_span_container, values_span, filter.control_element);\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\"Use filter for data transparency\", \"layer-transparent\", () => {\n        if (filter.manager.alpha_filter !== filter) {\n            // Setting this filter as the alpha filter.\n            filter.manager.alpha_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div\n                .find(\".layer-transparent\")\n                .removeClass(\"active\")\n                .hide();\n            filter.transparency_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.alpha_filter = null;\n            filter.transparency_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    })\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\"Use filter for data height\", \"arrow-resize-090\", () => {\n        if (filter.manager.height_filter !== filter) {\n            // Setting this filter as the height filter.\n            filter.manager.height_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div\n                .find(\".arrow-resize-090\")\n                .removeClass(\"active\")\n                .hide();\n            filter.height_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.height_filter = null;\n            filter.height_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    })\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        () => {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(`${values[0]}-${values[1]}`);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(() => {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /** \n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\"option\", \"step\", this.get_slider_step(this.min, this.max));\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", e => {\n            e.stopPropagation();\n        })\n        .click(e => {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", e => {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", e => {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name = \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name = \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(() => {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter ? this.alpha_filter.name : null;\n        obj_dict.height_filter = this.height_filter ? this.height_filter.name : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = (dict, key, new_item) => {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = `${filter.tool_exp_name} >= ${filter.low}`;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = `${filter.tool_exp_name} <= ${filter.high}`;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [tool_id, active_filters[tool_id]];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = `(${tool_filters.join(\") and (\")})`;\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, response => {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: `Error running tool ${tool_id}`,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body: \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n"]}