{"version":3,"sources":["layout/masthead.js"],"names":["View","Backbone","extend","initialize","options","self","this","setElement","_template","$navbarBrandLink","$","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","_menu2","default","Collection","on","model","append","Tab","render","$el","empty","each","fetch","Galaxy","frame","_scratchbook2","quotaMeter","_userQuotameter2","UserQuotaMeter","callback","window","e","$download_link","length","attr","user","preventDefault","text","q","get","html","brand","logo_url","logo_src"],"mappings":"oRAKIA,EAAOC,SAASD,KAAKE,QACrBC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKF,QAAUA,EACfE,KAAKC,WAAWD,KAAKE,aACrBF,KAAKG,iBAAmBH,KAAKI,EAAE,sBAC/BJ,KAAKK,kBAAoBL,KAAKI,EAAE,uBAChCJ,KAAKM,kBAAoBN,KAAKI,EAAE,uBAChCJ,KAAKO,YAAcP,KAAKI,EAAE,gBAC1BJ,KAAKQ,YAAcR,KAAKI,EAAE,0BAG1BJ,KAAKS,WAAa,IAAIC,EAAAC,QAAKC,WAC3BZ,KAAKS,WACAI,GAAG,MAAO,SAAAC,GACPf,EAAKQ,YAAYQ,OAAO,IAAIL,EAAAC,QAAKK,KAAMF,MAAOA,IAASG,SAASC,OAf5ExB,GAAOC,QAASD,WAChBG,EAAYU,YAAAY,UAERN,GAAA,WAAef,SAAAA,GACfC,EAAKE,WAAWmB,KAAKlB,SAAAA,GAChBC,EAAAA,OAGLkB,MAAKd,KAAAA,SAGLe,OAAAC,MAAAvB,KAAAuB,MAAA,IAAAC,EAAAb,SACAF,WAAKA,KAALA,aAOKa,OACAT,WAPLb,KAOoByB,WAAA,IAAYC,EAAAf,QAAAgB,gBACxB5B,MAAAA,OAAKU,KACDmB,GAAAA,KAAAA,cAKZxB,EAAAyB,QACAP,GAAAA,QAAA,SAAAQ,GACIrB,IAAAA,EAAiBA,EAAAA,EAAAA,QAAAA,QAAAA,eADrB,GAAAsB,EAAAC,SAgBoD,IAApC5B,EAAE,uBAAuB4B,QAZzC5B,EAAA,QAAAW,OACAX,EAAA,aACoB6B,KAAKR,KAAAA,YACPS,QAgBN9B,EAAE,uBAAuB6B,KAAK,MAAOF,EAAeE,KAAK,SAZrEH,EAAAK,oBAIQtB,GAAA,eAAIkB,WACA,IAAAK,EAAM,GAST,GAROhC,EAAAA,WAAAgB,KAAUL,SAAAA,GAKb,IAAAsB,EAAAvB,EAAAwB,IAAA,mBAAAxB,EAAAwB,IAAA,iBAAAxB,GACDV,IAAEgC,GAAAC,EAAA,OAEL,KAAAD,EAED,OAAAA,KAKCnB,OAAA,WAKZ,OAJWjB,KAAAM,kBAAAiC,KAAA,WAAiBvC,KAAAF,QAAA0C,OAAA,KAAAxC,KAAAF,QAAA0C,OAAA,KACbxC,KAAAG,iBAAOiC,KAAP,OAAApC,KAAAF,QAAA2C,UACHzC,KAAAK,kBAAA4B,KAAA,MAAAjC,KAAAF,QAAA4C,UACJ1C,KAxBLyB,WAAAR,SAxCwBjB,MAqExBE,UAAA,WACA,MACA,uVAyBJR,KAAMA","file":"../../scripts/layout/masthead.js","sourcesContent":["import Utils from \"utils/utils\";\nimport Menu from \"layout/menu\";\nimport Scratchbook from \"layout/scratchbook\";\nimport QuotaMeter from \"mvc/user/user-quotameter\";\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-tabs\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection\n            .on(\"add\", model => {\n                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n            })\n            .on(\"reset\", () => {\n                self.$navbarTabs.empty();\n            })\n            .on(\"dispatch\", callback => {\n                self.collection.each(m => {\n                    callback(m);\n                });\n            })\n            .fetch(this.options);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window)\n            .on(\"click\", e => {\n                var $download_link = $(e.target).closest(\"a[download]\");\n                if ($download_link.length == 1) {\n                    if ($(\"iframe[id=download]\").length === 0) {\n                        $(\"body\").append(\n                            $(\"<iframe/>\")\n                                .attr(\"id\", \"download\")\n                                .hide()\n                        );\n                    }\n                    $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                    e.preventDefault();\n                }\n            })\n            .on(\"beforeunload\", () => {\n                var text = \"\";\n                self.collection.each(model => {\n                    var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                    q && (text += `${q} `);\n                });\n                if (text !== \"\") {\n                    return text;\n                }\n            });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html(`Galaxy ${(this.options.brand && `/ ${this.options.brand}`) || \"\"}`);\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return (\n            '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n            '<div class=\"navbar-header\">' +\n            '<div class=\"navbar-tabs\"/>' +\n            \"</div>\" +\n            '<div class=\"navbar-brand\">' +\n            '<a class=\"navbar-brand-link\">' +\n            '<img class=\"navbar-brand-image\"/>' +\n            '<span class=\"navbar-brand-title\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            '<div class=\"quota-meter-container\"/>' +\n            '<div class=\"navbar-icons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}