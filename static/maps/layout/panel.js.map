{"version":3,"sources":["layout/panel.js"],"names":["_","Backbone","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","View","extend","initialize","options","this","view","saved_size","hiddenByTool","$center","$el","siblings","$toggleButton","$","render","self","panel","components","model","attributes","html","_templatePanel","id","each","buttons","button","append","addClass","cls","escape","title","_templateBody","_templateFooter","join","_templateHeader","data","events","mousedown .unified-panel-footer > .drag","click .unified-panel-footer > .panel-collapse","_mousedownDragHandler","ev","move","e","delta","pageX","prevX","oldWidth","width","draggingLeft","newWidth","Math","min","max","resize","_jquery2","default","on","one","hide","css","newSize","show","hidden","animation","whichSide","animate","removeClass","toggle","handle_minwidth_hint","hint","force_panel","op","LeftPanel","RightPanel","CenterPanel","setElement","template","$frame","$panel","_iframeChangeHandler","iframe","contentWindow","location","host","empty","Galaxy","fullpath","pathname","search","hash","onbeforeunload","attr","scrollTop","toString"],"mappings":"iXACYA,OACAC,OAERC,EAAkB,IAClBC,EAAkB,IAGlBC,EAAYH,EAASI,KAAKC,QAC1BC,WAAY,SAASC,GACjBC,KAAKC,KAAOF,EAAQE,KARhBT,KAAAA,QASU,EACdQ,KAAKE,WAAa,KAClBF,KAAKG,cAAe,GAGxBC,QAAS,WACL,OAAOJ,KAAKK,IAAIC,SAAS,YAG7BC,cAAe,WACX,OAAOP,KAAKQ,EAAE,4CAGlBC,OAAQ,WACJ,IAAIC,EAAOV,KACPW,EAAQX,KAAKC,KACbW,EAAaZ,KAAKC,KAAKY,MAAMC,eACjCd,KAAKK,IAAIU,KAAKf,KAAKgB,eAAehB,KAAKiB,KACvC1B,EAAE2B,KAAKN,EAAWO,QAAS,SAAAC,GACvBV,EAAKF,EAAE,yBAAyBa,OAAOD,EAAOf,OAElDL,KAAKK,IAAIiB,SAASV,EAAWW,KAC7BvB,KAAKQ,EAAE,sBAAsBO,KAAKxB,EAAEiC,OAAOZ,EAAWa,QACtDzB,KAAKQ,EAAE,uBAAuBa,OAAOV,EAAMN,KAC3CM,EAAMF,UA5BdO,eAAA,WACIrB,OAAAA,KAAYH,kBAAAQ,KAAqB0B,gBAAA1B,KAAA2B,mBAAAC,KAAA,KAI7BC,gBAAK3B,SAAa4B,GAClB,OAL6B,uDAuCzB,2CA/BR1B,2DACI,mCAT6B,SA2CzB,UA/BRG,KAAAA,KAIAE,cAAQ,SAAAqB,GACJ,MAAA,qCAIAvC,gBAAOqB,SAAWO,GACdT,OACH,qCACD,8BACAnB,EAAAiC,OAAOxB,KAAAiB,IACP,MACAN,sBA3B6B,UA6D3BiB,KAAK,KA7BPG,QACHC,0CAjCgC,wBAkE7BC,gDAAiD,UA7BjDC,sBACI,SAAAC,GAWJ,SAAAC,EAAOC,GAjDsB,IAAAC,EAAAD,EAAAE,MAAAC,EA4EzBA,EAAQH,EAAEE,MAxBlB,IAAAE,EAAA/B,EAAAL,IAAAqC,QACAf,EAAiBgB,EAAAF,EAASX,EAAMW,EAAAH,EArDCM,EAAAC,KAAAC,IAAApD,EAAAmD,KAAAE,IAAAtD,EAAAmD,IAiFzBlC,EAAKsC,OAAOJ,GApCnB,IA7CgClC,EAAAV,KAuEzB2C,EAA2B,SAAZ3C,KAAKiB,GAxB5BuB,EAAAL,EAAAI,OAuCI,EAAAU,EAAAC,SAAE,cAjBNhB,OACIiB,GAAIzC,YAAJ0B,GACAgB,IAAIT,UAAAA,SAAoB1B,IACpBuB,EAAAA,EAAAA,SAAAA,MAmBSa,OAjBJjB,IAAT,YAAiBA,MAMbQ,OAAAA,SAAAA,GAqBJ,OApBIlC,KAAAA,IAAAA,IAAKsC,QAAOJ,GACf5C,KAAAI,UAAAkD,IAAAtD,KAAAiB,GAAAsC,GAmBMvD,MAfPwD,KAAA,WAIQ,GAAAxD,KAAAyD,OAAA,CAkBR,IAAI/C,EAAOV,KAZf0D,KACAC,EAAA3D,KAAAiB,GAUK,OATL+B,EAAQW,GAAA,EACJjD,EAAAL,IACAiD,IAAKlD,GAAUkD,KAAIpD,YACnBsD,OArG6BI,QAAAF,EAAA,OAAA,WAoHrBhD,EAAKsC,OAAOtC,EAAKR,cAXzBQ,EAAA+C,QAAUA,EACN/C,EAAAH,gBAAAsD,YAAA,UACH7D,OAGDqD,KAAA,WACAK,IAAAA,KAAAA,OAAAA,CAMK,IAAAA,KACLhD,EAAAV,KAAciB,GAOV,OANJP,KAAAA,WAAKH,KAALF,IAAqBwD,QACrBH,EAAAC,IAAA3D,KAAAE,WACHF,KAzHgCK,IAAAuD,QAAAF,EAAA,QAoI7B1D,KAAKI,UAAUkD,IAAIK,EAAW,GATlCN,KAAAA,QAAM,EACFrD,KAAAO,gBAAiBe,SAAA,UACbtB,OAGJ8D,OAAA,SAAIH,GAGJ,OAFA3D,KAAAyD,OAAKvD,KAALsD,OAAuBnD,KAAIqC,OAC3BgB,KAAAA,cAAUC,EACV3D,MAgBJ+D,qBAAsB,SAASC,GAGvB,OAZAhE,KAAAI,UAAAsC,SAAa1C,KAAAyD,OAAAzD,KAAAE,WAAA,GACZuD,EACAtD,KAAAA,SACLH,KAAO8D,SA7IsB9D,KAAAG,cAAA,GAiJjCH,KAAAG,eACAH,KAAA8D,SACAC,KAAAA,cAAsB,GAGdrD,MAIHuD,YALD,SAKOC,GACH,MAAA,QAAAA,EACIlE,KAAAwD,OAEH,QAAAU,EACJlE,KAAAqD,OA/J4B3C,MAoKjCuD,SAAAA,WACI,MAAA,aAAAjE,KAAkBiB,GAAlB,OAMAkD,EAAAxE,EAAAE,QACHoB,GAAA,SAGGmD,EAAAzE,EAAAE,QACHoB,GAAA,UAILoD,EAAA7E,EAAAI,KAAAC,QACAC,WAAIqE,SAAYxE,GACZsB,KAAIqD,YAAA,EAAArB,EAAAC,SAAAlD,KAAAuE,aADRvE,KAAAwE,OAAAxE,KAAAQ,EAAA,iBAaQR,KAAKyE,OAASzE,KAAKQ,EAAE,iBATzB4D,KAAAA,OAAAA,GAAazE,OAAUE,EAAAA,KAAOG,KAAA0E,qBAAA1E,QAIlC0E,qBAAA,SAAAvC,GACIkC,IAAAA,EAAAA,EAAc7E,cACdM,EAAY6E,EAAAC,eAAAD,EAAkBC,cAAAC,SAC1BA,GAAKP,EAAWQ,QAChB,EAAA7B,EAAAC,SAAAyB,GAAKH,OACLxE,KAAKyE,OAALM,QAAc1B,OACd2B,OAAKR,QAAU,qBALgBS,SAAAJ,EAAAK,SAAAL,EAAAM,OAAAN,EAAAO,KAiBvBF,SAAUL,EAASK,SAT/BC,OAAAN,EAAAM,OACAT,KAAAA,EAAsBU,SAMdJ,QAAAA,SAAAA,GACIC,IAAAA,EAAAA,KAAUJ,OAASK,GAAAA,kBACnBA,EAAAA,EAAUL,gBAFsBD,EAAAS,iBAGhCF,IAAAA,QAAQN,KACRO,EAAMP,oBAASO,EAJiBpF,KAApCwE,OAAAc,KAAA,MAAA,eAAAjC,OAMHrD,KAAAyE,OArB8BM,QAiCtBQ,UAAU,GATvBlE,OAAApB,EAAAI,KACSmD,OACLwB,OAAIJ,QAAAA,oBAA+BA,KAI/BL,SAAA,WACA,MAKAS,uJAaRQ,SAAU,WAAVA,MAAAA,4BAMA7F,UAAWA,EAAXA,UAAAA,EACAwE,WAAAA,EACAC,YAAAA","file":"../../scripts/layout/panel.js","sourcesContent":["import $ from \"jquery\";\nimport * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\n\nvar MIN_PANEL_WIDTH = 160;\nvar MAX_PANEL_WIDTH = 800;\n\n/** View for left/right panels used by Page view */\nvar SidePanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.view = options.view;\n        this.hidden = false;\n        this.saved_size = null;\n        this.hiddenByTool = false;\n    },\n\n    $center: function() {\n        return this.$el.siblings(\"#center\");\n    },\n\n    $toggleButton: function() {\n        return this.$(\".unified-panel-footer > .panel-collapse\");\n    },\n\n    render: function() {\n        var self = this;\n        var panel = this.view;\n        var components = this.view.model.attributes || {};\n        this.$el.html(this._templatePanel(this.id));\n        _.each(components.buttons, button => {\n            self.$(\".panel-header-buttons\").append(button.$el);\n        });\n        this.$el.addClass(components.cls);\n        this.$(\".panel-header-text\").html(_.escape(components.title));\n        this.$(\".unified-panel-body\").append(panel.$el);\n        panel.render();\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templatePanel: function() {\n        return [this._templateHeader(), this._templateBody(), this._templateFooter()].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateHeader: function(data) {\n        return [\n            '<div class=\"unified-panel-header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">',\n            '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n            '<div class=\"panel-header-text\"/>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateBody: function(data) {\n        return '<div class=\"unified-panel-body\"/>';\n    },\n\n    /** panel dom template. id is 'right' or 'left' */\n    _templateFooter: function(data) {\n        return [\n            '<div class=\"unified-panel-footer\">',\n            '<div class=\"panel-collapse ',\n            _.escape(this.id),\n            '\"/>',\n            '<div class=\"drag\"/>',\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    events: {\n        \"mousedown .unified-panel-footer > .drag\": \"_mousedownDragHandler\",\n        \"click .unified-panel-footer > .panel-collapse\": \"toggle\"\n    },\n\n    _mousedownDragHandler: function(ev) {\n        var self = this;\n        var draggingLeft = this.id === \"left\";\n        var prevX = ev.pageX;\n\n        function move(e) {\n            var delta = e.pageX - prevX;\n            prevX = e.pageX;\n            var oldWidth = self.$el.width();\n            var newWidth = draggingLeft ? oldWidth + delta : oldWidth - delta;\n            // Limit range\n            newWidth = Math.min(MAX_PANEL_WIDTH, Math.max(MIN_PANEL_WIDTH, newWidth));\n            self.resize(newWidth);\n        }\n\n        // this is a page wide overlay that assists in capturing the move and release of the mouse\n        // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n        $(\"#dd-helper\")\n            .show()\n            .on(\"mousemove\", move)\n            .one(\"mouseup\", function(e) {\n                $(this)\n                    .hide()\n                    .off(\"mousemove\", move);\n            });\n    },\n\n    // TODO: the following three could be simplified I think\n    // if panel is 'right' (this.id), move center right newSize number of pixels\n    resize: function(newSize) {\n        this.$el.css(\"width\", newSize);\n        this.$center().css(this.id, newSize);\n        return this;\n    },\n\n    show: function() {\n        if (!this.hidden) {\n            return;\n        }\n        var self = this;\n        var animation = {};\n        var whichSide = this.id;\n        animation[whichSide] = 0;\n        self.$el\n            .css(whichSide, -this.saved_size)\n            .show()\n            .animate(animation, \"fast\", () => {\n                self.resize(self.saved_size);\n            });\n        self.hidden = false;\n        self.$toggleButton().removeClass(\"hidden\");\n        return this;\n    },\n\n    hide: function() {\n        if (this.hidden) {\n            return;\n        }\n        var animation = {};\n        var whichSide = this.id;\n        this.saved_size = this.$el.width();\n        animation[whichSide] = -this.saved_size;\n        this.$el.animate(animation, \"fast\");\n        this.$center().css(whichSide, 0);\n        this.hidden = true;\n        this.$toggleButton().addClass(\"hidden\");\n        return this;\n    },\n\n    toggle: function(ev) {\n        this.hidden ? this.show() : this.hide();\n        this.hiddenByTool = false;\n        return this;\n    },\n\n    // ..............................................................\n    //TODO: only used in message.mako?\n    /**   */\n    handle_minwidth_hint: function(hint) {\n        var space = this.$center().width() - (this.hidden ? this.saved_size : 0);\n        if (space < hint) {\n            if (!this.hidden) {\n                this.toggle();\n                this.hiddenByTool = true;\n            }\n        } else {\n            if (this.hiddenByTool) {\n                this.toggle();\n                this.hiddenByTool = false;\n            }\n        }\n        return self;\n    },\n\n    /**   */\n    force_panel: function(op) {\n        if (op == \"show\") {\n            return this.show();\n        }\n        if (op == \"hide\") {\n            return this.hide();\n        }\n        return self;\n    },\n\n    toString: function() {\n        return `SidePanel(${this.id})`;\n    }\n});\n\n// ----------------------------------------------------------------------------\n// TODO: side should be defined by page - not here\nvar LeftPanel = SidePanel.extend({\n    id: \"left\"\n});\n\nvar RightPanel = SidePanel.extend({\n    id: \"right\"\n});\n\n/** Center panel with the ability to switch between iframe and view */\nvar CenterPanel = Backbone.View.extend({\n    initialize: function(options) {\n        this.setElement($(this.template()));\n        this.$frame = this.$(\".center-frame\");\n        this.$panel = this.$(\".center-panel\");\n        this.$frame.on(\"load\", _.bind(this._iframeChangeHandler, this));\n    },\n\n    /** Display iframe if its target url changes, hide center panel */\n    _iframeChangeHandler: function(ev) {\n        var iframe = ev.currentTarget;\n        var location = iframe.contentWindow && iframe.contentWindow.location;\n        if (location && location.host) {\n            $(iframe).show();\n            this.$panel.empty().hide();\n            Galaxy.trigger(\"center-frame:load\", {\n                fullpath: location.pathname + location.search + location.hash,\n                pathname: location.pathname,\n                search: location.search,\n                hash: location.hash\n            });\n        }\n    },\n\n    /** Display a view in the center panel, hide iframe */\n    display: function(view) {\n        var contentWindow = this.$frame[0].contentWindow || {};\n        var message = contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n        if (!message || confirm(message)) {\n            contentWindow.onbeforeunload = undefined;\n            this.$frame.attr(\"src\", \"about:blank\").hide();\n            this.$panel\n                .empty()\n                .scrollTop(0)\n                .append(view.$el)\n                .show();\n            Galaxy.trigger(\"center-panel:load\", view);\n        }\n    },\n\n    template: function() {\n        return (\n            '<div class=\"center-container\">' +\n            '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n            '<div class=\"center-panel\" />' +\n            \"</div>\"\n        );\n    },\n\n    toString: function() {\n        return \"CenterPanel\";\n    }\n});\n\nexport default {\n    SidePanel: SidePanel,\n    LeftPanel: LeftPanel,\n    RightPanel: RightPanel,\n    CenterPanel: CenterPanel\n};\n"]}