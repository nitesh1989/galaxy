{"version":3,"sources":["layout/scratchbook.js"],"names":["Backbone","View","extend","initialize","options","self","this","frames","_uiFrames2","default","visible","setElement","$el","buttonActive","collection","add","id","icon","tooltip","_localization2","onclick","active","set","toggle","show_note","note_cls","hide","onbeforeunload","length","show","buttonLoad","note","addDataset","currHistoryPanel","history_id","Galaxy","historyId","history_cache","model","get","each","dataset_ids","push","dataset","offset","current_dataset","name","pos","dataset_list","_loadDatasetOffset","frame","_findDataset","new_dataset_id","_loadDataset","history_details","trigger","dataset_id","config","_","disabled","callback","_data2","Dataset","$","when","fetch","then","is_tabular","find","indexOf","data_type","title","content","createTabularDatasetChunkedView","embedded","height","root","addTrackster","viz_id","viz","Visualization","ui","_trackster2","TracksterUI","type","parent_elt","container","stand_alone","latest_revision","drawables","view","d","hda_ldda","create_visualization","view_config","viewport","bookmarks","window","$galaxy_main","target","location","attr","noscratchbook","parent","url"],"mappings":"+TAMeA,SAASC,KAAKC,QACzBC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXF,EAAUA,MACVE,KAAKC,OAAS,IAAIC,EAAAC,QAAOR,MAAOS,SAAS,IACzCJ,KAAKK,WAAWL,KAAKC,OAAOK,KAC5BN,KAAKO,aAAeT,EAAQU,WAAWC,KACnCC,GAAI,qBACJC,KAAM,QACNC,SAAS,EAAAC,EAAAV,SAAG,8BACZW,QAAS,WACLf,EAAKgB,QAAUhB,EAAKgB,OACpBhB,EAAKQ,aAAaS,KACdC,OAAQlB,EAAKgB,OACbG,UAAWnB,EAAKgB,OAChBI,SAAUpB,EAAKgB,QAAU,iBAE5BhB,EAjBFL,QAASC,EAAKC,OAAOwB,QAE5BC,eAAA,WACAvB,GAAAA,EAAUA,OAAAA,SAAV,EACKG,MAAAA,cAAaF,EAAAE,OAAJqB,SAATrB,mCAIDU,KAAAA,WAAMb,EAFiCU,WAAAC,KAGvCG,GAAAA,mBACAE,KAAAA,SACIf,SAAAA,EAAAA,EAAAA,SAAAA,yBACAA,WAAAA,EACIkB,SAAAA,EACAC,QAAAA,SAAAA,GACAC,EAAAA,OAAAA,QAAUpB,EAAKgB,OAAUK,OAAArB,EAAAE,OAAAsB,UAGhCvB,KAAAC,OACDoB,GAAAA,aAAAA,WACIrB,KAAAI,SAAA,GAASH,KAAOqB,UAActB,KAAAoB,OAC1BrB,EAAAyB,WAAAR,KACHS,KAAAzB,KAAAsB,SACJlB,QAAAJ,KAAAsB,SAAA,MAGDZ,GAAAA,aAAI,WACJC,EAAAA,WAFqCK,KAGrCJ,OAASZ,KAAAI,QACTc,KAAWlB,KAJ0BI,SAAA,UAAA,mBAOjCL,KAAAA,kBAKA2B,WAAA,SAAKtB,GACLL,IAAAA,EAAAA,KACI0B,EAAM,KACNrB,GAAAA,QAAAA,OAASuB,iBAAgB,CAFT,IAAAC,EAApBC,OAAAF,iBAAAnB,WAAAsB,UAIH9B,KAPL+B,cAAAH,IASQ7B,KAAKyB,OAAAA,iBAAeQ,MAAAC,IAAA,QAChBhB,gBADgBY,OAApBF,iBAAAnB,WAAA0B,KAAA,SAAAF,IATRA,EAAAC,IAAA,YAcKF,EAAAA,IAAL,YAjD4BhC,EAAAgC,cAAAH,GAAAO,YAAAC,KAAAJ,EAAAC,IAAA,SAqDhCP,IAAAA,EAAY,SAAAW,EAAAC,GACR,GAAIvC,EAAO,CACPwC,IAAAA,EAAJxC,EAAAgC,cAAAM,EAAAJ,IAAA,eACIJ,GAAAA,GAAiBF,EAAkBQ,YAAA,CAC/BP,IAAAA,EAAaC,EAAOF,YACnBI,EAAAA,EAAcH,QAAcS,EAAAJ,IAAA,OAC7BO,IAAab,IAAba,GAAab,EAAAA,GAAiBK,GAAxBS,EAAkCH,EADXI,EAAApB,OAE7Ba,OAAAA,EAAaM,EAAAH,MAOpBK,EAAA,SAAAN,EAAAC,EAAAM,GACD,IAAIC,EAAeA,EAAfA,EAAgBR,GAChBS,EACI/C,EAAAgD,aAAIC,EAAuBjB,SAAAA,EAAcM,GACzCE,EAAIS,EACAJ,EAAAZ,MAAIU,IAAAA,KAGAE,EAAAZ,MAAAiB,QAAOP,WAGlB1C,KAAA+C,aAAAG,EAAA,SAAAb,EAAAc,GACJZ,EAXDF,EAYAtC,EAAI4C,IACAS,EAAAxD,QAEIG,OAEUiC,KAAMhB,4BAFhBJ,QAAA,sBAIGE,QAAA,SAAA8B,GACSK,EAAZV,GAAA,EAAAK,IARRS,SAAA,WAWkBH,OAAYL,EAACR,GAAoB,MAOrB1B,KAAA,6BACNC,QAAS,kBACTE,QAAS,SAAS8B,GACdD,EAAmBJ,EAAqBK,EAAxCA,IAEJS,SAAU,WACER,OAAAA,EAAaN,EAArB,OAMJzB,OAHJiC,aAAA,SAXEG,EAAAI,GADV,IAAAvD,EAwBAoD,KAGXd,EA/BD,IAAAkB,EAAApD,QAAAqD,SAAA9C,GAAAwC,IAgCHO,EA3H+BC,KAAArB,EAAAsB,SAAAC,KAAA,WAiIxB,IAAIC,EAAaT,EAAEU,MAJ3Bf,UAAc,YACNhD,SAAAA,GAAAA,OAAJ,IAAAsC,EAAAJ,IAAA,aAAA8B,QAAAC,KAEEN,EAAKrB,EAAAJ,IAAiB2B,QACpBZ,EAAiBI,EAAArB,cACDM,EAAAJ,IACZ,eAAAe,IAAAiB,EAFJjB,EAAAR,KAEI,KAFJyB,GAKAX,EACAjB,EACI4B,GAGA5B,MADJ4B,EAIcA,IAAOA,KACFC,QAFTX,EAAApD,QAAAgE,iCAGanC,MAAA,IAAAuB,EAAApD,QAAKgE,eAAAA,EAAAA,UACVnC,UAAW,EACXoC,OAF0C,SAG1CC,MAIJJ,MADJA,EAEYpC,IAAOyC,OAAfA,KAAQzC,YAAuBqB,EAAvBrB,yBACRqC,QAAS,UAQ3BK,aAAIxE,SAAJyE,GACA,IAAAzE,EAAI0E,KACJhB,EAAA,IAAOgB,EAAAA,QAAPC,eAA+BhE,GAAA8D,IAC3Bf,EAAAC,KAAAe,EAAAd,SAASC,KAAI,WAAb,IAAIe,EAAK,IAAIC,EAAAzE,QAAU0E,YAAYhD,OAAOyC,MAItCL,GACAa,MAAAA,EAAM7C,IAAA,QACNiC,KAAAA,QACIA,QAAA,SAAAa,GAEIC,IAAAA,GACAxC,UAAMiC,EACN/D,KAAAA,EAAI+D,IAHU,SAId/D,GAAA+D,EAAA/D,GAEAuE,MAAAA,EAAAA,IAAAA,SANcA,aAAlB,GAUAC,EAAgBA,EAAAA,IAAAA,mBAAZC,EAAYD,EAAgB/B,OAAOiC,KAAKD,UAIxCE,EAAAA,KAAAA,EAAA,SAAAA,GACIC,EAAAA,SACA5E,SAAMwC,EAAAA,SAFExC,GAAZ2E,EAAAnC,cAYPkC,KAAAT,EAAAY,qBA/BLC,EAiCAN,EAAA/B,OAAAsC,SArCJP,EAAA/B,OAAAiC,KAAAD,UAnK4BD,EAAA/B,OAAAuC,WAoMZ,KAWZC,EAAAA,IAAAA,MAKAlF,IAAA,SAAAX,GACI,GAAI8F,UAAJ9F,EAAA+F,OACIF,OAAAA,KAAAA,EAAOG,UACV,GAAM,QAANhG,EAAM+F,QAAA,WAAA/F,EAAA+F,QAAA,SAAA/F,EAAA+F,OACHD,OAAAA,SAAAA,EAAaG,SAChB,IAAA/F,KAAAe,QAAAjB,EAAAkG,cAAA,CACJ,IAAAJ,EAAaE,EAAAA,OAAPG,OAAkBnG,UAAlBgE,KAAA,gBACJ,eATAhE,EASA+F,QAAA,UAAA/F,EAAA+F,OACH,IAAAD,EAAgB9F,OACnB6F,OAAAG,SAAAhG,EAAAoG,MAAA,GAAApG,EAAAoG,IAAAnC,QAAA,KAAA,IAAA,KAAA,kBALW6B,EAAaG,KAAK,MAAOjG,EAAQoG,KAElCP,OAAOG,SAAWhG,EAAQoG,SAEjClG,KAAKC,OAAOQ,IAAIX","file":"../../scripts/layout/scratchbook.js","sourcesContent":["/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nimport Frames from \"mvc/ui/ui-frames\";\nimport DATA from \"mvc/dataset/data\";\nimport visualization from \"viz/visualization\";\nimport trackster from \"viz/trackster\";\nimport _l from \"utils/localization\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        options = options || {};\n        this.frames = new Frames.View({ visible: false });\n        this.setElement(this.frames.$el);\n        this.buttonActive = options.collection.add({\n            id: \"enable-scratchbook\",\n            icon: \"fa-th\",\n            tooltip: _l(\"Enable/Disable Scratchbook\"),\n            onclick: function() {\n                self.active = !self.active;\n                self.buttonActive.set({\n                    toggle: self.active,\n                    show_note: self.active,\n                    note_cls: self.active && \"fa fa-check\"\n                });\n                !self.active && self.frames.hide();\n            },\n            onbeforeunload: function() {\n                if (self.frames.length() > 0) {\n                    return `You opened ${self.frames.length()} frame(s) which will be lost.`;\n                }\n            }\n        });\n        this.buttonLoad = options.collection.add({\n            id: \"show-scratchbook\",\n            icon: \"fa-eye\",\n            tooltip: _l(\"Show/Hide Scratchbook\"),\n            show_note: true,\n            visible: false,\n            onclick: function(e) {\n                self.frames.visible ? self.frames.hide() : self.frames.show();\n            }\n        });\n        this.frames\n            .on(\"add remove\", function() {\n                this.visible && this.length() == 0 && this.hide();\n                self.buttonLoad.set({\n                    note: this.length(),\n                    visible: this.length() > 0\n                });\n            })\n            .on(\"show hide \", function() {\n                self.buttonLoad.set({\n                    toggle: this.visible,\n                    icon: (this.visible && \"fa-eye\") || \"fa-eye-slash\"\n                });\n            });\n        this.history_cache = {};\n    },\n\n    /** Add a dataset to the frames */\n    addDataset: function(dataset_id) {\n        var self = this;\n        var current_dataset = null;\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            var history_id = Galaxy.currHistoryPanel.collection.historyId;\n            this.history_cache[history_id] = {\n                name: Galaxy.currHistoryPanel.model.get(\"name\"),\n                dataset_ids: []\n            };\n            Galaxy.currHistoryPanel.collection.each(model => {\n                !model.get(\"deleted\") &&\n                    model.get(\"visible\") &&\n                    self.history_cache[history_id].dataset_ids.push(model.get(\"id\"));\n            });\n        }\n        var _findDataset = (dataset, offset) => {\n            if (dataset) {\n                var history_details = self.history_cache[dataset.get(\"history_id\")];\n                if (history_details && history_details.dataset_ids) {\n                    var dataset_list = history_details.dataset_ids;\n                    var pos = dataset_list.indexOf(dataset.get(\"id\"));\n                    if (pos !== -1 && pos + offset >= 0 && pos + offset < dataset_list.length) {\n                        return dataset_list[pos + offset];\n                    }\n                }\n            }\n        };\n        var _loadDatasetOffset = (dataset, offset, frame) => {\n            var new_dataset_id = _findDataset(dataset, offset);\n            if (new_dataset_id) {\n                self._loadDataset(new_dataset_id, (new_dataset, config) => {\n                    current_dataset = new_dataset;\n                    frame.model.set(config);\n                });\n            } else {\n                frame.model.trigger(\"change\");\n            }\n        };\n        this._loadDataset(dataset_id, (dataset, config) => {\n            current_dataset = dataset;\n            self.add(\n                _.extend(\n                    {\n                        menu: [\n                            {\n                                icon: \"fa fa-chevron-circle-left\",\n                                tooltip: \"Previous in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(current_dataset, -1, frame);\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, -1);\n                                }\n                            },\n                            {\n                                icon: \"fa fa-chevron-circle-right\",\n                                tooltip: \"Next in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(current_dataset, 1, frame);\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, 1);\n                                }\n                            }\n                        ]\n                    },\n                    config\n                )\n            );\n        });\n    },\n\n    _loadDataset: function(dataset_id, callback) {\n        var self = this;\n        var dataset = new DATA.Dataset({ id: dataset_id });\n        $.when(dataset.fetch()).then(() => {\n            var is_tabular = _.find(\n                [\"tabular\", \"interval\"],\n                data_type => dataset.get(\"data_type\").indexOf(data_type) !== -1\n            );\n            var title = dataset.get(\"name\");\n            var history_details = self.history_cache[dataset.get(\"history_id\")];\n            if (history_details) {\n                title = `${history_details.name}: ${title}`;\n            }\n            callback(\n                dataset,\n                is_tabular\n                    ? {\n                          title: title,\n                          url: null,\n                          content: DATA.createTabularDatasetChunkedView({\n                              model: new DATA.TabularDataset(dataset.toJSON()),\n                              embedded: true,\n                              height: \"100%\"\n                          }).$el\n                      }\n                    : {\n                          title: title,\n                          url: `${Galaxy.root}datasets/${dataset_id}/display/?preview=True`,\n                          content: null\n                      }\n            );\n        });\n    },\n\n    /** Add a trackster visualization to the frames. */\n    addTrackster: function(viz_id) {\n        var self = this;\n        var viz = new visualization.Visualization({ id: viz_id });\n        $.when(viz.fetch()).then(() => {\n            var ui = new trackster.TracksterUI(Galaxy.root);\n\n            // Construct frame config based on dataset's type.\n            var frame_config = {\n                title: viz.get(\"name\"),\n                type: \"other\",\n                content: function(parent_elt) {\n                    // Create view config.\n                    var view_config = {\n                        container: parent_elt,\n                        name: viz.get(\"title\"),\n                        id: viz.id,\n                        // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                        dbkey: viz.get(\"dbkey\"),\n                        stand_alone: false\n                    };\n\n                    var latest_revision = viz.get(\"latest_revision\");\n                    var drawables = latest_revision.config.view.drawables;\n\n                    // Set up datasets in drawables.\n                    _.each(drawables, d => {\n                        d.dataset = {\n                            hda_ldda: d.hda_ldda,\n                            id: d.dataset_id\n                        };\n                    });\n                    view = ui.create_visualization(\n                        view_config,\n                        latest_revision.config.viewport,\n                        latest_revision.config.view.drawables,\n                        latest_revision.config.bookmarks,\n                        false\n                    );\n                }\n            };\n            self.add(frame_config);\n        });\n    },\n\n    /** Add and display a new frame/window based on options. */\n    add: function(options) {\n        if (options.target == \"_blank\") {\n            window.open(options.url);\n        } else if (options.target == \"_top\" || options.target == \"_parent\" || options.target == \"_self\") {\n            window.location = options.url;\n        } else if (!this.active || options.noscratchbook) {\n            var $galaxy_main = $(window.parent.document).find(\"#galaxy_main\");\n            if (options.target == \"galaxy_main\" || options.target == \"center\") {\n                if ($galaxy_main.length === 0) {\n                    window.location = `${options.url + (options.url.indexOf(\"?\") == -1 ? \"?\" : \"&\")}use_panels=True`;\n                } else {\n                    $galaxy_main.attr(\"src\", options.url);\n                }\n            } else window.location = options.url;\n        } else {\n            this.frames.add(options);\n        }\n    }\n});\n"]}