{"version":3,"sources":["libs/jquery/jquery.dynatree.js"],"names":["_canLog","mode","msg","args","Array","prototype","slice","apply","arguments","tag","dt","getHours","getMinutes","getMilliseconds","window","console","info","warn","log","e","number","join","logMsg","unshift","_log","this","getDynaTreePersistData","DTNodeStatus_Error","DTNodeStatus_Loading","DTNodeStatus_Ok","$","getDtNodeFromElement","el","alert","ui","dynatree","getNode","n","matched","uaMatch","version","browser","ua","exec","indexOf","match","webkit","safari","navigator","userAgent","v1parts","v2parts","minLength","Math","p1","v1","v2","p2","i","split","min","length","parseInt","isNaN","NaN","BROWSER","_checkBrowser","jquerySupports","positionMyOfs","versionCompare","containment","tree","delay","options","dnd","onDragStart","onDrop","_registerDnd","draggable","addClasses","appendTo","distance","revert","dropped","isRejected","hasClass","scrollSpeed","helper","sourceNode","target","ddmanager","current","scroll","scrollSensitivity","connectToDynatree","event","_onDragEvent","$tree","droppable","greedy","data","didRegisterDnd","tolerance","Class","create","initialize","DynaTreeNode","parent","title","extend","key","childList","_nodeCount","hasSubSel","bSelected","nodedatadefaults","li","span","toString","_isLoading","toDict","node","dict","expand","select","recursive","callback","children","activate","l","isStatusNode","push","fromDict","removeChildren","_getInnerHtml","render","opts","cache","level","getLevel","res","imageSrc","minExpandLevel","checkbox","hasChildren","tagExpander","hideCheckbox","tagCheckbox","icon","iconClass","imagePath","nodeTitle","href","onCustomRender","call","tooltip","replace","noLink","classNames","cl","_fixOrder","childNode1","ul","insertBefore","childLI","firstChild","useEffects","childNode2","logDebug","nextSibling","includeInvisible","document","className","cn","isLastSib","isLastSibling","firstTime","appendChild","createElement","style","display","innerHTML","cnList","expanded","isFolder","folder","bExpanded","isLazy","activeNode","addClass","selected","combinedIconPrefix","active","combinedExpanderPrefix","onRender","lastsib","onCreate","duration","animate","fx","dtnode","generateIds","idPrefix","noConnector","sep","path","isExpanded","isHidden","getKeyPath","undefined","excludeSelf","keyPathSeparator","visitParents","getParent","getChildren","p","isFirstSibling","getNextSibling","getPrevSibling","ac","isChildOf","isDescendantOf","otherNode","child","countChildren","sortChildren","cmp","b","deep","a","x","toLowerCase","_setStatusNode","y","sort","addChild","setLazyNodeStatus","lts","nodeLoading","autoFocus","nodeWait","focus","nodeError","strings","dtn","loadError","_parentList","includeSelf","includeRoot","eventX","_getTypeForOuterNodeEvent","childNodes","cns","eventY","pageY","offsetTop","offsetLeft","nx","clientWidth","ny","clientHeight","tcn","radio","nodeIcon","getEventTargetType","isVisible","expander","parents","empty","vline","connector","isFocused","_expand","_activate","find","tnFocused","flag","fireEvents","onQueryActivate","persistence","activeKey","deactivate","activeVisible","makeVisible","persist","removeClass","cookie","cookieId","onActivate","onDeactivate","activateSilently","_userActivate","isActive","clickFolderMode","toggleExpand","_updatePartSelectionState","partsel","sel","unselectable","s","allDeselected","allSelected","_fixSelectionState","_setSubSel","allChildsSelected","visit","_select","isPartSel","onQuerySelect","selectMode","addSelect","clearSelect","onSelect","toggleSelect","isSelected","_loadContent","onLazyRead","bExpand","forceSync","onQueryExpand","allowEffects","clearExpand","autoCollapse","onExpand","collapseSiblings","scheduleAction","timer","clearTimeout","self","setTimeout","ms","targetType","_onClick","aTag","msie","preventDefault","getElementsByTagName","_onDblClick","_onKeydown","sib","handled","_onKeypress","_onFocus","type","onBlur","focused","onFocus","fn","remove","root","removeChild","tn","splice","isRecursiveCall","retainPersistence","setTitle","reload","force","reloadChildren","eventType","attr","bind","unbind","isOk","_loadKeyPath","keyPath","segList","seg","logWarning","resetLazy","_addChildNode","beforeNode","pers","iBefore","inArray","isInitializing","cookiesFound","focusedKey","expandedKeyList","selectedKeyList","addExpand","bEnableUpdate","obj","prevFlag","enableUpdate","tnFirst","append","appendAjax","ajaxOptions","debugLazyDelay","logInfo","orgSuccess","success","orgError","error","ajaxDefaults","textStatus","jqXHR","prevPhase","phase","postProcess","dataType","hasOwnProperty","d","parseJSON","trigger","isArray","errorThrown","ajax","move","targetNode","pos","targetParent","prevParent","lastentry","DynaTreeStatus","_getTreePersistData","cookieOpts","ts","read","write","idx","isReloading","DynaTree","$widget","divTree","get","_initDragAndDrop","_load","focusNode","each","src","search","_rexDtLibName","lastIndexOf","tagEmpty","tagVline","tagConnector","tagNodeIcon","initAjax","url","initId","$ulInitialize","hide","tnRoot","_reloadAjax","_createFromTag","_checkConsistency","onPostInit","ajaxOpts","addActiveKey","addFocusedKey","addExpandedKeyList","addSelectedKeyList","XMLHttpRequest","serializeArray","stopOnParents","nodeList","getSelectedNodes","name","arr","value","getPersistData","debugLevel","isUserEvent","redraw","renderInvisibleNodes","getRoot","enable","disable","getNodeByKey","getElementById","getActiveNode","reactivate","setFocus","activateKey","loadKeyPath","shift","selectKey","bEnable","count","parentTreeNode","$ulParent","$liSpan","$li","$liA","html","iPos","substring","trim","dataAttr","charAt","eval","childNode","$ul","_setDndStatus","$source","hitMode","accept","posOpts","$target","markerOffsetX","markerAt","$dndMarker","css","z-index","prependTo","offsetString","my","at","of","offset","show","position","eventName","r","nodeTag","$helper","clone","onDragEnter","over","before","after","enterResponse","nodeOfs","relPos2","relPos","left","top","height","preventVoidMoves","onDragOver","autoExpandMS","isForbidden","onDragStop","onDragLeave","cancelDrag","dd","cancel","widget","_init","_create","eventNames","__focusHandler","div","addEventListener","keyboard","o","onClick","onDblClick","onKeydown","onKeypress","onfocusin","onfocusout","Widget","getter","buildType","_DynaTreeClass","parentNode","timeout","loading","container","hidden","lazy","defaults","plugin","add","start","click","drag","prevTargetNode","closest","stop","which","jQuery"],"mappings":"YA8BA,SAAIA,OAAUC,EAAdC,GAMC,GAAKF,QAAL,CAEC,GAAAG,GAAAC,MAAAC,UAAAC,MAAAC,MAAAC,WAAA,IAEGL,EAAAA,GAAOC,MACXK,EAAAC,EAAAC,WAAA,IAAAD,EAAAE,aAAA,IACAF,EAAIA,aAAJ,IAAAA,EAAAG,iBACAV,GAAIM,GAAMC,EAAGC,MAAHR,EAAA,EAIV,KAAA,OAAIF,GACH,IAAA,OACAa,OAAKC,QAALC,KAAAT,MAAAO,OAAAC,QAAAZ,EACCW,MACA,KAAA,OACDA,OAAKC,QAALE,KAAAV,MAAAO,OAAAC,QAAAZ,EACCW,MACA,SACDA,OAAAC,QAAAG,IAAAX,MAAAO,OAAAC,QAAAZ,IAPA,MAAAgB,GAWCL,OAASC,SAEQ,aAAjBf,EAAUoB,QAEVN,OAAAC,QAAAG,IAAAf,EAAAkB,KAAA,OAHDrB,SAAKc,IAUP,QAASQ,QAAOpB,GACfE,MAAMC,UAAUkB,QAAQhB,MAAMC,WAAY,UAC1CgB,MAAAA,MAAAC,KAAAjB,WA1CD,GAAIR,UAAU,EA+CV0B,uBAAyB,KAOzBC,oBAAwB,EAK5BC,qBAAA,EACCC,gBAAY,GAAZ,SAASC,GAeV,QAASC,sBAAqBC,GAE7B,MADAC,OAAM,sCACCH,EAAEI,GAAGC,SAASC,QAAQJ,GAiB7B,QAAOK,SAMP,QAAIC,cAAJD,GACA,MAASE,KAATF,EAAA,GAAuBA,EAAA,EAAA,IAAAA,EAAA,GAAAA,EAUrBG,QAAAA,iBAFM,GAAPF,GAAAG,CAwBD,OAPAH,GAbC,SAAAI,GACDJ,EAAAA,EAAAA,aACAG,IAAAA,GAAA,wBAAAE,KAAAD,IACC,wBAAuBC,KAAAD,IACtBD,qCAAAE,KAAAD,IACAD,kBAAkBH,KAAAA,IAClBI,EAAAE,QAAA,cAAA,GAAA,gCAAAD,KAAAD,MAEAD,QADDA,QAEOI,EAAKJ,IAAQK,GACnBL,QAAQM,EAAR,IAAA,MAGFC,UAAAC,WAXAR,KAcDH,EAAAG,UAZGA,EAASH,EAAQG,UAAY,EAC7BA,EAAQD,QAAUF,EAAQE,SAexBU,EAAAA,OAAJT,EACCU,QAAW,EACXC,EAAYC,SAFbZ,EAAAM,QAAA,GAAAN,EASiBa,QAAKJ,gBAALK,EAAAC,GAAkB,GACAF,GAAAG,EAAAC,EADAR,GAAA,GAAAK,GAAAI,MAAA,KAClCR,GAAUM,GAAID,GAAAG,MAAA,KAAEF,EAAKN,KAALS,IAAAV,EAAAW,OAAAV,EAAAU,OAEf,KAAAH,EAAA,EAAAA,EAAAN,EAAAM,IAMD,GAJCJ,EAAAQ,SAAAZ,EAAAQ,GAAA,IACAD,EAFKK,SAEIR,EAASI,GAAA,IAClBK,MAAQT,KAARA,EAAAJ,EAAAQ,IACAK,MAAAN,KAAAA,EAAAN,EAAAO,IACDJ,GAAAG,EAEA,MAAAH,GAAAG,EACD,EACIP,EAAQW,GACX,EAGDG,GAID,OAAIC,GAAAA,SAAUC,EAAiBL,OAC3BM,EAEHC,EAAeC,OAAAA,EAAiBnC,QAAjB,EAA6B,EAkiG1CoC,QAAAA,kBAHoBC,GAIpBC,GAAAA,GAAOD,EAJaE,QAAAC,KAAA,IAMvBA,KAAAA,EAAAC,aAAAD,EAAAE,SACGC,eAGCH,GAAAA,EAAAC,aACArD,EAAAA,MAAOwD,WACPC,YAAG,EACFC,SAAA,OACAV,aAAA,EACAE,MAAA,EACAS,SAAA,EAGDC,QAAA,IAAAR,EAAAQ,QAAA,SAAAC,GAIA,GADA7D,OAAI8D,+BAA8BC,GAClC,iBAAOD,GAGRE,OAAAA,CAMC,IAAAC,GAAIC,EAAAA,GAAa1D,WAAAA,EAAcM,GAAAA,UAAcqD,SAA7C3D,EAAAI,GAAAwD,UAAAC,QAAAJ,MACiB,OAAjBA,IAAeA,EAAAF,SAAA,yBAEdO,QAAA,EACDN,YAAOE,EACPK,kBArCmB,GAuCnBC,mBAAA,EAEAP,OAAIC,SAAAA,GACJ,GAAAA,GAASA,EAAAA,GAAYrD,SAAAC,QAAA2D,EAAAN,OACrB,OAAAD,GAGHA,EAAAjB,KAAAyB,aAAA,SAAAR,EAAA,KAAAO,EAAA,KAAA,MA9CC,eAgDAxB,MAAK0B,SAAMC,EAAUhE,GAIpBiE,QADHjE,EAAAqD,OAAAa,KAAA,mBAMA1B,GAAAA,EAAAE,QACAL,EAAI8B,MAAAA,WACJtB,YAAIF,EACHyB,UAAGD,UAEFF,QAAA,IA7rGC,GAFDI,QAGAC,OAAA,WALF,MAAA,YAGG/E,KAAKgF,WAAWlG,MAAMkB,KAAMjB,cA8F3ByD,QAAUC,gBAUdC,gBAEAuC,cAAarG,eAAYyB,EAAAI,GAAAM,QAAA,QAAA,GAOvBkE,aAAKH,MAAgBC,QAEpBE,cAAArG,WACHoG,WAAA,SAAAE,EAAApC,EAAA6B,GAGG3E,KAFDkF,OAEKA,EACJP,KAAAA,KAAA7B,EACA,gBAAA6B,KACDA,GAAAQ,MAAcC,IAf0B,MAkBxCT,EAAAU,IACAV,EAAKW,IAAAA,IAAYxC,EAnBuByC,aAqBxCZ,EAAKa,IAAAA,GAALb,EAAiBU,IAEjBrF,KAAA2E,KAAKc,EAAAA,UAALpF,EAAAI,GAAAC,SAAAgF,iBAAAf,GAEA3E,KA1BuB2F,GAAA,KAkBvB3F,KAAK4F,KAAO,KAUbC,KAAAA,GAAU,KACT7F,KAAAsF,UAAO,KACPtF,KA9BuB8F,YAAA,EAsBvB9F,KAAKwF,WAAY,EAUlBO,KAAAA,WAAQ,EACP/F,KAAIgG,WAAJ,GAIAC,SAAKC,WACLD,MAAKE,gBAAcV,KAAnBd,KAAAU,IAAA,OAAArF,KAAA2E,KAAAQ,MAAA,KAGCY,OAAA,SAAAK,EAAAC,GACD,GAAAL,GACCC,EAAKK,EAAAA,UAALtG,KAAA2E,KAQA,IAPAsB,EAAAM,SAAaC,KAAE1D,KAAKwC,aAApBtF,KACCgG,EAAAA,MAAYV,KAAAA,KAAUrD,YAAtBjC,KACAiG,EAAAC,OAAUO,KAAAA,UACTR,EAAAA,OAAKK,KAASI,UACdL,GACDA,EAAAJ,GAEDG,GAAYE,KAAZhB,UAAA,CACAW,EAAAK,WACD,KAAA,GAAOL,GAAAA,EAAPO,EAAAxG,KAAAsF,UAAAlD,OAAAH,EAAAuE,EAAAvE,IArDuB+D,EAAAhG,KAAAsF,UAAArD,GA8ChB+D,EAAKS,gBAUbE,EAAAA,SAAUD,KAAAV,EAAAD,QAAe,EAAAM,eALhBJ,GAAKK,QAWb,OAAGA,IAGFK,SAAA,SAAAV,GAKD,GAAAK,GAAKM,EAALN,QACA,QAAcA,KAAdA,EAGDO,MA1EwB7G,MAAA2E,KAAAtE,EAAA+E,OAAApF,KAAA2E,KAAAsB,OAgEtBjG,MAAK8G,QAWNb,GACCc,EAAAA,UAAY/D,GADbiD,EAECe,aAAQlE,GAFT9C,KAGCiH,KAAAA,EAAQ7B,OAAK8B,KAALvC,KAHTsB,GAAAjG,KAIC2E,iBAJD3E,KAKCmH,SALDb,IAQAO,cAAYE,WACX,GAMAK,GANAtE,EAAGmE,KAAHnE,KACCqE,EAAAA,EAAOH,QACPA,EAAAlE,EAAAkE,MACDC,EAAAjH,KAAAkH,WACAvC,EAAM3E,KAAI2E,KACVwC,EAAAA,EAGAF,GAAAF,EAAAM,eACDJ,EAAA,IACAE,GAAIJ,EAAKO,eAGT,IAAAtH,KAAAuH,cACAJ,GAAKxC,EAAL6C,YAEEJ,GAAAA,EAAWzC,aAGXoC,EAAAO,WAAA,IAAA3C,EAAA8C,eAAA9C,EAAA8B,eACDU,GAAAA,EAAOO,aAGV/C,EAAAgD,MAEGR,EAD4B,MAHtBxC,EAGAgD,KAAKhD,OAAKiD,GACRjD,EAAAgD,KAERZ,EAAAc,UAAAlD,EAAAgD,KAEAR,GAAA,aAAAC,EAAA,gBACD,IAAAzC,EAAAgD,OAGCG,EAAYf,UACZI,GAAA,iBAAAxC,EAAAiD,UAAA,YAEAT,GACCY,EAAOpD,YAGX,IAAAmD,GAAA,EAIG,IANAf,EAGOiB,iBACNF,EAAAA,EAAYE,eAAAC,KAAqBnF,EAAA9C,OAAc+G,KAEhDe,EAAA,CACDX,GAAAA,GAAOW,EAAPI,QAAA,WAAAvD,EAAAuD,QAAAC,QAAA,MAAA,UAAA,IAAA,GACAJ,EAAOZ,EAAPY,MAAA,GAPED,GA3HqBf,EAAAqB,QAAAzD,EAAAyD,OA2HT,8CAAgDrB,EAAKsB,WAAWlD,MAAQ,IAAM+C,EAAU,IAAMvD,EAAKQ,MAAQ,UAG3G,YAAc4C,EAAO,YAAchB,EAAKsB,WAAWlD,MAAQ,IAAM+C,EAAU,IAAMvD,EAAKQ,MAAQ,OAc3G,MADDgC,IAAKmB,GAKJC,UAAIC,WAIH,GAAAF,GAAKG,KAAGC,SACR,IAHDJ,GAGOtI,KAAAyI,GAIR,IAzJuB,GAwJtBE,GAAA3I,KAAAyI,GAAAG,WAxJsB3G,EAAA,EAAAuE,EAAA8B,EAAAlG,OAAA,EAAAH,EAAAuE,EAAAvE,IAAA,CAgJtB,GAAIuG,GAAaF,EAAGrG,GAYtB6E,EAAQ6B,EAASE,MAChBL,KAAAM,GAVE9I,KAAK8C,KAAKiG,SAAS,gCAAkC9G,EAAI,KAAOuG,EAAa,OAASM,GACtF9I,KAAKyI,GAAGC,aAAaF,EAAW7C,GAAImD,EAAWnD,KAE/CgD,EAAUA,EAAQK,cAMrBlC,OAAQ,SAAS+B,EAAYI,GAyB3B,GAAAnG,GAAA9C,KAAUkJ,KACVhE,EAAI6B,KAAKM,OACR1C,EAAK8D,KAAGU,KACRpC,EAFDjE,EAEKE,QACJoG,EAAArC,EAAQoC,WACRE,EAAArJ,KAAAsJ,gBACDC,GAAUrE,CAEV,IAAAA,GAAgBlF,KAAAyI,IASf,GAAQe,EAAAA,CAEJxJ,KAACkF,KACJqE,GAAA,EACAvJ,KAAA2F,GAAAuD,SAAAO,cAAA,MACAvE,KAAAA,GAAAA,OAAYgE,KACZhE,EAAOuD,KAAGiB,EAAMC,cAChBzE,KAAAA,GAAOS,GAAG6D,EAAAA,SAAYtE,EAAtBG,KAELrF,KAAA4F,KAAAsD,SAAAO,cAAA,QACAzJ,KAAA4F,KAAAuD,UAAAC,EAAAjE,MACKnF,KAAA2F,GAAA6D,YAAAxJ,KAAA4F,MAELV,EAAAuD,KAGIvD,EAAAuD,GAAAS,SAAAO,cAAA,MACDvE,EAAAuD,GAAAiB,MAAAC,QAAA,OACAzE,EAAKU,GAAKgE,YAAY1E,EAAK2B,KAQ1BgD,EAAAA,GAAOnD,YAAQoD,KAAfnE,KAGAkE,KAAAA,KAAOnD,UAAQa,KAAAA,eAEhB,IAAAsC,KACCA,GAAAA,KAAOnD,EAAK0C,MACZzE,EAAAoF,UACDF,EAAIR,KAAAA,EAAWW,QAEdhK,KAAAiK,WACDJ,EAAInD,KAAKjB,EAAAA,WAER,IAAAzF,KAAAuH,eACDsC,EAAInD,KAAKlB,EAAAA,aAERb,EAAAuF,QAAA,OAAAlK,KAAAsF,WACDuE,EAAI/G,KAAKqH,EAAAA,MAERd,GACDQ,EAAIlF,KAAKyF,EAAAA,SAERpK,KAAAyF,WACDoE,EAAAnD,KAAA0C,EAAAiB,UAEAR,KAAOnD,WAKPmD,EAAOnD,KAAK0C,EAAGkB,SAbXxH,EAAKqH,aAAenK,MAmBxB6J,EAAAnD,KAAA0C,EAAAmB,QAhBI5F,EAAKyF,UAmBTP,EAAAnD,KAAA/B,EAAAyF,UAIAP,EAAAnD,KAAA0C,EAAAoB,wBACHxK,KAAAiK,UAAA,IAAA,MACGtF,EAAAuF,QAAA,OAAAlK,KAAAsF,UAAA,IAAA,KACGyB,EAAK0D,IAAS,KAEhBZ,EAAAnD,KAAA0C,EAAAkB,oBACDtK,KAAAiK,UAAA,IAAA,MACDtF,EAAAoF,SAAA,IAAA,KAEC/J,KAAA4F,KAAQ3D,UAAO4H,EAAKvE,KAAAA,KAGpBtF,KAAA2F,GAAAwD,UAAAE,EAAAD,EAAAsB,QAAA,GAGDnB,GAAAxC,EAAA4D,UACA5D,EAAI4D,SAAU1C,KAAAnF,EAAA9C,KAAAA,KAAA4F,MAKZmB,EAAI6D,UACJvK,EAAEoK,SAASI,KAAX/H,EAAwBgI,KAAIF,KAAAA,WAlG5B5K,MAAA2F,GAAA3F,KAAUkJ,KAASO,KACnBzJ,KAAAyI,GAAQsC,SAAStB,cAAjB,MACA1C,EAAIpC,eAAiBqG,EACpBhL,KAAAyI,GAAK9C,UAAasF,EAAAA,UAAWtG,IAA7ByE,EAAA8B,YAEDlL,KAAAyI,GAAK7C,UAAOsD,EAASO,SAiGtB,KAAAzJ,KAAAiK,YAAA,IAAAhB,IAAAjJ,KAAAsF,UAAA,CArSsB,IAAA,GAAArD,GAAA,EAAAuE,EAAAxG,KAAAsF,UAAAlD,OAAAH,EAAAuE,EAAAvE,IAuSxBjC,KAAAsF,UAAArD,GAAA6E,QAAA,EAAAmC,EAECjJ,MACCmL,YAGA,GAAAnL,KAAGgG,GAAKd,CACPkG,GAAAA,GAAA,SAAapF,KAAKrB,GAAL+E,MAAbC,QACA0B,IAAArL,KAAAiK,SAEF,IAAApB,GAAkBjJ,EAAKuL,IAAvBG,IAAAD,EAAA,CAjTuB,GAAAT,GAAA7D,EAAA+D,GAAAF,UAAA,GAiSrBvK,GAAEL,KAAKyI,IAAIoC,QAAQ9D,EAAK+D,GAAIF,OAoB9B5K,MAAAyI,GAAOiB,MAAKxE,QAAZlF,KAAAiK,YAAA/E,EAAA,GAAA,SAKCqG,WAAOC,SAAWC,GAClB,GAAAL,MACDD,EAAAnL,KAAO8C,KAAKwC,QAAZoG,gBAOE,OAvBF1L,MAAK2L,aAAa,SAAS3F,GAmB5BA,EAAAd,QACAqC,EAAAA,QAAavB,EAAArB,KAAAU,OAEXoG,GACCN,EAAAC,EAAAxL,KAAAuL,IAGAS,UAAA,WACA,MAAA5L,MAAOkF,QAGP2G,YAAOL,WACP,OAAAA,KAAAxL,KAAAuH,cAGF,MAAAvH,MAASsF,WAITiC,YAAQ,WACR,GAAAvH,KAAO2E,KAAAuF,OAAQ5E,CAnVQ,GAAA,OAAAtF,KAAAsF,eAAAkG,KAAAxL,KAAAsF,UAsVxBgE,MACKwC,IAAJ,IAAQ9L,KAAKkF,UAAb9C,OAvVuB,OAAA,CAwUhB,IAA6B,IAA1BpC,KAAKsF,UAAUlD,QAAgBpC,KAAKsF,UAAU,GAAGmB,eAoB3D,MAhBC,QAAO,EAoBR,QAAKzG,KAAKkF,WAGV6G,eAAc7G,WACd,GAAA4G,GAAI9L,KAAIiC,MAA6B,QAAA6J,GAAAA,EAAAxG,UAAA,KAAAtF,MAGnCsJ,cAAA,WACD,GAAAwC,GAAA9L,KAAAkF,MACD,QAAO4G,GAAPA,EAAAxG,UAAAwG,EAAAxG,UAAAlD,OAAA,KAAApC,MAGDgM,UAAAA,WACC,QAAKhM,KAAKkF,YAGV+G,eAAc/G,WACd,IAAAlF,KAAQiC,OAA+B,MAAA,KAGrC,KAAA,GADAiK,GAAAlM,KAAUiC,OAAVqD,UACArD,EAAA,EAAAuE,EAAA0F,EAAA9J,OAAAH,EAAAuE,EAAAvE,IACD,GAAAiK,EAAAjK,KAAAjC,KACD,MAAOkM,GAAPjK,EAAA,EAGDwE,OAAAA,OAbAuF,eAAgB,WAiBhBG,IAAAA,KAAAA,OACC,MAAQ,KAGTC,KAAAA,GAjBKF,GAAKlM,KAAKkF,OAAOI,UAiBtB8G,EAAAA,EAAAA,EAAAA,EAAgBhK,OAAA,EAAAH,EAAAuE,EAAAvE,IACf,GAAGiK,EAACG,KAAJrM,KACC,MAAOkM,GAAAjK,EAAP,EAGD,OAAA,OAGEwE,aAAA,WACDqF,OAAA,IAAM5G,KAAAA,KAANuB,cAGD0F,UA7YuB,SAAAE,GA8XvB,MAAQrM,MAAKkF,QAAUlF,KAAKkF,SAAWmH,GAmBvCD,eAAS,SAAAC,GACR,IAAAA,EACA,OAAA,CAGA,KADD,GAAAP,GAAI9L,KAAIiC,OACHqK,GAAAA,CACJ1L,GAAAA,IAAK0L,EACL,OAAA,CAxZsBR,GAAAA,EAAA5G,OA4ZxB,OAAA,GAbAqH,cAAe,WAiBfC,GAAAA,GAAAA,KAAclH,SACb,KAAIgD,EACJ,MAAA,EAGAmE,KAAAA,GADC7L,GAAA0H,EAAAlG,OACKqK,EAAAA,EAAAA,EAAO7L,EAAAqB,EAAAuE,EAAAvE,IAAYyK,CAExB9L,GADH0H,EAAArG,GACa0C,gBAEV,MAAA/D,IAOE4L,aAAA,SAAAC,EAAAE,GACD,GAAArE,GAAAtI,KAAAsF,SACD,IAAAgD,EAAA,CAUA,GAPAmE,EAAAA,GAAA,SAAAG,EAAAF,GAdA,GAAIG,GAAID,EAAEjI,KAAKQ,MAAM2H,cAiBvBC,EAAAA,EAAAA,KAAAA,MAAgBD,aACf,OAAAD,KAAAG,EAAA,EAAAH,EAAAG,EAAA,GAAA,GAEA1E,EAAA2E,KAAKtI,GACJgI,EACC,IAAA,GAAG1K,GAAA,EAAAuE,EAAA8B,EAAAlG,OAAAH,EAAAuE,EAAAvE,IACFqG,EAAArG,GAAAqD,WACAgD,EAAArG,GAAGuK,aAAQC,EAAA,aAIX,gBANDE,GAOA3M,KAAA8G,WAICiG,eAAA,SAAApI,GAEF,GAfDiE,GAeYA,KAAatD,UAAAtF,KAAAsF,UAAA,GAAA,IACxBX,IAAAA,EAeKvE,GACJuE,EAAA8B,cAAKsG,EACL1M,EAAEgF,IAAKO,cACPgD,EAAK9C,KAALnB,EACJiE,EAAA9B,WAEKnC,EAAA8B,cAAa,EACZ9B,EAAAU,IAAA,cACAuD,EAAKtD,KAAL4H,SAAAvI,QAtBHA,IAAAA,GAAWiE,EAAXnC,eAAA,CACAmC,IAHM5I,KAKAyI,KACN9D,KAAK8B,GAAAA,YAAemC,EAApBjD,IACAhB,EAAWgB,GAAA,MAEX,MAAAjG,IAndsB,IAAAM,KAAAsF,UAAAlD,OAqcpBpC,KAAKsF,aAkBRtF,KAAIkI,UAAWnB,UAeZoG,kBAAA,SAAAC,EAAArG,GACD,GAAAmB,GAAAnB,GAAAA,EAAAmB,QAAAnB,EAAAmB,QAAA,KACD3I,EAAKY,GAAAA,EAAAA,KAAL,KAAA4G,EAAAxH,KAAA,IAAA,EACC,QAAKuG,GACLzF,IAAED,iBACFJ,KAAA+M,eAAA,MACA1M,EAAAL,KAAI4F,MAAKV,YAAOlF,KAAA8C,KAAAE,QAAAqF,WAAAgF,aACfrN,KAAA8F,YAAKiH,EAEJ7E,KAAAA,KAASA,QAFUoF,YAGnBlD,OAAUpK,KAAK8C,KAAKE,QAAQqF,KAAAA,WAAWkF,KAAAA,UAAAA,OAAAA,EAExCvN,KAAAsF,UAAA,GAAAkI,QAEFxN,KAAKE,QAGJ,MACCiF,KAAAA,sBACA+C,KAAAA,YAFmB,EAGnBkC,EAAAA,KAAAA,MAAUA,SAAUpH,KAAAA,KAAQqF,QAAlBA,WAA6BoF,aAExCzN,KAAAkF,QACDlF,KAAA+M,gBACC5H,MAAMnF,KAAA8C,KAAAE,QAAA0K,QAA0BN,QAAhC7N,EArCF2I,QAAAA,EAzduBkC,SAAApK,KAAA8C,KAAAE,QAAAqF,WAAAkF,UAmgBvB,MACA,KAAII,oBACJ3N,KAAA8F,YAAa,EAEXU,KAAE1G,gBACFqF,MAAAnF,KAAA8C,KAAAE,QAAA0K,QAAAE,UAAArO,EACDoO,QAAUzI,EACVkF,SAAApK,KAAA8C,KAAAE,QAAAqF,WAAAoF,WA1gBsB,MA6gBxBvG,SACC,KAAA,wBAAAkG,EAAA,OAIAS,YAAU,SAAK3I,EAAf4I,GAGCH,IAFD,GAAAnH,MACCS,EAAAA,EAAAA,KAAAA,KAAAA,OACA0G,IACAI,GAAAJ,EAAAzI,SACDsB,EAAA1G,QAAOmH,GAdN0G,EAAMA,EAAIzI,MAkBX,OAAAsB,IAdDU,SAAU,WAsBT,IAFA,GAAAD,GAAIjD,EACJ2J,EAAA3N,KAAAkF,OACIlB,GACHiD,IACA0G,EAAAA,EAAAzI,MAED,OAAI8I,IAGJC,0BAAejK,SAAOkK,GAKxB,GAAAC,GAAAnO,KAAA8C,KAAAE,QAAAqF,WACGrE,EAAIgK,EAAAhK,MAEH,IAAAA,EAAOmF,UAAHhI,QAAkBgE,EAAtBa,MAA6B,EAC5B,MAAA,KAMA,KAAA,GALKgI,GAEA1J,EAAO6E,MAAHnF,EAAkBsD,WAC3B8G,EAAO9J,EAAA+J,MAAPrK,EAAAsK,UAEArM,EAAA,EAAOuE,EAAAxC,EAAPkK,WAAA9L,OAAAH,EAAAuE,EAAAvE,IAAA,CACA,GAAAmH,GAAApF,EAAAkK,WAAAjM,GACD4K,EAAAzD,EAAAmF,WAAAvK,EAAAuK,WACDvB,EAAA5D,EAAAkF,UAAAtK,EAAAsK,UACDE,EAAOpF,EAAAqF,YAAPC,EAAAtF,EAAAuF,YAbC,IAAIX,GAAUnB,GAAKmB,GAAWnB,EAAE2B,GAAOJ,GAAUpB,GAAKoB,GAAWpB,EAAE0B,EAAM,CAiB1E,GAAAtF,EAAAD,WAAAgF,EAAAhJ,MACA,MAAA,OACIyJ,IAAMtK,EAAAA,WAAeN,EAAAA,SAAzB,MACCmK,UAdO,IAAI/E,EAAGD,WAAWgF,EAAI7G,UAAY8B,EAAGD,WAAWgF,EAAIU,MAgB5D,MAAQ1N,UACP,IAAOiI,EAAAD,WAAPgF,EAAAW,SADD,MAEM,QAIL,MAFK,UAKLC,mBAAA,SAAAzK,GAGA,GAAAsK,GAAOtK,GAAK2J,EAAAA,OAAAA,EAA0B3J,OAAtC6E,UAAA,GACAgF,EAAAnO,KAAA8C,KAAAE,QAAAqF,UAED,OArlBuBuG,GAAAzN,QAAAgN,EAAAhJ,QAAA,EAukBf,QAgBT6J,EAAW7N,QAAAgN,EAAAc,WAAW,EACrB,WACIC,EAAAA,QAAerB,EAAAA,WAAkB,GAArCe,EAAAzN,QAAAgN,EAAAU,QAAA,EACI,WACGK,EAAAA,QAAWjF,EAAAA,WAAW,EAAE,OAAe2E,EAAAzN,QAAAgN,EAAAgB,QAAA,GAAAP,EAAAzN,QAAAgN,EAAAiB,QAAA,GAAAR,EAAAzN,QAAAgN,EAAAkB,YAAA,EAC7C,SACMT,EAAPzN,QAAAgN,EAAAnI,OAAA,EAXQhG,KAAKiO,0BAA0B3J,GAevC,MAGC4K,UAAQjN,WAVT,IAAI,GA1lBmBiN,GAAAlP,KAAA6N,aAAA,GAAA,GA0lBf5L,EAAE,EAAGuE,EAAE0I,EAAQ9M,OAAQH,EAAEuE,EAAGvE,IAcrCuL,IAAO0B,EAAAjN,GAAAgI,UAAW,OAAA,CAEnB,QAAA,GAGG5J,YAAOuF,WAVR,IAAI,GAnmBmBsJ,GAAAlP,KAAA6N,aAAA,GAAA,GAmmBf5L,EAAE,EAAGuE,EAAE0I,EAAQ9M,OAAQH,EAAEuE,EAAGvE,IAcrCqN,EAAAA,GAAWC,SAAA,IAIXC,MAAAA,WAGCxP,KAAI+G,aACJ,KACC1G,EAAAL,KAAA4F,MAAA6J,KAAA,MAAAjC,QACA,MAAA9N,MAGC4P,UADsG,WAEtG,MAAAtP,MAAA8C,KAAA4M,YAAA1P,MAGAwP,UAAI,SAAUrF,EAAAA,GAEbnK,KAAA8C,KAAAiG,SAAA,2CAAA4G,EAAAC,EAAA5P,KACD,IAAA+G,GAAKjE,KAAKqH,KAAAA,OACV,KAAAnK,KAAA2E,KAAA8B,aAGA,GAAAkJ,EAAA,CACD,GAAAC,GAAUzF,EAAa0F,kBAAvB,IAAA9I,EAAA8I,gBAAA5H,KAAAjI,KAAA8C,KAAA6M,EAAA3P,MACA,MAGA,IAAAA,KAAK8C,KAAKgN,WAAYC,CACtB1P,GAAEL,KAAK4F,KAAMwE,aAAc/B,KAC3B,MAECrI,MAAA8C,KAAAqH,WAAA6F,aAEDjJ,EAAAkJ,eACAjQ,KAAIkQ,cAEFlQ,KAAA8C,KADyFqH,WACjFnK,KACR+G,EAAAoJ,SACD9P,EAAAA,OAAOuF,EAAMwK,SAAb,UAA8B/H,KAAL1D,KAAgB4F,IAAzCxD,EAAAsJ,QAECrQ,KAAA8C,KAAAgN,YAAAC,UAAA/P,KAAA2E,KAAAU,IACAhF,EAAAL,KAAA4F,MAAAwE,SAAArD,EAAAsB,WAAAkC,QACE8F,GAAYC,EAAAA,YACdvJ,EAAAwJ,WAAAtI,KAAAjI,KAAA8C,KAAA9C,UAIA+G,IAAAA,KAAKyJ,KAAAA,aAAkBxQ,KAAvB,CACA,GAAA+G,EAAA8I,kBAAA,IAAA9I,EAAA8I,gBAAA5H,KAAAjI,KAAA8C,MAAA,EAAA9C,MACD,MApqBqBK,GAAAL,KAAA4F,MAAAwK,YAAArJ,EAAAsB,WAAAkC,QA0pBjBxD,EAAKoJ,SAgBb9P,EAAAgQ,OAAAtJ,EAAAuJ,SAAA,UAAA,GAAAvJ,EAAAsJ,QA1qByBrQ,KAAA8C,KAAAgN,YAAAC,UAAA,KAgqBrB/P,KAAK8C,KAAKqH,WAAa,KAc1BsG,GAAkB1J,EAAAyJ,cACjBzJ,EAAKyI,aAALvH,KAAqBjI,KAArB8C,KAAA9C,QAMAuG,SArrBuB,WAwrBvBvG,KAAAwP,WAAa1M,GAAKqH,IAGnBuG,iBAAe,WACd1Q,KAAAwP,WAAA,GAAA,IAGAQ,WAAUrL,WAET3E,KAAAwP,WAAA,GAAA,IAGCmB,SAAA,WACD,MAAK3Q,MAAL8C,KAAAqH,aAAAnK,MALA0Q,cAAA,WAUD,GAAAnK,IAASrB,EACRgB,GAAS,CACT,IAAAlG,KAAA2E,KAAAoF,SACD,OAAI7D,KAASpD,KAAAE,QAAA4N,iBACZ,IAAA,GACArK,GAAA,EACAL,GAAA,CACD,MACC,KAAA,GACAK,EAAAL,GAAA,EAIe,OAAhBlG,KAAIwF,SACHU,GAAKV,GADNU,IAIClG,KAAA6Q,eACAxQ,KAAEmN,SA5tBoBjH,GA+tBxBvG,KAAAuG,YAIAuK,WAAAA,SAAAA,GACDtL,GACAxF,KAAAwF,WAAA,EACEnF,EAAAL,KAAA4F,MAAAwE,SAAApK,KAAA8C,KAAAE,QAAAqF,WAAA0I,WAEA/Q,KAAMwF,WAAK+B,EACVyJ,EAAAA,KAAOpL,MAAKH,YAAazF,KAAC8C,KAAAE,QAAUiO,WAAiBF,WAKtDD,0BAAA,WAIA,GAAAE,EACC,KACCE,KAAItQ,cAGJ,MAFDoQ,GAAIE,KAAMzL,YAAMzF,KAAA2E,KAAAsM,eAAAjR,KAAA2E,KAAA8B,aACf0K,KAAAA,YAAAA,GACAH,CAGA,IAAA/O,GAAAuE,EACD8B,EAAAtI,KAAAsF,UACD8L,GAAIA,EACHJ,GAAA,CACA,KAFD/O,EAAA,EAEOuE,EAAA8B,EAAK6I,OAAAA,EAAAA,EAAelP,IAAA,CAC1B+O,GAAAA,GAAM1I,EAAArG,GADAiP,EAAAtQ,EAEAkQ,6BACAtF,IAANwF,IACAG,GAAA,IAEI1L,IAALyL,IACAE,GAAA,GAYC,MApBAJ,KAWFI,IAVaD,OAed3F,GAEExL,KAAI8L,eAAJN,KAAAwF,GACAhR,KAAIyF,WAAiB,IAAZA,EACRuL,GAOAK,mBAAA,WAGCvF,GAAAA,GAAEwF,EAAAA,CACF,IAAAtR,KAAIuR,UAUJ,IARCvR,KAAAwR,MAAQ1F,SAAExG,GACVU,EAAAd,OAAOO,YAAc7E,GACrBoF,EAAArB,KAAAsM,cACLjL,EAAAyL,SAAA,GAAA,GAAA,KAIK3F,EAAA9L,KAAAkF,OACGqM,GAAAA,CACHzF,EAAAA,YAAU,EACV,IAAAyF,IAAA,CACDzF,KAAAA,EAAIA,EAAE5G,EAAAA,EAANI,UAAAlD,OAAAH,EAAAuE,EAAAvE,IAAA,CACA,GAAArB,GAAAkL,EAAAxG,UAAArD,EA1BF,KA2BOrB,EAAA6E,YAAA7E,EAAA+D,KAAA8B,eAAA7F,EAAA+D,KAAAsM,aAAA,CAGNM,GAAoBvL,CACnBA,QAGDuL,GACAzF,EAAAA,SAAS5G,GAAT,GAAA,GAEC4G,EAAE2F,EAAAA,WAWH,KAPGC,KAAAA,YAAY,GACZ1R,KAAAwR,MAAA,SAAAxL,GACAA,EAAAsL,YAAA,GACDtL,EAAAyL,SAAA,GAAA,GAAA,KAGD3F,EAAA9L,KAAAkF,OACD4G,GAAA,CAh0BsBA,EAAA2F,SAAA,GAAA,GAAA,EAszBrB,IAAIC,IAAY,CAanBD,KAAAA,EAAAA,EAASjL,EAAAsF,EAAAxG,UAAAlD,OAAcwN,EAAAA,EAAAA,IACtB,GAAA9D,EAAAxG,UAAArD,GAAAwD,WAAAqG,EAAAxG,UAAArD,GAAAuD,UAAA,CACFkM,GAAA,CACE,OAGC5F,EAAAwF,WAAAI,GACD5F,EAAAA,EAAA5G,SAKAuM,QAAA,SAAAT,EAAApB,EAAAjD,GAGC,GAAA5F,GAAA/G,KAAA8C,KAAAE,OACDhD,MAAA2E,KAAA8B,cAIGzG,KAAAyF,YAAAuL,IAKFpB,GAAA7I,EAAA4K,gBAAA,IAAA5K,EAAA4K,cAAA1J,KAAAjI,KAAA8C,KAAAkO,EAAAhR,QARoB,GAAjB+G,EAAK6K,YAAiBZ,GAa1BhR,KAAIgR,KAAMQ,MAAA,SAAAxL,GACT,GAAIe,EAAKoJ,UAGT9P,MADC2F,GAAAyL,SAAA,GAAA,GAAA,IACM7L,IAKP5F,KAAAyF,UAAKmK,EATNoB,GAaCjK,EAAIA,SACH/G,KAAA8C,KAAAgN,YAAA+B,UAAsBC,KAAYnN,KAAKA,KAExCtE,EAAAA,KAAEuF,MAAFwE,SAAagG,EAAYrJ,WAAKsB,UAE9BsE,GAAY,IAARA,EAAQ5F,YACX/G,KAAAqR,qBAEIzB,GAAc7I,EAAKgL,UACvBhL,EAAAA,SAAAkB,KAAAjI,KAAmB8C,MAAnB,EAAA9C,QAv3BqB+G,EAAAoJ,SA+2BrBnQ,KAAK8C,KAAKgN,YAAYgC,YAAY9R,KAAK2E,KAAKU,KAc9ChF,EAAAL,KAAA4F,MAAAwK,YAAArJ,EAAAsB,WAAAgC,UAEIsC,GAAwB,IAAnBhI,EAAKsM,YACbjR,KAAAqR,qBAEDzB,GAAO7I,EAAaiK,UAl4BGjK,EAAAgL,SAAA9J,KAAAjI,KAAA8C,MAAA,EAAA9C,UAw4BvBmG,OAx4BuB,SAAA6K,GA24BvB,MAAAhR,MAAO2E,KAAKc,aA34BWzF,KAAAyF,UA84BxByE,KAAQuH,SAAW,IAAXT,GAAW,GAAA,IATnBgB,aAAc,WAcb,MAAIhS,MAAAmG,QAAAnG,KAAAyF,YAGHwM,WAAK9E,WACL,MAAInN,MAAAyF,WAGHyE,OAAA,WACA,QAAAlK,KAAA2E,KAAAuF,QAGDgI,aAAU,WACV,IACA,GAAAnL,GAAKoG,KAAAA,KAAAA,OACLnN,MAAA8C,KAAAiG,SAAA,2BAAA/I,MAj6BsBA,KAAAmN,kBAAAhN,uBAu5BlB,IAAS4G,EAAKoL,WAAWlK,KAAKjI,KAAK8C,KAAM9C,QAc9CA,KAAImN,kBAAmBiF,iBAGtBpS,KAAA8C,KAAAiG,SAAA,+BAAA/I,OAED,MAAI+G,GACJ/G,KAAKoS,KAAAA,WAAgBlL,4BAAkBG,GACtCrH,KAAAmN,kBAAmBjN,oBAAAgI,QAAA,GAAAxI,MAInB6P,QAAA,SAAQ6C,EAAAC,GACR,GAAArS,KAAAiK,YAAAmI,EAVA,WAWDpS,MAAKiK,KAAAA,SAAYmI,kCAAjBA,EAAApS,KAGAA,MAAI+G,KAAKoJ,SAAU,0BAAAiC,EAAApS,KAClB,IAAA+G,GAAIqL,KAAStP,KAAAE,OACZ,KAAAoP,GAAUtC,KAAAA,WAAV/I,EAAgCM,eAEhC,WADArH,MAFD8C,KAEKiG,SAAA,6CAAAqJ,EAAApS,KAGL,KAAA+G,EAAAuL,gBAAA,IAAAvL,EAAAuL,cAAArK,KAAAjI,KAAA8C,KAAAsP,EAAApS,MAAA,CAKDA,KAAAiK,UAAYsI,EAGZxL,EAAIoJ,UACHiC,EACApS,KAAI8C,KAAIb,YAAOiN,UAAQ9M,KAAQH,KAA/BoD,KAECrF,KAAA8C,KAAAgN,YAAA0C,YAAAxS,KAAA2E,KAAAU,KAID,IAAAkN,KAAUpI,KAAW6F,KAAAA,QAArB,OAAAhQ,KAAAsF,WACAtF,KAAA8F,YACDuM,EAIC,IAHDrS,KAAIoS,OAAAA,GAGHpS,KAAAiK,WAAAjK,KAAAkF,QAAA6B,EAAA0L,aAEA1L,IAAAA,GADIA,GAAK2L,KAAU7E,aAAA,GAAA,GACd6E,EAAAA,EAAAA,EAASzK,EAAK7F,OAAWgQ,EAAAA,EAAAA,IAC9BlD,EAAAjN,GAAA0Q,kBAQDhD,IAJA5I,EAAOkJ,eAAPjQ,KAAA8C,KAAAqH,aAAAnK,KAAA8C,KAAAqH,WAAA6E,aAx9BuBhP,KAAA8C,KAAAqH,WAAA6F,aA49BvBL,GAAQA,KAAShL,KAAjBuF,QAAA,OAAAlK,KAAAsF,YAAAtF,KAAA8F,WAEC,WADD9F,MAAKkS,cAGJnL,GAAQ2L,UACR3L,EAAA2L,SAAAzK,KAAAjI,KAAA8C,KAAAsP,EAAApS,QAIF4S,WAAAA,WACC,MAAA5S,MAAAiK,WAGA/D,OAAI,SAAU2M,GACbC,GAAa,IAAbA,GACA9S,KAAK8C,WAAc9C,KAAA2E,KAAAuF,SAAoByF,KAEvB,OAAboD,KAAJ7N,QAAiByK,IAGhB3P,KAAAuP,QAAAI,IAGAiD,eAAUC,SAAQG,EAAAA,GAIlBhT,KAAA8C,KAAA+P,QACDC,aAAK9S,KAAL8C,KAAA+P,OACC7S,KAAA8C,KAAKA,SAAL,mBAA6B9C,KAAU8C,KAAA+P,OAEtCE,IAAAA,GAAKxM,IACL,QAHiB/H,GAIlB,IAAA,SAEA,KAjBD,KAAA,SAmBAwB,KAAK8C,KAAKiG,MAAViK,WAAmB,WAjgCID,EAAAjQ,KAAAiG,SAAA,8BAq/BrBgK,EAAK7M,QAAO,IAef2K,EACC,MACA,KAtgCuB,WAy/BtB7Q,KAAK8C,KAAK+P,MAAQG,WAAW,WAe/BL,EAAAA,KAAAA,SAAkB,gCACjBI,EAAIxM,YACH0M,EACA,MACD,SACA,KAAK,gBAAc7Q,EAEjB8J,KAAAA,KAAMqD,SAAQ,yBAAd/Q,EAAAyU,EAAAjT,KAAA8C,KAAA+P,QAGFhC,aAlhCuB,WAqgCvB7Q,KAAKkG,QAAQlG,KAAKiK,YAiBlB0I,iBAAIO,WACJ,GAAmB,OAAnBlT,KAAIkT,OAIH,IAJD,GAGChH,GAAKsB,KAALtI,OAAcI,UACRrD,EAAA,EAAIiR,EAAAA,EAAAA,OAAejR,EAAAuE,EAAAvE,IACzBiK,EAAAjK,KAAAjC,MAAAkM,EAAAjK,GAAAgI,WACAiC,EAAAjK,GAAK+P,SAAAA,IAKLmB,SAAGC,SAAQ9O,GAEV,GAAA4O,GAAaG,KAARtE,mBAAyBvM,EAC7B4Q,IAAA,aAAAA,EAEDpT,KALD6Q,eAMC7Q,KAAAwN,YACA,IAAA,aAAO0F,EAERlT,KAAAgS,eACDhS,KAAAwN,YACM8F,CA7iCiBtT,KAAA0Q,eAiiCtB,IAAI0C,GAAOpT,KAAK4F,KAAK2N,qBAAqB,IAe5CC,KAAAA,EAAAA,GAMC,OAAA,CAtjCuBhR,SAAA6Q,MAAAhR,SAAAG,QAAAzB,QAAA,IAAA,GAqiCpBqS,EAAK,GAAG5F,QAsBVlJ,EAAAgP,kBAGAE,YAAA,SAAAlP,KAC8CmP,WAAA,SAAAnP,GAEjD,GACGoP,GADHC,GAAA,CAGI,QAAIrP,EAAK2F,OACT,IAAA,KACD,IAAA,KACCjK,KAAAiK,WAAAjK,KAAA6Q,cACD,MAEA,KAAA,KACC,IAAA,KACA7Q,KAAAiK,WAAAjK,KAAA6Q,cACA,MAOC,KAAA,IACD7Q,KAAA0Q,eACD,MAAS,KAAA,GACR1Q,KAAIkF,QACHlF,KAAAkF,OAAK2L,OAEV,MACK,KAJD,IAKC7Q,KAAKkF,WACLlF,KAAA6Q,eACD7Q,KAAAwN,SACQxN,KAAAkF,QAAAlF,KAAAkF,OAAAA,QACRlF,KAAKkF,OAAK+E,OAET,MACA,KAHD,IAICjK,KAAKsF,YAAakI,KAAlBlI,YAAAtF,KAAA2E,KAAAuF,OAGFlK,KAAAsF,WAAStF,KAAAsF,UAAA,GAAAkI,SAFPxN,KAAA6Q,eACD7Q,KAAAwN,QAGA,MACCkG,KAAAA,IAEL,IADKA,EAAA1T,KAAAiM,iBACLyH,GAAAA,EAAAzJ,WAAAyJ,EAAApO,WACIoO,EAAKA,EAADpO,UAAaJ,EAAbI,UAA4BJ,OAAOA,IAGnCwO,GAAK1T,KAAAkF,QAAAlF,KAAAkF,OAAAA,SACRwO,EAAIlG,KAAJtI,QAEDwO,GACDA,EAAKlG,OACJ,MACCkG,KAAAA,IACA,GAFD1T,KAEOiK,WAAAjK,KAAAsF,UACNoO,EAAIxE,KAAAA,UAAerB,OAGlB,KAAA,GADA6F,GAAMxE,KAAWlD,aAAAA,GAAjB,GACI0H,EAAJxE,EAAS9M,OAAA,EAAAH,GAAA,KAAEyR,EAAAxE,EAAAjN,GAAA+J,kBAAF/J,KAGXyR,GACCA,EAAAA,OAED,MACD,SACCC,GAAAA,EAIFA,GACCrP,EAAAA,kBAIFsP,YAAAA,SAAatP,KAMbuP,SAAAA,SAAUvP,GAGT,GAAAyC,GAAIA,KAAOjE,KAAAE,OACQ,SAAdsB,EAAMwP,MAAgC,YAAdxP,EAAMwP,MAC7B/M,EAAKgN,QACThN,EAAAA,OAAAkB,KAAAjI,KAAiB8C,KAAjB9C,MAEDA,KAAI8C,KAAA4M,WACHrP,EAAAA,KAAEyC,KAAA4M,UAAA9J,MAAFwK,YAAArJ,EAAwCA,WAAAiN,SAEzChU,KAAA8C,KAAA4M,UAAA,KACA3I,EAAIA,SACH1G,EAAAA,OAAA0G,EAASA,SAAA,SAAT,GAAAA,EAAuCA,SAE7B,SAAAzC,EAAMwP,MAAiB,WAAvBxP,EAAuBA,OAElCtE,KAAI8C,KAAA4M,WAAA1P,KAAuB8C,KAAA4M,YAAA1P,OAC1BA,KAAA8C,KAAAiG,SAAA,4CAAA/I,KAAgE8C,KAAA4M,WAChErP,EAAAA,KAAEyC,KAAA4M,UAAA9J,MAAFwK,YAAArJ,EAAwCA,WAAAiN,UAEzChU,KAAA8C,KAAA4M,UAAA1P,KACK+G,EAAKkN,SACTlN,EAAAA,QAAAkB,KAAAjI,KAAkB8C,KAAlB9C,MAEDK,EAAAA,KAAEyC,KAAA4M,UAAA9J,MAAFwE,SAAArD,EAAqCA,WAAAiN,SACrCjN,EAAIA,SACH1G,EAAAA,OAAA0G,EAASA,SAAA,SAAT/G,KAAmC2E,KAAAU,IAAnC0B,EAAkDA,UAOrDyK,MAAAA,SAAO0C,EAAApG,GAEN,GAAA3G,IAAIA,CACJ,KAAI2G,IAAJA,KAEK3G,KADJA,EAAAA,EAAM+M,QACe/M,SAAjBA,GACH,MAAAA,EAGF,IAAAnH,KAAGsF,UACF,IAAA,GAAIrD,GAAIA,EAAAA,EAAJjC,KAASwG,UAAOlB,OAAUlD,EAAAA,IAEzB+E,KADJA,EAAAA,KAAM7B,UAAArD,GAAAuP,MAAA0C,GAAA,IADPjS,KAOD,MAAAkF,IAGDwE,aAAAA,SAAcuI,EAAApG,GAEb,GAAAA,IAAkB,IAAfA,EAAeoG,MACjB,OAAA,CAGD,KADA,GAAApI,GAAIA,KAAI5G,OACR4G,GAAW,CACV,IAAG,IAAHoI,EAAGA,GACF,OAAA,CAEDpI,GAAAA,EAAIA,OAEL,OAAA,GAGDqI,OAAAA,WAGC,GAAKnU,OAASA,KAAK8C,KAAKsR,KACvB,KAAA,2BAED,OAAApU,MAAOkF,OAAAmP,YAAArU,OAGRqU,YAAAA,SAAaC,GAEZ,GAAApI,GAAIA,KAAK5G,SACT,IAAI,IAAJ4G,EAAIA,OAAkB,CACrB,GAAAoI,IAAIA,EAAOpI,GACV,KAAA,4BAED,OAAAlM,MAAO4G,iBAER0N,IAAIA,KAAOxR,KAAAqH,YACVmK,EAAAA,aAEDtU,KAAI8C,KAAAE,QAAAmN,UACHmE,EAAIA,WACHtU,KAAA8C,KAAAgN,YAAAgC,YAAAwC,EAAkCA,KAAAjP,KAE9BiP,EAAGrK,WACPjK,KAAA8C,KAAAgN,YAAA0C,YAAA8B,EAAkCA,KAAAjP,MAGpCiP,EAAAA,gBAAA,GACAtU,KAAGyI,IAAA6L,EAAWA,IAEbtU,KAAAyI,GAAA4L,YAAAC,EAAoBA,GAErB,KAAA,GAAIrS,GAAIA,EAAAA,EAAJiK,EAAS1F,OAAKpE,EAAAA,EAAlBH,IACC,GAAAiK,EAAIA,KAAAoI,EAAe,CAClBtU,KAAAsF,UAAAiP,OAAAtS,EAAA,EAEA,SAKH2E,eAAAA,SAAgB4N,EAASA,GAExBxU,KAAA8C,KAAAiG,SAAA,wBAAA/I,KAAAwU,EACA,IAAA1R,GAAIA,KAAOA,KACXoJ,EAAIA,KAAK5G,SACT,IAAA4G,EAAS,CACR,IAAA,GAAIjK,GAAIA,EAAAA,EAAJiK,EAAS1F,OAAKpE,EAAAA,EAAlBH,IAA4BuE,CAC3B,GAAA8N,GAAIA,EAAKpI,EACJoI,KAAOxR,EAAKqH,YAAesK,GAC/BH,EAAAA,aAEDtU,KAAI8C,KAAAE,QAAAmN,UAA6BsE,IAChCH,EAAIA,WACHtU,KAAA8C,KAAAgN,YAAAgC,YAAAwC,EAAkCA,KAAAjP,KAE9BiP,EAAGrK,WACPjK,KAAA8C,KAAAgN,YAAA0C,YAAA8B,EAAkCA,KAAAjP,MAGpCiP,EAAAA,gBAAA,EAAAG,GACAzU,KAAGyI,IAAA6L,EAAWA,IAEbjU,EAAAA,KAAAA,EAAQA,KAAEoI,KAAV0L,SAMFnU,KAAAsF,UAAA,KAEKkP,IAGLxU,KAAA8F,YAAA,EACA9F,KAAA8G,WAIF4N,SAAAA,SAAUvP,GACTnF,KAAA2G,UAAcxB,MAACA,KAGhBwP,OAAAA,SAAQC,GACP,KAAA,gCAGDC,eAAAA,SAAgBxO,GAEf,GAAI,OAAJrG,KAAIkF,OACH,KAAA,2BADD,KAEUlF,KAAE2E,KAAAuF,OACX,KAAA,4CAID,IAAA7D,EAAGA,CACF,GAAA0M,GAAIA,KACJ+B,EAAIA,uBAAY9U,KAAyB8C,KAAA0B,MAAAuQ,KAAA,MAEzC,IAAKjS,KAAK0B,KAAMwQ,GACfjC,MAAAA,KAAKjQ,MAAK0B,KAAMyQ,EAAOH,SAAvBpV,EAAAsG,EAAAkP,GAGC,GAFDnC,EAAAA,KAAAvO,MAAUuE,OAAS+L,GACnB/B,EAAG/M,KAAAA,SAAH,oBAAiBtG,EAAAsG,EAAAkP,GAChBlP,IAAM+M,EACN,KAAA,wBAED1M,GAPD4B,KAAA8K,EAAAjQ,KAAAkD,EAAAkP,KAWDlV,KAAA4G,iBACF5G,KAAAkS,gBAiBEiD,aAAW,SAAXC,EAAA/O,GACAvD,GAAAA,GAAKiG,KAASjG,IAEb,IADDA,EAAGsS,SAAAA,sBAAepV,KAAAoV,GACX,KAANA,EACA,KAAA,4BAED,IAAAC,GAAGD,EAAHlT,MAAqBY,EAAAE,QAAA0I,iBACpB,IAAM,KAAN2J,EAAM,GACN,KAAA,kDAED,IAAAC,GAAQhQ,EAAAA,OACP,IAAAtF,KAAIsF,UACH,IAAA,GAAIgH,GAAAA,EAAAA,EAAQtM,KAAKsF,UAALlD,OAAZH,EAAAuE,EAAAvE,IAAA,CACA,GAAAqK,GAAU3H,KAAKU,UAAfpD,EACC,IAAAqK,EAAG+I,KAAQjT,MAARkT,EAAsB,CACxB,GAAA,IAAAD,EAAAjT,OAGAiE,EAAK4B,KAAGqE,EAAM3H,EAAKuF,UAEf6I,KAAAA,EAAOpO,KAAXuF,QAAA,OAAAoC,EAAAhH,eAAAkG,KAAAc,EAAAhH,UAmBAgH,EAAM6I,KAAAA,EAAaE,EAAAA,UAEpB/I,EAAA6I,aAAAE,EAAAzV,KAAAkD,EAAAE,QAAA0I,kBAAArF,OArBC,CACAvD,EAAAiG,SAAA,yCAAA/I,KAAAoV,EAAA9I,EACA,IAAAyG,GAAA/S,IAGCsM,GAAG4I,eAAK,SAAAlP,EAAAkP,GAEP7O,GACAL,EAAAA,SAAKmP,sCAAuCzJ,EAAAA,EAAmBrF,GAC/DA,EAAI4B,KAAAnF,EAAAwJ,EAAA,UACJxJ,EAAAA,aAAgBuS,EAAAzV,KAAAkD,EAAAE,QAAA0I,kBAAArF,KAEhBvD,EAAAyS,WAAA,kDAAAxC,EAAAqC,GATF/O,EAAA4B,KAAAnF,EAAAwJ,EAAA,YAoBF,QAMFjG,EAAA4B,KAAAnF,MAAA0I,GAAA,WAAA8J,EAAA,IAAAD,EAAAjT,QACAU,EA54CuByS,WAAA,mBAAAD,IAg5CvBE,UAAStQ,WAER,GAAgBP,OAFjB3E,KAEMkF,OACL,KAAA,2BACA,KAAAlF,KAAA2E,KAAAuF,OACD,KAAKhE,uCAELlG,MAv5CuBkG,QAAA,GAs5CvBlG,KAAK4G,kBAGN6O,cAAe,SAAS1K,EAAQ2K,GAK/B,GAAA5S,GAEC6S,KAAO7S,KADPiE,EAAOjE,EAAKE,QAGf2S,EAAA7S,EAAAgN,WAkBG,IAbH/E,EAAA7F,OAAAlF,KAKS,OAFPA,KAEOsF,UACNtF,KAAAsF,aACQA,GAEPtF,KAAAsF,UAAAlD,OAAA,GACD/B,EAAAL,KAAAsF,UAAAtF,KAAAsF,UAAAlD,OAAA,GAAAwD,MAAAwK,YAAArJ,EAAAsB,WAAAqC,SAGAgL,EAAA,CACC,GAAAE,GAAMvV,EAAAwV,QAAAH,EAAA1V,KAAAsF,UACN,IAAAsQ,EAAA,EACD,KAAKtQ,wCAELtF,MAAAsF,UAAAiP,OAAAqB,EAAA,EAAA7K,OACA/K,MAAKsF,UAAUoB,KAAKqE,EASpB,IAAA+K,GAAAhT,EAAAgT,gBA2DA,IA1DH/O,EAAAoJ,SAAAwF,EAAAI,cAAAD,GAGIH,EAAA5F,YAAAhF,EAAApG,KAAAU,MACDvC,EAAI6S,WAAKK,GAERL,EAAAK,aAAAjL,EAAApG,KAAAU,MACD0F,EAAAA,UAAAA,GAEHA,EAAAd,UAAA5J,EAAAwV,QAAA9K,EAAApG,KAAAU,IAAAsQ,EAAAM,kBAAA,EACGlL,EAAMtF,UAAApF,EAAAwV,QAAA9K,EAAApG,KAAAU,IAAAsQ,EAAAO,kBAAA,IAKLnL,EAASoF,KAAAA,WACRwF,EAAAA,WAAA5K,EACAhE,EAAAoJ,UACDwF,EAAA5F,UAAAhF,EAAApG,KAAAU,MAGA0F,EAASoF,KAAAA,QACRwF,EAAAA,UAAA5K,EACAhE,EAAAoJ,UACDwF,EAAAK,WAAAjL,EAAApG,KAAAU,MAGAsQ,EAAKQ,WAAL,IAAepL,EAAApG,KAAfuB,OACA6E,EAAAd,WAAAlD,EAAAoJ,SACDpF,EAAAA,UAAOtF,EAAcsF,KAAOpG,KAA5BoG,EAAOtF,WAAqC,IAAvBsF,EAAOpG,KAAKwB,OAWhC4E,EAAAtF,WAAAsB,EAAAoJ,SACDwF,EAAA9D,UAAA9G,EAAApG,KAAAU,MAMA0B,EAAKkD,gBAALc,EAAA7D,aAAAlH,KAAKiK,WAAY,GAWjBc,EAAAtF,WAAW,GAAAsB,EAAA6K,WAET9F,IADD,GAAAA,GAAKA,KACFwF,GACFxF,EAAAtG,WACDsG,EAAAA,YAAA,GAEDA,EAAAA,EAAA5G,MAKD,OADCpC,GAAAsT,eACDpW,KAAA8G,SAAOiE,GAGRmC,SAAU,SAASmJ,EAAKX,GA0BtB,GAAS,gBAAJW,GAAgC,KAAA,yBAAAA,CACrC,IAAAA,GAAA,IAAAA,EAAAjU,OAAA,CAEA,GAAOiU,YAAKZ,cACZ,MAAAzV,MAAAyV,cAAAY,EAAAX,EAEkBW,GAAAjU,SAClBiU,GAAQA,GAKT,KAAA,GAHAC,GAAIA,KAAWxT,KAAAyT,cAAA,GAEfC,EAAIA,KACCvU,EAAIA,EAAEuE,EAAN6P,EAAS7P,OAAMpE,EAAAA,EAAQH,IAA5B,CACC,GAAA0C,GAAIA,EAAO0R,GACXtL,EAAIA,KAAS0K,cAAA,GAAmBxQ,cAAAjF,KAAAA,KAAuB8C,KAAvB6B,GAAnB+Q,EACTc,KACHA,EAAAA,GAGD7R,EAAIA,UACHoG,EAAAA,SAAApG,EAAgBA,SAAhB,MAIF,MADA3E,MAAA8C,KAAAyT,aAAAD,GACAE,IAGDC,OAAAA,SAAQJ,GAEP,MADArW,MAAA8C,KAAAyS,WAAA,8DACAvV,KAAOkN,SAAAmJ,EAAA,OAGRK,WAAAA,SAAYC,GACX,GAAA5D,GAAIA,IAIJ,IAHA/S,KAAA4G,gBAAA,GAAA,GACA5G,KAAAmN,kBAAAhN,sBAEAwW,EAAGA,eAAYC,CACd,GAAA3D,GAAIA,EAAK0D,cAGa5D,OAFtB4D,GAAAA,eAAA,EACA3W,KAAA8C,KAAA+T,QAAA,0CAAkB5D,OAClBD,YAAAA,WAAWD,EAAU2D,WAAAC,IAAA1D,GAErB,GAAA6D,GAAAH,EAAAI,QACDC,EAAAL,EAAAM,MACAnC,EAAIgC,uBAAJ9W,KAAA8C,KAAA0B,MAAAuQ,KAAA,MAAA,IAAA/U,KAAA2E,KAAAU,IAAArC,EACCgU,EAAWL,UAAAA,KAAYM,KADxBjU,QAAAkU,aAAAP,GAAAI,QAECjC,SAAYnQ,EAAAwS,EAAAC,GAGX,GAAAC,GAAAtE,EAAAjQ,KAAAwU,MACJtU,EAAA+P,EAAAjQ,KAAAE,OACI+P,GACC/P,KAAAA,MAAU+P,OAGX/P,EAAAuU,YACA5S,EAAA3B,EAAAuU,YAAAtP,KAAAjI,KAAA2E,EAAA3E,KAAAwX,UAIA7S,GAAAA,EAAA8S,eAAA,OACA9S,EAAA,gBAAAA,GAAA+S,EAAArX,EAAAsX,UAAAhT,EAAA+S,GAAA/S,EAAA+S,GAEG/S,EAAAA,QAAQA,IAA6BtE,IAA9BsE,EAAmBvC,QAC5B2Q,EAAA7F,SAAAvI,EAAA,MAEAoO,EAAAA,KAAK7F,MAASvI,WACdmS,GACD/D,EAAUuE,KAAVtU,EAAkB+P,EAAlBpO,EAAAwS,GAECL,EAAAA,KAAAA,SAAgB9T,WAAhB8R,GACA/B,EAAAjQ,KAAA0B,MAAAoT,QAAA9C,GAAA/B,GAAA,IACDA,EAAAA,KAAAuE,MAAUvO,EAGVgK,EAAA5F,kBAAA/M,iBACAC,EAAAwX,QAAAlT,IAAA,IAAAA,EAAAvC,SAGC2Q,EAAAzN,aACAyN,EAAAjM,WAGAmQ,MAAA,SAAAG,EAAAD,EAAAW,GAEFb,EAAAA,KAAO1B,WAAA,qBAA4BuC,EAAY,MAAAV,EAAA,KAAAU,GAC9Cd,GACAjE,EAAA9K,KAAUsN,EAAWxC,EAAAqE,EAAAD,EAAsBA,GAE1CH,EAAAA,KAAAA,MAAchU,QAAd8R,GAAA/B,GAAoCoE,IACpCpE,EAAA5F,kBAAAjN,oBAAAX,KAAA4X,EAAAjP,QAAA,GAAA4P,MAGAzX,GAAA0X,KAAA/U,IAGHgV,KAvoDuB,SAAAC,EAAAzZ,GAipDvB,GAAI0Z,EACJ,IAAGlY,OAASiY,EAAZ,CACC,IAAAjY,KAAAkF,OACA,KAAA,8BAEMsG,KAANhN,GAAA,QAAMA,IACNA,EAAA,QAEAA,IAAAA,GAAAwB,KAAAkF,OACAiT,EAAA,UAAA3Z,EAAAyZ,EAAAA,EAAA/S,MACD,IAAAiT,EAAIC,eAAJpY,MACA,KAAImY,2CAGH,IAAA,GAAAnY,KAAAkF,OAAAI,UAAAlD,OACDpC,KAAAkF,OAAAI,UAAAtF,KAAAkF,OAAAP,KAAAuF,UAAA,KACAlK,KAAIkF,OAAKA,WAAOI,MACVJ,CAEL,IADAgT,EAAKhT,EAAAA,QAAO+E,KAAZjK,KAAwBkF,OAAxBI,YACM,EACN4S,KAAM7X,gBAELL,MAAAkF,OAAMI,UAAAiP,OAAN2D,EAAA,GASF,GANClY,KAAAkF,OAAAuD,IAAAzI,KAAA2F,IACD3F,KAAAkF,OAAAuD,GAAA4L,YAAArU,KAAA2F,IAMA3F,KAAKkF,OAASiT,EADdA,EAAA5Q,cACA,OAAKrC,GACL,IAAIiT,QAEHA,EAAA7S,UAAAoB,KAAA1G,KACC,MACAmY,KAAAA,SAGA,IADDD,EAAK7X,EAAAwV,QAALoC,EAAAE,EAAA7S,YACC,EACA4S,KAAAA,gBAECC,GAAM7S,UAAAiP,OAAN2D,EAAA,EAAAlY,KACA,MACDmY,KAAAA,QAGA,IADDD,EAAK7X,EAAAwV,QAALoC,EAAAE,EAAA7S,YACC,EACA4S,KAAAA,gBAECC,GAAM7S,UAAAiP,OAAN2D,EAAA,EAAA,EAAAlY,KACA,MACDmY,SACA,KAAA,gBAAA3Z,MApBD2Z,GAAA7S,WAAAtF,KAwCA,IAdAmY,EAAA1P,KAGA0P,EAAA1P,GAAAS,SAAAO,cAAA,MACA0O,EAAA1P,GAAAiB,MAAAC,QAAA,OACAwO,EAAAxS,IACAwS,EAAa1P,GAAGiB,YAAMC,EAAtBlB,KAIAzI,KAAA2F,IACDwS,EAAA1P,GAAAe,YAAAxJ,KAAA2F,IAGC3F,KAAA8C,OAAAmV,EAAAnV,KAKCkD,KAHFhG,MAAIwR,MAAK1O,SAASmV,GACjBjS,EAAAlD,KAAAmV,EAAAnV,MACA,MAAK0O,GACJxL,sBAIFoS,GAAAhM,eAAA+L,IACAC,EAAAtR,SAECsR,EAAWtR,eAAXsR,IACAD,EAAArR,WA0CFuR,cAAW7M,GAOZ,IAAI8M,gBAAiBxT,MAAMC,QAG3BuT,gBAAeC,oBAAsB,SAASjI,EAAUkI,GACvD,GAAAC,GAAA,GAAAH,gBAAAhI,EAAAkI,EAEAC,OADAA,GAAAC,OACGA,EAAH3S,UAGD9F,uBAAAqY,eAAAC,oBAIAD,eAAe1Z,WACdoG,WAAA,SAAAsL,EAAAkI,OAEDhN,KAAA8E,IACEA,EAAIA,EAAAA,GAAAA,SAAa9E,UAAWxI,QAAAsN,UAE3BkI,EAAAnY,EAAA+E,UAAA/E,EAAAI,GAAAC,SAAA9B,UAAAoE,QAAAqN,OAAAmI,GAGDxY,KAAKsQ,SAAWA,EAAhBtQ,KAAAwY,WAAgBlI,EAChBtQ,KAAA+V,iBAAkByC,GAClBxY,KAAA+P,UAAKgG,KACL/V,KAAAgW,WAAiB,KACjBhW,KAAAiW,gBAAA,KACAjW,KAAAkW,gBAAA,MAGDnW,KAAA,SAAAtB,GAECE,MAAAC,UAAAkB,QAAAhB,MAAAC,WAAA,UACAJ,MAAAA,MAAMC,KAAUkB,YAEhB4Y,KAtByB,WAyBzB1Y,KAAA+V,cAAA,CAGA,IAAI1F,GAAShQ,EAAEgQ,OAAOrQ,KAAKsQ,SAAW,UAAtCtQ,MAAIqQ,UAAWA,GAAO,GACtBA,IACArQ,KAAIqQ,cAAQ,GAEXA,EAAAhQ,EAAAgQ,OAAArQ,KAAAsQ,SAAA,UACDD,KAAAA,WAASA,GAAcC,GACvBD,IACArQ,KAAIqQ,cAAQ,GAEXA,EAAAhQ,EAAAgQ,OAAArQ,KAAAsQ,SAAA,WACDD,KAAAA,gBAAkBA,EAAAA,EAAgBnO,MAAlC,QACAmO,IACArQ,KAAIqQ,cAAQ,GAEXA,EAAAhQ,EAAAgQ,OAAArQ,KAAAsQ,SAAA,WACDD,KAAAA,gBAAkBA,EAAAA,EAAgBnO,MAAlC,QACAmO,IACArQ,KAAIqQ,cAAQ,IAGZsI,MAhDyB,WAkD3BtY,EAAAgQ,OAAArQ,KAAAsQ,SAAA,UAAA,OAAAtQ,KAAA+P,UAAA,GAAA/P,KAAA+P,UAAA/P,KAAAwY,YACEnY,EAAAA,OAAAL,KAASsQ,SAAA,SAAgD,OAAnBtQ,KAAK+P,WAAP,GAAmC/P,KAAK+P,WAAW/P,KAAKwY,YAC5FnY,EAAAA,OAAAL,KAASsQ,SAAA,UAAyD,OAA7BtQ,KAAKgW,gBAA6B,GAAKA,KAAAA,gBAAiBwC,KAA7F,KAAAxY,KAAAwY,YACAnY,EAAAA,OAAAL,KAASsQ,SAAA,UAAsD,OAAzBtQ,KAAKiW,gBAAP,GAAyCjW,KAAKiW,gBAAgBrW,KAArB,KAAgCI,KAAKwY,aAElHrC,UAvDyB,SAAA9Q,GAyD3BhF,EAAAwV,QAAAxQ,EAAArF,KAAAiW,iBAAA,IACEjW,KAAIK,gBAAeqG,KAAKuP,GACvB5V,EAAAgQ,OAAK4F,KAAAA,SAAgBvP,UAArB1G,KAAAiW,gBAAArW,KAAA,KAAAI,KAAAwY,cAGDhG,YA9DyB,SAAAnN,GAgE3B,GAAAuT,GAAAvY,EAAAwV,QAAAxQ,EAAArF,KAAAiW,gBACE2C,IAAUvY,IACVL,KAAI4Y,gBAAWrE,OAAAqE,EAAA,GACdvY,EAAAgQ,OAAK4F,KAAAA,SAAgB1B,UAArBvU,KAAAiW,gBAAArW,KAAA,KAAAI,KAAAwY,cAGD3G,UAtEyB,SAAAxM,GAwE3BhF,EAAAwV,QAAAxQ,EAAArF,KAAAkW,iBAAA,IACElW,KAAIK,gBAAeqG,KAAKwP,GACvB7V,EAAAgQ,OAAK6F,KAAAA,SAAgBxP,UAArB1G,KAAAkW,gBAAAtW,KAAA,KAAAI,KAAAwY,cAGD1G,YA7EyB,SAAAzM,GA+E3B,GAAAuT,GAAAvY,EAAAwV,QAAAxQ,EAAArF,KAAAkW,gBACE0C,IAAUvY,IACVL,KAAI4Y,gBAAWrE,OAAAqE,EAAA,GACdvY,EAAAgQ,OAAK6F,KAAAA,SAAgB3B,UAArBvU,KAAAkW,gBAAAtW,KAAA,KAAAI,KAAAwY,cAGDK,YArFyB,WAsF1BA,OAAa,IAAbA,KAAAA,cAEC9S,OAxFyB,WAyF1BA,OACCgQ,aAAO/V,KAAA+V,aACNA,UAAAA,KAAchG,UACdA,WAAW/P,KAAK+P,UAChBiG,gBAAYhW,KAAK+P,gBACjBkG,gBAAAA,KAAiBC,kBAInBmC,cAAA7M,GASD,IAAAsN,UAAIA,MAAWhU,QAIfgU,UAAAA,QAAA,YAIAA,SAAAA,WAEC9T,WAAAA,SAAY+T,GAEX/Y,KAAAsX,MAAA,OACAtX,KAAA+Y,QAAAA,EACA/Y,KAAAgD,QAAA+V,EAAeA,QACf/Y,KAAAwE,MAAAuU,EAAaA,QACb/Y,KAAA6S,MAAA,KAEA7S,KAAAgZ,QAAAhZ,KAAewE,MAAAyU,IAAA,GAEfC,iBAAAA,OAKDC,MAAAA,SAAO9S,GACN,GACAU,IADIgS,KAAUA,QACVhS,KAAO/D,SAAX+P,EACCA,IACD/S,MAAAoW,eAAA,EACApW,KAAAuF,WAAA,EACAvF,KAAAmK,WAAA,KACAnK,KAAAoZ,UAAA,SAGI5N,KAAJzE,EAAIA,aACH/G,KAAAuV,WAAA,gDAEDxO,EAAIA,eAAA,IACH/G,KAAAuV,WAAA,yCACAxO,EAAAA,eAAA,GAMDA,EAAIA,aAAA1G,EAAoBA,GAAAK,SAAA9B,UAAAoE,QAAAqF,aACvBtB,EAAAA,WAAA1G,EAAkBA,UAAAA,EAAaA,GAAAK,SAAA9B,UAAAoE,QAAAqF,WAAbtB,EAAyDA,aAE5EA,EAAIA,eAAA1G,EAAsBA,GAAAK,SAAA9B,UAAAoE,QAAAkU,eACzBnQ,EAAAA,aAAA1G,EAAoBA,UAAAA,EAAaA,GAAAK,SAAA9B,UAAAoE,QAAAkU,aAAbnQ,EAA2DA,eAEhFA,EAAIA,MAAA1G,EAAaA,GAAAK,SAAA9B,UAAAoE,QAAAC,MAChB8D,EAAAA,IAAA1G,EAAWA,UAAAA,EAAaA,GAAAK,SAAA9B,UAAAoE,QAAAC,IAAb8D,EAAkDA,MAG9DA,EAAIA,WACH1G,EAAAA,UAAAgZ,KAAkB,WAEjB,GAAArZ,KAAIsZ,IAAAC,OADAC,2BACA,EAMHzG,MALA/S,MAAIsZ,IAAAnY,QAAA,MAAA,EAA4B4F,EAAAc,UAAA7H,KAAAsZ,IAAAza,MAAA,EAAAmB,KAAAsZ,IAAAG,YAAA,MAAA,SAE/B1S,EAFDc,UAEK,QAEJkL,EAAAhK,SAAA,qCAAA/I,KAAAsZ,IAAAvS,EAAAc,YACIkB,IAMR/I,KAAK8P,YAAc,GAAIwI,gBAAevR,EAAKuJ,SAAUvJ,EAAKsJ,QAA1DtJ,EAAK+I,UACD/I,EAAAA,QACHhH,MAAKM,OAAL,uDAECL,KAAA8P,YAAA4I,QAED1Y,KAAA+I,SAAA,2BAAA/I,KAAA8P,YAAA/J,UAGD/F,KAAAgH,OACA0S,SAAA,gBAAa3S,EAAAsB,WAAA8G,MAAA,YACZuK,SAAAA,gBAAU3S,EAAkBA,WAAAqI,MAAlB,YACVuK,YAAU,gBAAkB5S,EAAKsB,WAAW+G,SAAQ,YACpD5H,aAAa,gBAAkBT,EAAKsB,WAAW4G,UAAW,YAC1D2K,YAAAA,gBAAc7S,EAAkBA,WAAKsB,SAAvB,YACdwR,YAAAA,gBAAa9S,EAAkBA,WAAAO,SAAlB,YACbI,cAAAA,KAMDX,EAAAT,UAAAS,EAAA+S,UAAA/S,EAAA+S,SAAAC,KAAAhT,EAAAiT,SACA3Z,EAAAL,KAAI+G,SAAKT,OAER,IAAA2T,GAAAja,KAAAwE,MAAAiL,KAAA,aAAAyK,MAGDla,MAAAma,OAAA,GAAAlV,cAAA,KAAAjF,SACAA,KAAAma,OAAAlQ,WAAkBhF,EAClBjF,KAAAma,OAAArT,SACA9G,KAAAgZ,QAAYlS,YAAZ9G,KAAAma,OAAA1R,GAGA,IAAI2L,GAAOpU,KAAKma,OAAhBtB,EAAgBsB,EAAAA,SAAhBna,KAAA8P,YAAA+I,cAAA3O,GACC2O,EADDvC,EAECpM,KAASqM,cAFV,EAKAvW,MAAK+I,SAAS,4CAEdhC,EAAAT,SAEC8N,EAAAlH,SAAAnG,EAAAT,UAGMS,EAAIA,UAAAA,EAAiBA,SAAAgT,KAE3B7P,GAAAA,EACAkK,EAAAA,KAAAlK,QAAA,EACAlK,KAAAoa,YAAA/T,IAGAU,EAAAiT,OAGAha,KAJMqa,eAIAjG,EAAA/T,EAAA,IAAA0G,EAAAiT,UAKNha,KAAAqa,eAAAjG,EAAA6F,GADAA,EAAc9F,UAKfnU,KAAGsa,oBAEFpQ,GAAA,GAAAnD,EAAA6K,YACDwC,EAAAtD,4BACA9Q,KAAK+I,SAAS,qCAGd/I,KAAAuW,aAAAD,GACAtW,KAAK+I,SAAS,oCAGd/I,KAAA+Y,QAAA/D,OACAhV,KAAK+I,SAAS,iCAGd/I,KAAAsX,MAAA,WAGCvQ,EAAAoJ,SACDnQ,KAAA8P,YAAA6I,QAGC3Y,KAAKoZ,WAALpZ,KAAAoZ,UAAApK,cACAhP,KAAA+I,SAAA,oBAAA/I,KAAAoZ,WACDpZ,KAAKkK,UAASsD,SAEZzG,IACAA,EAAAwT,YACDxT,EAAIV,WAAU4B,KAAAjI,KAAA6Y,GAAA,GAEbxS,GACDA,EAAA4B,KAAAjI,KAAA,OACDA,KAAKsX,MAAQ,QAKb8C,YAAW,SAAKpX,GAEf,GAAA+D,GAAM/G,KAAAgD,OACN,KAAA+D,EAAA+S,WAAA/S,EAAA+S,SAAAC,IACD,KAAIpE,yCAEJ,IAAAA,GAAA3V,KAAA8P,YACF0K,EAAAna,EAAA+E,UAAA2B,EAAA+S,SAGGU,GAAAC,eACDD,EAAIA,KAASE,UAAb/E,EAA4B5F,WAE3ByK,EAAAE,gBACDF,EAAIA,KAASG,WAAAA,EAAb3E,YAECwE,EAAAG,qBACDH,EAAIA,KAASI,gBAAbjF,EAAiCM,gBAAArW,KAAA,MAEhC4a,EAAAI,qBACDJ,EAAA7V,KAAAuR,gBAAAP,EAAAO,gBAAAtW,KAAA,MAGC4a,EAAAzD,SACD/W,KAAIwa,WAASvD,kEAEZuD,EAAAvD,OACDjX,KAAI6Y,WAAAA,+DAEH,IAAAA,GAAQjH,EAALiH,aACF9N,GAAAA,QAAYoP,SAAOrJ,EAAAA,EAAAA,GACnB,GAAA/J,EAAA6K,YACD7G,EAAGhE,KAAKwT,OAARzJ,4BAEC/J,EAAAwT,YACDxT,EAAGV,WAAS4B,KAAA8C,EAAAjI,KAAA+V,GAAA,GAEXxS,GATFA,EAAA4B,KAAA8C,EAAAjI,KAAA,OAaEiE,EAAKwT,MAAAA,SAAgBxP,EAAOjI,EAAmBqU,EAAM0D,GACrD9T,EAAAwT,YACDxT,EAAGV,WAAS4B,KAAA8C,EAAAjI,KAAA+V,GAAA,EAAAgC,EAAA1D,EAAAW,GAEXzR,GANFA,EAAA4B,KAAA8C,EAAAjI,KAAA,QAAA+X,EAAA1D,EAAAW,IAWA9X,KAvNmB+I,SAAA,0CAsNnB/I,KAAKma,OAAOzD,WAAW8D,IAKvB3U,SA3NmB,WA0NnB,MAAO,aAAe7F,KAAKwE,MAAMuQ,KAAK,MAAQ,KAK9ChP,OAAA,SAAOgI,GACP,GAhOmB9H,GAAAjG,KAAAma,OAAApU,QAAA,EA+NnB,OAAOgI,GAAc9H,EAAOA,EAAKK;wBAKjCwU,eAAA,SAAAC,GAMC,IAAA,GALDC,GAAAhb,KAAAib,iBAAAF,GAGAG,EAAIlb,KAAIiC,MAAKuE,KAAEwU,SAAS5Y,KAAQH,MAAKA,KAAI,MACxCkZ,KACAlZ,EAAA,EAAAuE,EAAAwU,EAAA5Y,OAAAH,EAAAuE,EAAAvE,IACDkZ,EAAAzU,MAAAwU,KAAAA,EAAAE,MAAAJ,EAAA/Y,GAAA0C,KAAAU,KAAA,OAAO8V,IAKPE,eAhPmB,WA+OnB,MAAOrb,MAAK8P,YAAY/J,UAKvBpH,SAAMC,SAAUkB,GAChBC,KAAKjB,QAAMwc,YAAX,IACA3c,MAAAC,UAAAkB,QAAAhB,MAAAC,WAAA,UAtPkBgB,MAAAjB,MAAAkB,KAAAjB,aA2PlBJ,QAAMC,SAANH,GACAsB,KAAKjB,QAAMwc,YAAX,IACA3c,MAAAC,UAAAkB,QAAAhB,MAAAC,WAAA,SA7PkBgB,MAAAjB,MAAAkB,KAAAjB,aAkQnBgB,WAAKjB,SAAYC,GACjBJ,MAnQmBC,UAAAkB,QAAAhB,MAAAC,WAAA,SAkQnBgB,MAAKjB,MAAMkB,KAAMjB,YAKjB+W,eAvQmB,WAwQpB+C,MAAa,QAAbA,KAAavB,OAAW,YAAXtX,KAAWsX,OAEvBuB,YA1QmB,WA2QpB0C,OAAa,QAAbA,KAAajE,OAAW,YAAXtX,KAAWsX,QAAAtX,KAAAgD,QAAAmN,SAAAnQ,KAAA8P,YAAAiG,cAEvBwF,YA7QmB,WA4QnB,MAAqB,aAAZvb,KAAKsX,OAKdkE,OAAKrB,WAELna,KAnRmBma,OAAArT,QAAA,GAAA,IAsRnB2U,qBAtRmB,WAuRpB9G,KAAAA,OAAQ7N,QAAA,GAAST,IAEhBsO,OAzRmB,SAAAtO,GAwRnBrG,KAAKmZ,MAAM9S,IAKXqV,QA7RmB,WA4RnB,MAAO1b,MAAKma,QAKZwB,OAjSmB,WAgSnB3b,KAAK+Y,QAAQ4C,UAKbC,QArSmB,WAoSnB5b,KAAK+Y,QAAQ6C,WAKbC,aAAA,SAAAxW,GAGC,GAAA9E,GAAOA,SAAAub,eAAwB9b,KAA/BgD,QAAAiI,SAAA5F,EACA,IAAA9E,EACD,MAAAA,GAAAwK,OAAAxK,EAAAwK,OAAA,IAGF,IAAA3J,GAAA,IAME,OALCpB,MAAAwR,MAAQ7M,SAALqB,GAEF,GAAAA,EAAArB,KAAOU,MAAPA,EAJF,MAKEjE,GAAA4E,GALF,IAhTmB,GAuTZ5E,GAKP2a,cA5TmB,WA2TnB,MAAO/b,MAAKmK,YAKZ6R,WAAIhW,SAAYmE,GAEhB,GAAAnE,GAAWhG,KAAAmK,UAEVnE,KACAhG,KAAIic,WAAU,KACbjW,EAAAA,WACAiW,GACDjW,EAAAwH,UAKDyN,iBAAYzJ,SAAMuJ,GACjB,GAAAC,KAOD,OANEA,MAAAA,OAAStU,MAAKV,SAAdA,GACA,GAAAA,EAAI+U,YACHC,EAAOtU,KAAAV,IACP,IAAA+U,GACD,MAAA,SAEKC,GAKPkB,YAAA,SAAc7W,GACb,GAAA0F,GAAA,OAASZ,EAAY,KAAAnK,KAAA6b,aAAAxW,EACpB,OAAA0F,IAOFA,EAAAyC,QACAzC,EApWmBxE,WAmWZwE,IANL/K,KAAAmK,YACDnK,KAAKmK,WAAL6F,aAEAhQ,KAAAmK,WAAA,KACMqD,OAOP2O,YAAA,SAAA/G,EAAA/O,GACA,GAAAgP,GAAGD,EAAHlT,MAAqBlC,KAAAgD,QAAA0I,iBASrB,OAPC,KAAA2J,EAAA,IACDA,EAAA+G,QAGC/G,EAAQ+G,IAARpc,KAAAma,OAAAxV,KAAAU,MACArF,KAAA+I,SAAA,6BACDqM,EAAAA,SAEAA,EAnXmBC,EAAAzV,KAAAI,KAAAgD,QAAA0I,kBAkXZ1L,KAAKma,OAAOhF,aAAaC,EAAS/O,IAKzCgW,UAAKtR,SAAQ1F,EAAAc,GACZ,GAAA4E,GAAA/K,KAAA6b,aAAAxW,EACA,OAAA0F,IAGDA,EA5XmB5E,OAAAA,GA2XZ4E,GADA5E,MAMNoQ,aAAO+F,SAAPA,GACA,MAAAtc,MAAAoW,eAAAkG,EACIlG,GAEJpW,KAAAoW,cAAAkG,EACAA,GACDtc,KAAAwb,UAAQc,IAKRC,MA3YmB,WA0YnB,MAAOvc,MAAKma,OAAO5N,iBAKnBiF,MA/YmB,SAAA0C,EAAAnG,GA8YnB,MAAO/N,MAAKma,OAAO3I,MAAM0C,EAAInG,IAK7BsM,eAAW,QAAAA,gBAAXmC,eAAAC,WAAA,GAAI1J,MAAO/S,IAOVyc,WACCC,KAAAA,OAAcjN,KAAK,WADpB,GAAAkN,KAECC,EAAOD,MAFRD,QAAAC,IAAAlN,KAAA,eAAAmN,KAIC7U,IAAO0H,KAJR,YAAAtK,MAAA4C,KAMCG,KACDlE,OAAI0Y,KACHxU,OACA/C,IAAAA,QAAQuX,OAERvX,MAAAA,QAAa0X,WACb9U,IAAO6U,KAAK7H,OACZ/Q,MAAAA,KAAS4Y,OACT1U,KAAAA,KAAU0U,KAAK7H,QACf/Q,OAAM4Y,KAAA7H,KAAA,UACN7M,QAAA0U,KAAA7H,KAAA,aACA,CAGA5P,MAAI2X,IAAAA,MACH3X,IAAAA,MAAQ9E,MAAO8E,OAAM4X,OAErB5X,OAHD2X,MAEK,EACJ3X,EAAQ9E,KAAA8E,MAAA4X,UAAR,EAAAD,OAELzc,EAAA2c,KAAA7X,OAKI+C,GAAAA,OACA6B,MAAAA,MACAG,QAAQyS,QACRzW,SAAQyW,IAAI/Y,SAAS,UACrBuC,OAAAA,IAAQwW,SAAA,QACRpW,OAAAA,IAAUoW,SAAI/Y,YACd4J,OAAOmP,IAAI/Y,SAAS,YACpBwE,SAAQuU,IAAI/Y,SAAS,UATX4J,MAAXmP,IAAA/Y,SAAA,WAWAwE,OAAAuU,IAAU/Y,SAAA,UAaT,IAXAe,OACAA,KAAAoD,KAAAA,KACDpD,KAAIgY,OAAS3Y,QAEZ2Y,IAAA5H,KAAA,WACDpQ,KAAIgY,QAASA,IAAb5H,KAAoB,UAEnB4H,IAAA5H,KAAA,QACDpQ,KAAAU,IAAA,GAAAsX,IAAA5H,KAAA,OAGC4H,IAAIM,KAAAA,QAAW,CACd,GAAAA,UAAaC,EAAAA,KAAOP,IAAhB5H,KAAJ,QACCkI,IAAAA,SAAW,CACX,KAAAA,SAAAC,OAAA,KACDD,SAAI,IAAAA,SAAA,IAEH,KACA5c,EAAA+E,OAAOT,KAAAwY,KAAA,IAAAF,SAA8Bvd,MACrC,MAAAA,GACD,KAAA,4BAAAA,EAAA,aAAAud,SAAA,MAIF,GAAAG,WAAc3N,eAAJvC,SAAVvI,MAECoO,IAAKsH,IAAAA,KAAAA,YACLgD,KAAAjb,QArEF2Q,KAAAsH,eAAA+C,UAAAC,QA2EA/C,kBApemB,aAwenBgD,cAAIC,SAAUxZ,EAAeA,EAAfD,EAAd0Z,EAAAC,GAAA,GAAAC,GAAAH,EAAAxZ,EAAA1D,EAAA0D,EAAA6B,MAAA,KAAA+X,EAGCC,EAAAA,EAHDhY,MAGCgY,EAAgB,EAGjBC,EAAUC,QAoBT,IApBI9d,KAAK8d,aAMZ9d,KAAA8d,WAAAzd,EAAA,yCACG6Z,OACH6D,KAAAC,UAAA,MAJKC,UAAU5d,EAAEL,KAAKgZ,SAAS9T,WAgBvB,UAALsY,GAAA,WAAAA,GAAA,SAAAA,EAAA,CAIC,OAAAA,GACD,IAAA,SACCxd,KAAA8d,WAAKA,YAAW1N,0CAChBpQ,KAAA8d,WAAKA,SAAW1T,wBAChByT,EAAAA,KACA,MACD,KAAA,QACC7d,KAAA8d,WAAKA,YAAW1N,2CAChBpQ,KAAA8d,WAAKA,SAAW1T,uBAChBuT,EAAQvT,QACRwT,MAfD,SAiBH5d,KAAA8d,WAAA1N,YAAA,4CACApQ,KAAA8d,WAAA1T,SAAA,sBACAuT,EAAAvT,SAAA,wBACAwT,EAAA,EAcIF,EALAhb,eAAAC,eAMA+a,GAAAA,OAAUQ,aAAAN,GAAA,UACTO,GAAAA,QAAIN,EACJO,GAAAA,IAIDD,GAAA,cACDC,GAAKN,QAALD,EAJEQ,GAAIV,EAQTW,OAAAV,EAAA,MAGGD,KAAAA,WACAY,OACHC,SAAAd,OAKGC,GAAAA,YAAA,wBACA3d,KAAA8d,WAAA5D,MAGM,WAFPsD,EAGCG,EAAAA,SAAQvN,uBAETuN,EAAGF,YAAH,uBAEUrT,WAARmT,EACAI,EAAAvT,SAAA,wBAEDtG,EAAOsG,YAAS,yBAEhB,IAAAqT,GACCF,GACAA,EAAAnT,SAAA,wBAEDtG,EAAOsM,SAAAA,wBACPtM,EAAAsG,SAAA,0BAEAmT,GACCA,EAAAA,YAAiB,wBAElBI,EAAAA,YAAiB,wBACjB7Z,EAAAA,YAAgB,0BAEhB,IAAA2Z,GACCF,GACAA,EAAAnT,SAAA,wBAEDtG,EAAOsM,SAAAA,wBACPtM,EAAAsG,SAAA,0BALGmT,GAQLhZ,EAAAA,YAAc,wBALZoZ,EAAQvN,YAAY,wBACpBtM,EAAOsM,YAAY,0BAIrB7L,aAAc,SAASka,EAAWzY,EAAMqG,EAAW/H,EAAO7D,EAAI4C,GAwB7D,GAAAma,GAAQiB,EAARC,EACAzb,EAAKjD,KAAAgD,QAALC,IACCkE,EAAA,KACAwX,EAAIC,EAAAA,EAAUve,KAAA,QAEXoW,GACH,IAAA,SAEH,GAAAmI,GAAAve,EAAA,qFAEGue,OAAQja,EAAK8K,KAAA,mBAAboP,QAEAxe,GAAA,wBAAA2F,EAAAlD,KAAAkW,SAAAvC,OAAAmI,GAGCzX,EAAAA,KAAM,eAANnB,GACAmB,EAFDyX,CAGCzX,MACA,KAAA,QACDnB,EAAGmB,eACFA,GAAA,EACAlE,EAAAC,cACAiE,EAAAlE,EAAAC,YAAA8C,KAEGlC,IAAHrD,GACAT,KAND+I,SAMO,gCAGPtI,EAAAqD,OAAA8T,QAAA,WACDnX,EAAAqD,OAAKoW,QAEJyE,EAAAvU,SAAM,uBAELjD,MACA,KAHD,QAICA,EAAAA,EAAAA,YAAMlE,EAAA6b,YAAA9Y,EAAAqG,EAAA5L,EAAA4C,GAAA,KAKN8D,IAJC4X,IADD1e,EAAAwX,QAAA6G,IAMAvX,KAAM9G,EAAAwV,QAAA,OAAA6I,IAAA,EACLK,OAAQL,EAAAA,QAAD,SAAuBA,IADzB,EAELM,MAAAA,EAAUN,QAAM,QAAUA,IAAM,IAIlCje,MAAA,IAAGqD,GAAH,SAAe4a,EAClBM,QAAA,IAAAN,GAAA,WAAAA,EACGO,OAAA,IAAAP,GAAA,UAAAA,IAGAlB,EAAAA,OAAAA,KAAU,gBAAVrW,EAEC,MACA,KAAA,OAGA,GAFJ+X,EAAAze,EAAAqD,OAAAa,KAAA,iBACI6Y,EAAM,MACN,IAAA0B,OAIIC,IAAJ,gBAAcR,GAER3R,EAAG1I,MACL8a,CAHJ,GAAID,GAAUR,EAAQL,SAMtBe,GAAIH,EAAAA,EAAcD,MAASG,EAAAE,KAC1B9B,EAAAA,EAAUnP,MAAV8Q,EAAAI,KADDH,GAEWF,EAAAA,EAAAA,EAAcH,EAAQG,QAChC1B,EAAAA,EAAUxQ,EAAA2R,EAAVa,SAEAhC,GAAUyB,OAAVG,EAAApS,EAAA,IACAwQ,EAAM,SACNA,EAAAuB,MAAAG,EAAAD,OAAAG,EAAApS,EAAA,GACAwQ,EAAM,QACNA,EAAAwB,QAAAI,EAAApS,GAAA,IACAwQ,EAAA,UACD0B,EAAAH,MAAAG,EAAAF,QAAAI,EAAApS,GAAA,GACAwQ,EAAA,SACQiC,EAAAA,OACPjC,EAAGxX,QAEG/C,EAAAwc,mBAGLjC,IAAAA,EACAA,EAAK,KAEL,WAAAA,GAAAnR,GAAArG,IAAAqG,EAAAL,iBACAwR,EAAA,KACD,UAAAA,GAAAnR,GAAArG,IAAAqG,EAAAJ,iBACLuR,EAAA,KACmB,SAAZ1Z,GAAuB0Z,GAC1BnR,EAAAnH,SAAAc,GAAAqG,EAAA/C,kBACDkU,EAAA,OAKA/c,EAAAqD,OAAG0Z,KAAAA,UAAekC,GAGNvY,SAAVqW,GACAva,EAAA0c,eAAA,IAAA3Z,EAAAuB,gBAAAvB,EAAAiE,WACDjE,EAAA4M,eAAA,SAAA3P,EAAA0c,cAEJnC,GAAAva,EAAAyc,aAEG,UADAvY,EAAKmW,EAAAA,WAAcjR,EAAAA,EAAiB5L,EAApCA,EAA+C+c,KAC/C,WAAArW,GAAA,UAAAA,IACDqW,EAAArW,IAKElE,KAAAA,cAAAoJ,EAAArG,EAA4BwX,EAA5B1Z,OAAyCT,GAAzC,IAAA8D,GAAA,OAAAqW,EACA,MACD,KAAA,OAEA,GAAAoC,GAAAnf,EAAAqD,OAAAF,SAAA,uBACAoC,GAAK4M,EAAAA,OAAAA,KAAe,WACpBnS,GAAUkE,EAAKxB,SAAAyc,GACfnf,EAAGqD,OAAOa,EAAK0H,EAAWmR,EAA1B/c,EAAA4C,EAEA,MACCJ,KAAAA,QAED+C,EAAA4M,eAAA,UACDnS,EAAAqD,OAAKa,KAAL,gBAAA,MACCga,EAAAA,OAAQvO,KAAAA,UAAY,MACpBpQ,KAAAsd,cAAOuC,EAAW7Z,EAAAvF,EAAAqD,OAAA,UAAA0H,IACjBvI,EAAI4c,aACJ5c,EAAA6c,YAAA9Z,EAAAqG,EAAA5L,EAAA4C,EAEF,MACC,KAAA,OAxIDsb,EAAAvO,YAAA,wBA0IAnN,EAAOkE,YA9vBYlE,EAAA4c,WAAA7Z,EAiwBpB+Z,MACE,SACA,KAAA,2BAAMtB,EAEL,MAAAtX,IAGH4Y,WAAA,WACA1H,GAAAA,GAAAA,EAAW7M,GAAAA,UAAAA,OAzwBZwU,IAowBIA,EAAGC,UAYP5f,cAASmL,IAATnL,EAAE6f,OAAO,eAeNC,MAAA,WAED,GAAAvd,eAAAvC,EAAAI,GAAAM,QAAA,OAAA,EAFC,MAIAhB,MAAKiD,QAASsY,YAAA,GACdvb,MAAA,OAAA,2FALOC,KAAKogB,SAUbpgB,MAAG+G,QAAKuU,YAAgB,GACvBzb,MAAAA,QAAO,sEAHTugB,QAAS,WAQJpH,KAAUhW,QAChBsY,YAAA,GANGzb,OAAO,mDAAoDQ,EAAEI,GAAGC,SAASK,QAASf,KAAKgD,QAAQsY,YAGhGtb,KAAKgD,QAAQsB,OAAS,WASVtE,MAAI8Y,QAASG,IAAzB,EAOAjZ,MAAA8C,KAAA,GAAAgW,UAAA9Y,MANAA,KAAK8C,KAAKqW,QAQVnZ,KAAIqgB,KAAAA,SAAa,4BAGhBA,KAAAA,WAyCH,QAAAC,GAAAhc,GAQGic,EAAIC,EAAAA,MAAAA,IAAJlc,GAAAjF,OAA8BihB,MAC9BC,IAAAA,GAAIC,EAAAA,GAAAA,SAAiB7f,QAAQ2f,EAAAA,OAC7B,SAAMvV,GAAAA,EAAA8I,SAAAvP,GAjDPtE,KAAAiV,QAEC,IAAAoL,GAAa,kCACZrgB,MAAAgD,QAAcyd,WAEfJ,GAAWtV,uCAEXjI,KAAAA,QAAKiG,KAASsX,EAAA,SAAd/b,GACA,GAAAyG,GAAIsM,EAAAA,GAAYvU,SAAhBnC,QAAA2D,EAAAN,OACAlB,KAAAA,EACA,OAAI,CAEH,IAAAA,GAAKiI,EAALjI,KACC4d,EAAA5d,EAAW6d,OACZ7d,GAAAiG,SAAK,wBAALzE,EAAAwP,KAAA/I,EACC,IAAAsM,GAAWuJ,EAAAA,KACZ9d,GAAAwU,MAAK,WACJ,KACD,OAAKhT,EAAAwP,MACJ,IAAA,QARD,QAAA4M,EAAAC,UAAA,IAAAD,EAAAC,QAAA1Y,KAAAnF,EAAAiI,EAAAzG,KAAAyG,EAAAoI,SAAA7O,EAUA,KAAC,WACD,QAAQoc,EAAAE,aAAM,IAAAF,EAAAE,WAAA3Y,KAAAnF,EAAAiI,EAAAzG,KAAAyG,EAAAyI,YAAAlP,EACdxB,KAAAA,UAbD,QAcU4d,EAAAG,YAAA,IAAAH,EAAAG,UAAA5Y,KAAAnF,EAAAiI,EAAAzG,KAAAyG,EAAA0I,WAAAnP,EACTxB,KAAAA,WACA,QAAA4d,EAAAI,aAAA,IAAAJ,EAAAI,WAAA7Y,KAAAnF,EAAAiI,EAAAzG,KAAAyG,EAAA6I,YAAAtP,IALC,MAAM5E,GASToD,EAAAyS,WAAA,kCAAAjR,EAAAyG,EAAArL,GAbG,QAeHoD,EAAAwU,MAASgJ,IAmBR,IAAAC,GAAAvgB,KAAA8C,KAAAkW,OAEDuH,GAAAC,kBACFD,EAAAC,iBAAA,QAAAF,GAAA,GACAC,EAAAC,iBAAA,OAAAF,GAAA,IALGC,EAAIQ,UAAYR,EAAIS,WAAaV,GASnCrL,OAAQ,WASR0G,KAAAA,QAAQ1G,OAAA,cAQP0G,OAAA,WACAtb,KAAE4gB,OANF5gB,EAAE4gB,OAAOriB,UAAU+c,OAAO7c,MAAMkB,KAAMjB,YAWtC6c,QAAO,WACP5b,KAvIsBiV,SAyIvByG,EAAAA,OAAS9c,UAAAgd,QAAA9c,MAAWkB,KAAAjB,YAIpBgd,QAAAA,WACC,MAAA/b,MAAO8C,MAGRmY,QAAAA,WACC,MAAAjb,MAAO8C,KAAA4Y,WAGRK,cAAA,WACA1D,MAAAA,MAAW7M,KAAAA,iBAIZyP,iBAAA,WACA,MAAGrY,MAAAA,KAAAA,oBAIHyV,cAAA7M,KAKCzK,eAFuBV,EAAAI,GAAAM,QAAA,OAAA,IAGvBV,EAAAI,GAAAC,SAAAwgB,OAAA,kDAMA7gB,EAAA+E,OAAA/E,EAAAI,GAAAC,UAPAK,QAAS,QAWRogB,UAAG5gB,UAEF6gB,eAAAtI,SAEAvY,mBAAY0E,aAIbtE,QAAOJ,SAAKA,GACX,GAAAA,YAAc0E,cACb,MAAA1E,EAOH8a,SALUgG,KAAR9gB,EAAAA,WACAA,EAAAA,EAAA,IAIF8a,GAAAA,CA9BD,GAAA9a,EAAAwK,OAuBI,MAAOxK,GAAGwK,MAEXxK,GAAKA,EAAG8gB,WAaXhhB,MAAKK,OAGJmH,eAHiCyQ,eAGhBC,sBAQjB3H,EAAAA,GAAAA,SAAAA,UAAoB5N,SACpBiN,MAAAA,WACA3I,eAbiC,EAcjCsK,UAAAA,KACA9G,SAfiC,KAgBjC1C,OAAAA,KACA0R,SAAA,KACA6G,WAAS,EACTC,UAAAA,EACAC,SAAAA,EACAC,cAAY,EACZ7M,gBAAe,EACfF,eAAc,EAVdzM,UAAU,EAYVsK,WAAA,EACA/B,GAAAA,KACA8B,QAAAA,EATAgP,QAAS,KAYTC,WAAA,KACArG,UAAAA,KACAhK,WAAAA,KACAC,QAAAA,KACAuB,OAAAA,KAGA/J,gBAAgB,KAChB2C,cAtCiC,KAuCjCF,cAvCiC,KA0CjC8M,WAAAA,KAVAhH,WAAY,KAYZC,aAAA,KACAvN,SAAK,KACJyP,SAAA,KACAxP,WAAAA,KACA2c,eAAY,KACdlV,SAAA,KACElH,SAAQ,KAGRgc,YAAAA,KAGAtc,KAXID,YA7C4B,KA2DjCgU,WAAAA,KAECoK,QAAAA,EAFa3B,aA3DmB,IAgEjCjS,kBAAS,EACR6T,YAAS,KACT3T,WAAW,KAFHzK,OAhEwB,KAoEjC6H,YAAa,MAEbU,cACD1E,OAAA,EACCsJ,QAAAA,EACAD,SAAQ,QAET3C,SACA6T,QAAA,iBACA3T,UAAA,eAEC5C,aAAA,EACAC,SAAA,eACAS,iBAAA,IAEA4E,SAAA,WACAjI,QACCmZ,QAAAA,MAUA3S,YACAC,UAAU,qBACV3J,KAAAA,gBACA+F,OAAAA,kBAGAqC,MAAAA,iBACAkU,MAAAA,iBACAjX,SAAAA,oBACAF,UAAAA,qBACA+C,SAAAA,oBACFwB,MAAA,iBACEtH,SAAAA,gBACAgD,MAAAA,iBACAF,YAAU,wBAEVqX,UAAM,4BACN1N,SAAS,2BACTjD,OAAAA,kBACArG,uBAAS,gBA9BEJ,mBApFqB,gBAoHjCgR,YApHiC,mBAsHjC/T,YAAA,wBACA8Q,OAAAA,kBAvHDhO,SAAA,oBAyHAP,SAAA,oBACA4X,KAAG9e,gBACFvC,QAAKK,mBACLqQ,QAAA,mBAVCrG,QAAS,oBAEV4Q,WAAY,EAcZnW,cAAOqG,IAGPtB,eAAe7J,EAAAI,GAAAM,QAAA,OAAA,IACfmH,EAAAA,GAAAA,SALgCyZ,SAKjBthB,EAAAI,GAAAC,SAAA9B,UAAAoE,SAMfwK,EAAAA,GAAAA,SAXgC9H,kBAYhCQ,MAAAA,KACAC,IAAAA,KACAsB,UAAAA,EACAwJ,QAAAA,EACD/I,QAAA,KACCH,KAAA,KACAzB,KAAAA,KACA8D,SAAA,KACAhC,QAAA,EACA7B,UAAA,EACA8R,OAAAA,EAtBgCnS,QAAjC,EAaCC,QAAQ,EAYTsB,cAAA,EAVCwJ,cAAc,EAcd3K,SAAIrD,KAIHoV,cAAA7M,GAsEC,IAAA5G,iBACcnE,EACjB2C,aAAA,WACAwB,iBANCvE,EAAEI,GAAGmhB,OAAOC,IAAI,YAAa,qBAW3BC,MAAG/d,SAAHO,EAAe7D,GAElB,GAAA4C,GAAAhD,EAAAL,MAAA2E,KAAA,iBAAAtE,EAAAL,MAAA2E,KAAA,aACAZ,EAAAtD,EAAAqD,OAAAa,KAAA,iBAAA,IAOI,IAAAZ,EAUJ,MANGV,GAAAib,OAAAyD,MAAAxC,KAAA,EACAlc,EAAIA,OAAYhD,MAAAif,KAAa,GAKhCvb,EAAAjB,KAAAyB,aAAA,QAAAR,EAAA,KAAAO,EAAA7D,EAAA4C,IAGI2e,KAAA,SAAA1d,EAAA7D,GAEA,GAAA4C,GAAAhD,EAAAL,MAAA2E,KAAA,iBAAAtE,EAAAL,MAAA2E,KAAA,aACAZ,EAAAtD,EAAAqD,OAAAa,KAAA,iBAAA,KACAsd,EAAe5hB,EAAEiE,OAAMN,KAAQke,iBAAQ,KACvCjK,EAAA5X,EAAYI,GAAAC,SAAAC,QAAA2D,EAAAN,OAGX,IAAAM,EAAAN,SAAAiU,EAAA,CAOD,GADAgK,EAAenf,EAAKyB,QAAAA,QAAa,kDAAgDlB,OAAjF,EAGA,OAIC4U,EAAAA,OAAAA,KAAWnV,eAAXmV,GAEAgK,GAAAA,IAAAhK,GACAA,EAAWnV,KAAKyB,aAAa,QAAS0T,EAAYlU,EAAlDO,EAAyEjB,EAAAA,GAE1E4U,GACDA,EAAAnV,KAAAE,QAAAC,IAAAE,SAEK8U,IAAAgK,EAELhK,EAAI5U,KAAYhD,aAAa,OAAA4X,EAAqBlU,EAAWO,EAAA7D,EAA7D4C,GAPE4U,EAAWnV,KAAKyB,aAAa,QAAS0T,EAAYlU,EAAYO,EAAO7D,EAAI4C,KAc9E8e,KAAA,SAAA7d,EAAA7D,GAEA,GAAA4C,GAAAhD,EAAAL,MAAA2E,KAAA,iBAAAtE,EAAAL,MAAA2E,KAAA,aACGZ,EAAAtD,EAAYqD,OAAAa,KAAA,iBAAA,KACX9E,EAAOY,EAAAqD,OAAAa,KAAP,iBAAA,KAEDmQ,EAAGmD,EAAYnE,KACdpQ,EAAW,WAARA,GAAQ,GAAAY,EAAA8d,KACVnK,QAAAA,iFAAAA,EAAAxX,EAAAqD,OAAAa,KAAA,iBAIFjB,GACCK,OAAAA,sBAEDkU,IAvFFvU,GAyFAkB,EAAAA,KAAiBL,aAAjB,OAAA0T,EAAAlU,EAAAO,EAAA7D,EAAA4C,GAPG4U,EAAWnV,KAAKyB,aAAa,QAAS0T,EAAYlU,EAAYO,EAAO7D,EAAI4C,IAW3Egf,GAREte,EAAWjB,KAAKyB,aAAa,OAAQR,EAAY,KAAMO,EAAO7D,EAAI4C,MAIrEuB,gBAAiB,KAIhByd","file":"../../../scripts/libs/jquery/jquery.dynatree.js","sourcesContent":["/*! ****************************************************************************\r\n\tjquery.dynatree.js\r\n\tDynamic tree view control, with support for lazy loading of branches.\r\n\r\n\tCopyright (c) 2006-2014, Martin Wendt (http://wwWendt.de)\r\n\tDual licensed under the MIT or GPL Version 2 licenses.\r\n\thttp://code.google.com/p/dynatree/wiki/LicenseInfo\r\n\r\n\tA current version and some documentation is available at\r\n\t\thttp://dynatree.googlecode.com/\r\n\r\n\t@version: 1.2.8\r\n\t@date:    2015-07-04T16:44\r\n\r\n\t@depends: jquery.js\r\n\t@depends: jquery.ui.core.js\r\n\t@depends: jquery.cookie.js\r\n*******************************************************************************/\r\n\r\n/* jsHint options*/\r\n// Note: We currently allow eval() to parse the 'data' attributes, when initializing from HTML.\r\n// TODO: pass jsHint with the options given in grunt.js only.\r\n//       The following should not be required:\r\n/*global alert */\r\n/*jshint nomen:false, smarttabs:true, eqeqeq:false, evil:true, regexp:false */\r\n\r\n/*************************************************************************\r\n *  Debug functions\r\n */\r\n\r\nvar _canLog = true;\r\n\r\nfunction _log(mode, msg) {\r\n\t/**\r\n\t * Usage: logMsg(\"%o was toggled\", this);\r\n\t */\r\n\tif( !_canLog ){\r\n\t\treturn;\r\n\t}\r\n\t// Remove first argument\r\n\tvar args = Array.prototype.slice.apply(arguments, [1]);\r\n\t// Prepend timestamp\r\n\tvar dt = new Date();\r\n\tvar tag = dt.getHours() + \":\" + dt.getMinutes() + \":\" +\r\n\t\t\t\tdt.getSeconds() + \".\" + dt.getMilliseconds();\r\n\targs[0] = tag + \" - \" + args[0];\r\n\r\n\ttry {\r\n\t\tswitch( mode ) {\r\n\t\tcase \"info\":\r\n\t\t\twindow.console.info.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\tcase \"warn\":\r\n\t\t\twindow.console.warn.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\twindow.console.log.apply(window.console, args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t} catch(e) {\r\n\t\tif( !window.console ){\r\n\t\t\t_canLog = false; // Permanently disable, when logging is not supported by the browser\r\n\t\t}else if(e.number === -2146827850){\r\n\t\t\t// fix for IE8, where window.console.log() exists, but does not support .apply()\r\n\t\t\twindow.console.log(args.join(\", \"));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction logMsg(msg) {\r\n\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t_log.apply(this, arguments);\r\n}\r\n\r\n\r\n// Forward declaration\r\nvar getDynaTreePersistData = null;\r\n\r\n\r\n\r\n/*************************************************************************\r\n *  Constants\r\n */\r\nvar DTNodeStatus_Error   = -1;\r\nvar DTNodeStatus_Loading = 1;\r\nvar DTNodeStatus_Ok      = 0;\r\n\r\n\r\n// Start of local namespace\r\n(function($) {\r\n\r\n/*************************************************************************\r\n *  Common tool functions.\r\n */\r\n\r\nvar Class = {\r\n\tcreate: function() {\r\n\t\treturn function() {\r\n\t\t\tthis.initialize.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n};\r\n\r\n// Tool function to get dtnode from the event target:\r\nfunction getDtNodeFromElement(el) {\r\n\talert(\"getDtNodeFromElement is deprecated\");\r\n\treturn $.ui.dynatree.getNode(el);\r\n/*\r\n\tvar iMax = 5;\r\n\twhile( el && iMax-- ) {\r\n\t\tif(el.dtnode) { return el.dtnode; }\r\n\t\tel = el.parentNode;\r\n\t}\r\n\treturn null;\r\n*/\r\n}\r\n\r\nfunction noop() {\r\n}\r\n\r\n\r\n/* Convert number to string and prepend +/-; return empty string for 0.*/\r\nfunction offsetString(n){\r\n\treturn n === 0 ? \"\" : (( n > 0 ) ? (\"+\" + n) : (\"\" + n));\r\n}\r\n\r\n\r\n/* Check browser version, since $.browser was removed in jQuery 1.9 */\r\nfunction _checkBrowser(){\r\n\tvar matched, browser;\r\n\tfunction uaMatch( ua ) {\r\n\t\tua = ua.toLowerCase();\r\n\t\tvar match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t [];\r\n\t\treturn {\r\n\t\t\tbrowser: match[ 1 ] || \"\",\r\n\t\t\tversion: match[ 2 ] || \"0\"\r\n\t\t};\r\n\t}\r\n\tmatched = uaMatch( navigator.userAgent );\r\n\tbrowser = {};\r\n\t if ( matched.browser ) {\r\n\t\t browser[ matched.browser ] = true;\r\n\t\t browser.version = matched.version;\r\n\t }\r\n\t if ( browser.chrome ) {\r\n\t\t browser.webkit = true;\r\n\t } else if ( browser.webkit ) {\r\n\t\t browser.safari = true;\r\n\t }\r\n\t return browser;\r\n}\r\n\r\n\r\n/** Compare two dotted version strings (like '10.2.3').\r\n * @returns {Integer} 0: v1 == v2, -1: v1 < v2, 1: v1 > v2\r\n */\r\nfunction versionCompare(v1, v2) {\r\n\tvar v1parts = (\"\" + v1).split(\".\"),\r\n\t\tv2parts = (\"\" + v2).split(\".\"),\r\n\t\tminLength = Math.min(v1parts.length, v2parts.length),\r\n\t\tp1, p2, i;\r\n\t// Compare tuple pair-by-pair.\r\n\tfor(i = 0; i < minLength; i++) {\r\n\t\t// Convert to integer if possible, because \"8\" > \"10\".\r\n\t\tp1 = parseInt(v1parts[i], 10);\r\n\t\tp2 = parseInt(v2parts[i], 10);\r\n\t\tif (isNaN(p1)){ p1 = v1parts[i]; }\r\n\t\tif (isNaN(p2)){ p2 = v2parts[i]; }\r\n\t\tif (p1 == p2) {\r\n\t\t\tcontinue;\r\n\t\t}else if (p1 > p2) {\r\n\t\t\treturn 1;\r\n\t\t}else if (p1 < p2) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\t// one operand is NaN\r\n\t\treturn NaN;\r\n\t}\r\n\t// The longer tuple is always considered 'greater'\r\n\tif (v1parts.length === v2parts.length) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn (v1parts.length < v2parts.length) ? -1 : 1;\r\n}\r\n\r\n\r\n//var BROWSER = jQuery.browser || _checkBrowser();\r\nvar BROWSER = _checkBrowser(); // issue 440\r\nvar jquerySupports = {\r\n\t// http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\r\n\tpositionMyOfs: versionCompare($.ui.version, \"1.9\") >= 0  //isVersionAtLeast($.ui.version, 1, 9)\r\n\t};\r\n\r\n\r\n/*************************************************************************\r\n *  Class DynaTreeNode\r\n */\r\nvar DynaTreeNode = Class.create();\r\n\r\nDynaTreeNode.prototype = {\r\n\tinitialize: function(parent, tree, data) {\r\n\t\t/**\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tthis.parent = parent;\r\n\t\tthis.tree = tree;\r\n\t\tif ( typeof data === \"string\" ){\r\n\t\t\tdata = { title: data };\r\n\t\t}\r\n//      if( !data.key ){\r\n\t\tif( data.key == null ){ // test for null OR undefined (issue 420)\r\n\t\t\tdata.key = \"_\" + tree._nodeCount++;\r\n\t\t}else{\r\n\t\t\tdata.key = \"\" + data.key; // issue 371\r\n\t\t}\r\n\t\tthis.data = $.extend({}, $.ui.dynatree.nodedatadefaults, data);\r\n\t\tthis.li = null; // not yet created\r\n\t\tthis.span = null; // not yet created\r\n\t\tthis.ul = null; // not yet created\r\n\t\tthis.childList = null; // no subnodes yet\r\n\t\tthis._isLoading = false; // Lazy content is being loaded\r\n\t\tthis.hasSubSel = false;\r\n\t\tthis.bExpanded = false;\r\n\t\tthis.bSelected = false;\r\n\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn \"DynaTreeNode<\" + this.data.key + \">: '\" + this.data.title + \"'\";\r\n\t},\r\n\r\n\ttoDict: function(recursive, callback) {\r\n\t\tvar node,\r\n\t\t\tdict = $.extend({}, this.data);\r\n\t\tdict.activate = ( this.tree.activeNode === this );\r\n\t\tdict.focus = ( this.tree.focusNode === this );\r\n\t\tdict.expand = this.bExpanded;\r\n\t\tdict.select = this.bSelected;\r\n\t\tif( callback ){\r\n\t\t\tcallback(dict);\r\n\t\t}\r\n\t\tif( recursive && this.childList ) {\r\n\t\t\tdict.children = [];\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++ ){\r\n\t\t\t\tnode = this.childList[i];\r\n\t\t\t\tif( !node.isStatusNode() ){\r\n\t\t\t\t\tdict.children.push(node.toDict(true, callback));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdelete dict.children;\r\n\t\t}\r\n\t\treturn dict;\r\n\t},\r\n\r\n\tfromDict: function(dict) {\r\n\t\t/**\r\n\t\t * Update node data. If dict contains 'children', then also replace\r\n\t\t * the hole sub tree.\r\n\t\t */\r\n\t\tvar children = dict.children;\r\n\t\tif(children === undefined){\r\n\t\t\tthis.data = $.extend(this.data, dict);\r\n\t\t\tthis.render();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdict = $.extend({}, dict);\r\n\t\tdict.children = undefined;\r\n\t\tthis.data = $.extend(this.data, dict);\r\n\t\tthis.removeChildren();\r\n\t\tthis.addChild(children);\r\n\t},\r\n\r\n\t_getInnerHtml: function() {\r\n\t\tvar tree = this.tree,\r\n\t\t\topts = tree.options,\r\n\t\t\tcache = tree.cache,\r\n\t\t\tlevel = this.getLevel(),\r\n\t\t\tdata = this.data,\r\n\t\t\tres = \"\",\r\n\t\t\timageSrc;\r\n\t\t// connector (expanded, expandable or simple)\r\n\t\tif( level < opts.minExpandLevel ) {\r\n\t\t\tif(level > 1){\r\n\t\t\t\tres += cache.tagConnector;\r\n\t\t\t}\r\n\t\t\t// .. else (i.e. for root level) skip expander/connector altogether\r\n\t\t} else if( this.hasChildren() !== false ) {\r\n\t\t\tres += cache.tagExpander;\r\n\t\t} else {\r\n\t\t\tres += cache.tagConnector;\r\n\t\t}\r\n\t\t// Checkbox mode\r\n\t\tif( opts.checkbox && data.hideCheckbox !== true && !data.isStatusNode ) {\r\n\t\t\tres += cache.tagCheckbox;\r\n\t\t}\r\n\t\t// folder or doctype icon\r\n\t\tif ( data.icon ) {\r\n\t\t\tif (data.icon.charAt(0) === \"/\"){\r\n\t\t\t\timageSrc = data.icon;\r\n\t\t\t}else{\r\n\t\t\t\timageSrc = opts.imagePath + data.icon;\r\n\t\t\t}\r\n\t\t\tres += \"<img src='\" + imageSrc + \"' alt='' />\";\r\n\t\t} else if ( data.icon === false ) {\r\n\t\t\t// icon == false means 'no icon'\r\n//          noop(); // keep JSLint happy\r\n\t\t} else if ( data.iconClass ) {\r\n\t\t\tres +=  \"<span class='\" + \" \" + data.iconClass +  \"'></span>\";\r\n\t\t} else {\r\n\t\t\t// icon == null means 'default icon'\r\n\t\t\tres += cache.tagNodeIcon;\r\n\t\t}\r\n\t\t// node title\r\n\t\tvar nodeTitle = \"\";\r\n\t\tif ( opts.onCustomRender ){\r\n\t\t\tnodeTitle = opts.onCustomRender.call(tree, this) || \"\";\r\n\t\t}\r\n\t\tif(!nodeTitle){\r\n\t\t\tvar tooltip = data.tooltip ? ' title=\"' + data.tooltip.replace(/\\\"/g, '&quot;') + '\"' : '',\r\n\t\t\t\thref = data.href || \"#\";\r\n\t\t\tif( opts.noLink || data.noLink ) {\r\n\t\t\t\tnodeTitle = '<span style=\"display:inline-block;\" class=\"' + opts.classNames.title + '\"' + tooltip + '>' + data.title + '</span>';\r\n//              this.tree.logDebug(\"nodeTitle: \" + nodeTitle);\r\n\t\t\t} else {\r\n\t\t\t\tnodeTitle = '<a href=\"' + href + '\" class=\"' + opts.classNames.title + '\"' + tooltip + '>' + data.title + '</a>';\r\n\t\t\t}\r\n\t\t}\r\n\t\tres += nodeTitle;\r\n\t\treturn res;\r\n\t},\r\n\r\n\r\n\t_fixOrder: function() {\r\n\t\t/**\r\n\t\t * Make sure, that <li> order matches childList order.\r\n\t\t */\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl || !this.ul ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar childLI = this.ul.firstChild;\r\n\t\tfor(var i=0, l=cl.length-1; i<l; i++) {\r\n\t\t\tvar childNode1 = cl[i];\r\n\t\t\tvar childNode2 = childLI.dtnode;\r\n\t\t\tif( childNode1 !== childNode2 ) {\r\n\t\t\t\tthis.tree.logDebug(\"_fixOrder: mismatch at index \" + i + \": \" + childNode1 + \" != \" + childNode2);\r\n\t\t\t\tthis.ul.insertBefore(childNode1.li, childNode2.li);\r\n\t\t\t} else {\r\n\t\t\t\tchildLI = childLI.nextSibling;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\trender: function(useEffects, includeInvisible) {\r\n\t\t/**\r\n\t\t * Create <li><span>..</span> .. </li> tags for this node.\r\n\t\t *\r\n\t\t * <li id='KEY' dtnode=NODE> // This div contains the node's span and list of child div's.\r\n\t\t *   <span class='title'>S S S A</span> // Span contains graphic spans and title <a> tag\r\n\t\t *   <ul> // only present, when node has children\r\n\t\t *       <li id='KEY' dtnode=NODE>child1</li>\r\n\t\t *       <li id='KEY' dtnode=NODE>child2</li>\r\n\t\t *   </ul>\r\n\t\t * </li>\r\n\t\t */\r\n//      this.tree.logDebug(\"%s.render(%s)\", this, useEffects);\r\n\t\t// ---\r\n\t\tvar tree = this.tree,\r\n\t\t\tparent = this.parent,\r\n\t\t\tdata = this.data,\r\n\t\t\topts = tree.options,\r\n\t\t\tcn = opts.classNames,\r\n\t\t\tisLastSib = this.isLastSibling(),\r\n\t\t\tfirstTime = false;\r\n\r\n\t\tif( !parent && !this.ul ) {\r\n\t\t\t// Root node has only a <ul>\r\n\t\t\tthis.li = this.span = null;\r\n\t\t\tthis.ul = document.createElement(\"ul\");\r\n\t\t\tif( opts.minExpandLevel > 1 ){\r\n\t\t\t\tthis.ul.className = cn.container + \" \" + cn.noConnector;\r\n\t\t\t}else{\r\n\t\t\t\tthis.ul.className = cn.container;\r\n\t\t\t}\r\n\t\t} else if( parent ) {\r\n\t\t\t// Create <li><span /> </li>\r\n\t\t\tif( ! this.li ) {\r\n\t\t\t\tfirstTime = true;\r\n\t\t\t\tthis.li = document.createElement(\"li\");\r\n\t\t\t\tthis.li.dtnode = this;\r\n\t\t\t\tif( data.key && opts.generateIds ){\r\n\t\t\t\t\tthis.li.id = opts.idPrefix + data.key;\r\n\t\t\t\t}\r\n\t\t\t\tthis.span = document.createElement(\"span\");\r\n\t\t\t\tthis.span.className = cn.title;\r\n\t\t\t\tthis.li.appendChild(this.span);\r\n\r\n\t\t\t\tif( !parent.ul ) {\r\n\t\t\t\t\t// This is the parent's first child: create UL tag\r\n\t\t\t\t\t// (Hidden, because it will be\r\n\t\t\t\t\tparent.ul = document.createElement(\"ul\");\r\n\t\t\t\t\tparent.ul.style.display = \"none\";\r\n\t\t\t\t\tparent.li.appendChild(parent.ul);\r\n//                  if( opts.minExpandLevel > this.getLevel() ){\r\n//                      parent.ul.className = cn.noConnector;\r\n//                  }\r\n\t\t\t\t}\r\n\t\t\t\t// set node connector images, links and text\r\n//              this.span.innerHTML = this._getInnerHtml();\r\n\r\n\t\t\t\tparent.ul.appendChild(this.li);\r\n\t\t\t}\r\n\t\t\t// set node connector images, links and text\r\n\t\t\tthis.span.innerHTML = this._getInnerHtml();\r\n\t\t\t// Set classes for current status\r\n\t\t\tvar cnList = [];\r\n\t\t\tcnList.push(cn.node);\r\n\t\t\tif( data.isFolder ){\r\n\t\t\t\tcnList.push(cn.folder);\r\n\t\t\t}\r\n\t\t\tif( this.bExpanded ){\r\n\t\t\t\tcnList.push(cn.expanded);\r\n\t\t\t}\r\n\t\t\tif( this.hasChildren() !== false ){\r\n\t\t\t\tcnList.push(cn.hasChildren);\r\n\t\t\t}\r\n\t\t\tif( data.isLazy && this.childList === null ){\r\n\t\t\t\tcnList.push(cn.lazy);\r\n\t\t\t}\r\n\t\t\tif( isLastSib ){\r\n\t\t\t\tcnList.push(cn.lastsib);\r\n\t\t\t}\r\n\t\t\tif( this.bSelected ){\r\n\t\t\t\tcnList.push(cn.selected);\r\n\t\t\t}\r\n\t\t\tif( this.hasSubSel ){\r\n\t\t\t\tcnList.push(cn.partsel);\r\n\t\t\t}\r\n\t\t\tif( tree.activeNode === this ){\r\n\t\t\t\tcnList.push(cn.active);\r\n\t\t\t}\r\n\t\t\tif( data.addClass ){\r\n\t\t\t\tcnList.push(data.addClass);\r\n\t\t\t}\r\n\t\t\t// IE6 doesn't correctly evaluate multiple class names,\r\n\t\t\t// so we create combined class names that can be used in the CSS\r\n\t\t\tcnList.push(cn.combinedExpanderPrefix\r\n\t\t\t\t\t+ (this.bExpanded ? \"e\" : \"c\")\r\n\t\t\t\t\t+ (data.isLazy && this.childList === null ? \"d\" : \"\")\r\n\t\t\t\t\t+ (isLastSib ? \"l\" : \"\")\r\n\t\t\t\t\t);\r\n\t\t\tcnList.push(cn.combinedIconPrefix\r\n\t\t\t\t\t+ (this.bExpanded ? \"e\" : \"c\")\r\n\t\t\t\t\t+ (data.isFolder ? \"f\" : \"\")\r\n\t\t\t\t\t);\r\n\t\t\tthis.span.className = cnList.join(\" \");\r\n\r\n\t\t\t// TODO: we should not set this in the <span> tag also, if we set it here:\r\n\t\t\tthis.li.className = isLastSib ? cn.lastsib : \"\";\r\n\r\n\t\t\t// Allow tweaking, binding, after node was created for the first time\r\n\t\t\tif(firstTime && opts.onCreate){\r\n\t\t\t\topts.onCreate.call(tree, this, this.span);\r\n\t\t\t}\r\n\t\t\t// Hide children, if node is collapsed\r\n//          this.ul.style.display = ( this.bExpanded || !parent ) ? \"\" : \"none\";\r\n\t\t\t// Allow tweaking after node state was rendered\r\n\t\t\tif(opts.onRender){\r\n\t\t\t\topts.onRender.call(tree, this, this.span);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Visit child nodes\r\n\t\tif( (this.bExpanded || includeInvisible === true) && this.childList ) {\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++) {\r\n\t\t\t\tthis.childList[i].render(false, includeInvisible);\r\n\t\t\t}\r\n\t\t\t// Make sure the tag order matches the child array\r\n\t\t\tthis._fixOrder();\r\n\t\t}\r\n\t\t// Hide children, if node is collapsed\r\n\t\tif( this.ul ) {\r\n\t\t\tvar isHidden = (this.ul.style.display === \"none\");\r\n\t\t\tvar isExpanded = !!this.bExpanded;\r\n//          logMsg(\"isHidden:%s\", isHidden);\r\n\t\t\tif( useEffects && opts.fx && (isHidden === isExpanded) ) {\r\n\t\t\t\tvar duration = opts.fx.duration || 200;\r\n\t\t\t\t$(this.ul).animate(opts.fx, duration);\r\n\t\t\t} else {\r\n\t\t\t\tthis.ul.style.display = ( this.bExpanded || !parent ) ? \"\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t/** Return '/id1/id2/id3'. */\r\n\tgetKeyPath: function(excludeSelf) {\r\n\t\tvar path = [],\r\n\t\t\tsep = this.tree.options.keyPathSeparator;\r\n\r\n\t\tthis.visitParents(function(node){\r\n\t\t\tif(node.parent){\r\n\t\t\t\tpath.unshift(node.data.key);\r\n\t\t\t}\r\n\t\t}, !excludeSelf);\r\n\t\treturn sep + path.join(sep);\r\n\t},\r\n\r\n\tgetParent: function() {\r\n\t\treturn this.parent;\r\n\t},\r\n\r\n\tgetChildren: function() {\r\n\t\tif(this.hasChildren() === undefined){\r\n\t\t\treturn undefined; // Lazy node: unloaded, currently loading, or load error\r\n\t\t}\r\n\t\treturn this.childList;\r\n\t},\r\n\r\n\t/** Check if node has children (returns undefined, if not sure). */\r\n\thasChildren: function() {\r\n\t\tif(this.data.isLazy){\r\n\t\t\tif(this.childList === null || this.childList === undefined){\r\n\t\t\t\t// Not yet loaded\r\n\t\t\t\treturn undefined;\r\n\t\t\t}else if(this.childList.length === 0){\r\n\t\t\t\t// Loaded, but response was empty\r\n\t\t\t\treturn false;\r\n\t\t\t}else if(this.childList.length === 1 && this.childList[0].isStatusNode()){\r\n\t\t\t\t// Currently loading or load error\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn !!this.childList;\r\n\t},\r\n\r\n\tisFirstSibling: function() {\r\n\t\tvar p = this.parent;\r\n\t\treturn !p || p.childList[0] === this;\r\n\t},\r\n\r\n\tisLastSibling: function() {\r\n\t\tvar p = this.parent;\r\n\t\treturn !p || p.childList[p.childList.length-1] === this;\r\n\t},\r\n\r\n\tisLoading: function() {\r\n\t\treturn !!this._isLoading;\r\n\t},\r\n\r\n\tgetPrevSibling: function() {\r\n\t\tif( !this.parent ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor(var i=1, l=ac.length; i<l; i++){ // start with 1, so prev(first) = null\r\n\t\t\tif( ac[i] === this ){\r\n\t\t\t\treturn ac[i-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tgetNextSibling: function() {\r\n\t\tif( !this.parent ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor(var i=0, l=ac.length-1; i<l; i++){ // up to length-2, so next(last) = null\r\n\t\t\tif( ac[i] === this ){\r\n\t\t\t\treturn ac[i+1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tisStatusNode: function() {\r\n\t\treturn (this.data.isStatusNode === true);\r\n\t},\r\n\r\n\tisChildOf: function(otherNode) {\r\n\t\treturn (this.parent && this.parent === otherNode);\r\n\t},\r\n\r\n\tisDescendantOf: function(otherNode) {\r\n\t\tif(!otherNode){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar p = this.parent;\r\n\t\twhile( p ) {\r\n\t\t\tif( p === otherNode ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\tcountChildren: function() {\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl ){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar n = cl.length;\r\n\t\tfor(var i=0, l=n; i<l; i++){\r\n\t\t\tvar child = cl[i];\r\n\t\t\tn += child.countChildren();\r\n\t\t}\r\n\t\treturn n;\r\n\t},\r\n\r\n\t/**Sort child list by title.\r\n\t * cmd: optional compare function.\r\n\t * deep: optional: pass true to sort all descendant nodes.\r\n\t */\r\n\tsortChildren: function(cmp, deep) {\r\n\t\tvar cl = this.childList;\r\n\t\tif( !cl ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcmp = cmp || function(a, b) {\r\n//          return a.data.title === b.data.title ? 0 : a.data.title > b.data.title ? 1 : -1;\r\n\t\t\tvar x = a.data.title.toLowerCase(),\r\n\t\t\t\ty = b.data.title.toLowerCase();\r\n\t\t\treturn x === y ? 0 : x > y ? 1 : -1;\r\n\t\t\t};\r\n\t\tcl.sort(cmp);\r\n\t\tif( deep ){\r\n\t\t\tfor(var i=0, l=cl.length; i<l; i++){\r\n\t\t\t\tif( cl[i].childList ){\r\n\t\t\t\t\tcl[i].sortChildren(cmp, \"$norender$\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( deep !== \"$norender$\" ){\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t_setStatusNode: function(data) {\r\n\t\t// Create, modify or remove the status child node (pass 'null', to remove it).\r\n\t\tvar firstChild = ( this.childList ? this.childList[0] : null );\r\n\t\tif( !data ) {\r\n\t\t\tif ( firstChild && firstChild.isStatusNode()) {\r\n\t\t\t\ttry{\r\n\t\t\t\t\t// I've seen exceptions here with loadKeyPath...\r\n\t\t\t\t\tif(this.ul){\r\n\t\t\t\t\t\tthis.ul.removeChild(firstChild.li);\r\n\t\t\t\t\t\tfirstChild.li = null; // avoid leaks (issue 215)\r\n\t\t\t\t\t}\r\n\t\t\t\t}catch(e){}\r\n\t\t\t\tif( this.childList.length === 1 ){\r\n\t\t\t\t\tthis.childList = [];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.childList.shift();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( firstChild ) {\r\n\t\t\tdata.isStatusNode = true;\r\n\t\t\tdata.key = \"_statusNode\";\r\n\t\t\tfirstChild.data = data;\r\n\t\t\tfirstChild.render();\r\n\t\t} else {\r\n\t\t\tdata.isStatusNode = true;\r\n\t\t\tdata.key = \"_statusNode\";\r\n\t\t\tfirstChild = this.addChild(data);\r\n\t\t}\r\n\t},\r\n\r\n\tsetLazyNodeStatus: function(lts, opts) {\r\n\t\tvar tooltip = (opts && opts.tooltip) ? opts.tooltip : null,\r\n\t\t\tinfo = (opts && opts.info) ? \" (\" + opts.info + \")\" : \"\";\r\n\t\tswitch( lts ) {\r\n\t\t\tcase DTNodeStatus_Ok:\r\n\t\t\t\tthis._setStatusNode(null);\r\n\t\t\t\t$(this.span).removeClass(this.tree.options.classNames.nodeLoading);\r\n\t\t\t\tthis._isLoading = false;\r\n//              this.render();\r\n\t\t\t\tif( this.tree.options.autoFocus ) {\r\n\t\t\t\t\tif( this === this.tree.tnRoot && this.childList && this.childList.length > 0) {\r\n\t\t\t\t\t\t// special case: using ajaxInit\r\n\t\t\t\t\t\tthis.childList[0].focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DTNodeStatus_Loading:\r\n\t\t\t\tthis._isLoading = true;\r\n\t\t\t\t$(this.span).addClass(this.tree.options.classNames.nodeLoading);\r\n\t\t\t\t// The root is hidden, so we set a temporary status child\r\n\t\t\t\tif(!this.parent){\r\n\t\t\t\t\tthis._setStatusNode({\r\n\t\t\t\t\t\ttitle: this.tree.options.strings.loading + info,\r\n\t\t\t\t\t\ttooltip: tooltip,\r\n\t\t\t\t\t\taddClass: this.tree.options.classNames.nodeWait\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DTNodeStatus_Error:\r\n\t\t\t\tthis._isLoading = false;\r\n//              $(this.span).addClass(this.tree.options.classNames.nodeError);\r\n\t\t\t\tthis._setStatusNode({\r\n\t\t\t\t\ttitle: this.tree.options.strings.loadError + info,\r\n\t\t\t\t\ttooltip: tooltip,\r\n\t\t\t\t\taddClass: this.tree.options.classNames.nodeError\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Bad LazyNodeStatus: '\" + lts + \"'.\";\r\n\t\t}\r\n\t},\r\n\r\n\t_parentList: function(includeRoot, includeSelf) {\r\n\t\tvar l = [];\r\n\t\tvar dtn = includeSelf ? this : this.parent;\r\n\t\twhile( dtn ) {\r\n\t\t\tif( includeRoot || dtn.parent ){\r\n\t\t\t\tl.unshift(dtn);\r\n\t\t\t}\r\n\t\t\tdtn = dtn.parent;\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\tgetLevel: function() {\r\n\t\t/**\r\n\t\t * Return node depth. 0: System root node, 1: visible top-level node.\r\n\t\t */\r\n\t\tvar level = 0;\r\n\t\tvar dtn = this.parent;\r\n\t\twhile( dtn ) {\r\n\t\t\tlevel++;\r\n\t\t\tdtn = dtn.parent;\r\n\t\t}\r\n\t\treturn level;\r\n\t},\r\n\r\n\t_getTypeForOuterNodeEvent: function(event) {\r\n\t\t/** Return the inner node span (title, checkbox or expander) if\r\n\t\t *  event.target points to the outer span.\r\n\t\t *  This function should fix issue #93:\r\n\t\t *  FF2 ignores empty spans, when generating events (returning the parent instead).\r\n\t\t */\r\n\t\tvar cns = this.tree.options.classNames;\r\n\t\tvar target = event.target;\r\n\t\t// Only process clicks on an outer node span (probably due to a FF2 event handling bug)\r\n\t\tif( target.className.indexOf(cns.node) < 0 ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t// Event coordinates, relative to outer node span:\r\n\t\tvar eventX = event.pageX - target.offsetLeft;\r\n\t\tvar eventY = event.pageY - target.offsetTop;\r\n\r\n\t\tfor(var i=0, l=target.childNodes.length; i<l; i++) {\r\n\t\t\tvar cn = target.childNodes[i];\r\n\t\t\tvar x = cn.offsetLeft - target.offsetLeft;\r\n\t\t\tvar y = cn.offsetTop - target.offsetTop;\r\n\t\t\tvar nx = cn.clientWidth, ny = cn.clientHeight;\r\n//          alert (cn.className + \": \" + x + \", \" + y + \", s:\" + nx + \", \" + ny);\r\n\t\t\tif( eventX >= x && eventX <= (x+nx) && eventY >= y && eventY <= (y+ny) ) {\r\n//              alert(\"HIT \"+ cn.className);\r\n\t\t\t\tif( cn.className==cns.title ){\r\n\t\t\t\t\treturn \"title\";\r\n\t\t\t\t}else if( cn.className==cns.expander ){\r\n\t\t\t\t\treturn \"expander\";\r\n\t\t\t\t}else if( cn.className==cns.checkbox || cn.className==cns.radio ){\r\n\t\t\t\t\treturn \"checkbox\";\r\n\t\t\t\t}else if( cn.className==cns.nodeIcon ){\r\n\t\t\t\t\treturn \"icon\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"prefix\";\r\n\t},\r\n\r\n\tgetEventTargetType: function(event) {\r\n\t\t// Return the part of a node, that a click event occurred on.\r\n\t\t// Note: there is no check, if the event was fired on THIS node.\r\n\t\tvar tcn = event && event.target ? event.target.className : \"\",\r\n\t\t\tcns = this.tree.options.classNames;\r\n\r\n\t\tif( tcn.indexOf(cns.title) >= 0 ){\r\n\t\t\treturn \"title\";\r\n\t\t}else if( tcn.indexOf(cns.expander) >= 0 ){\r\n\t\t\treturn \"expander\";\r\n\t\t}else if( tcn.indexOf(cns.checkbox) >= 0 || tcn.indexOf(cns.radio) >= 0 ){\r\n\t\t\treturn \"checkbox\";\r\n\t\t}else if( tcn.indexOf(cns.nodeIcon) >= 0 ){\r\n\t\t\treturn \"icon\";\r\n\t\t}else if( tcn.indexOf(cns.empty) >= 0 || tcn.indexOf(cns.vline) >= 0 || tcn.indexOf(cns.connector) >= 0 ){\r\n\t\t\treturn \"prefix\";\r\n\t\t}else if( tcn.indexOf(cns.node) >= 0 ){\r\n\t\t\t// FIX issue #93\r\n\t\t\treturn this._getTypeForOuterNodeEvent(event);\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\tisVisible: function() {\r\n\t\t// Return true, if all parents are expanded.\r\n\t\tvar parents = this._parentList(true, false);\r\n\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\tif( ! parents[i].bExpanded ){ return false; }\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\tmakeVisible: function() {\r\n\t\t// Make sure, all parents are expanded\r\n\t\tvar parents = this._parentList(true, false);\r\n\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\tparents[i]._expand(true);\r\n\t\t}\r\n\t},\r\n\r\n\tfocus: function() {\r\n\t\t// TODO: check, if we already have focus\r\n//      this.tree.logDebug(\"dtnode.focus(): %o\", this);\r\n\t\tthis.makeVisible();\r\n\t\ttry {\r\n\t\t\t$(this.span).find(\">a\").focus();\r\n\t\t} catch(e) { }\r\n\t},\r\n\r\n\tisFocused: function() {\r\n\t\treturn (this.tree.tnFocused === this);\r\n\t},\r\n\r\n\t_activate: function(flag, fireEvents) {\r\n\t\t// (De)Activate - but not focus - this node.\r\n\t\tthis.tree.logDebug(\"dtnode._activate(%o, fireEvents=%o) - %o\", flag, fireEvents, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( this.data.isStatusNode ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif( flag ) {\r\n\t\t\tif ( fireEvents && opts.onQueryActivate && opts.onQueryActivate.call(this.tree, flag, this) === false ){\r\n\t\t\t\treturn; // Callback returned false\r\n\t\t\t}\r\n\t\t\t// Activate\r\n\t\t\tif( this.tree.activeNode ) {\r\n\t\t\t\tif( this.tree.activeNode === this ){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.tree.activeNode.deactivate();\r\n\t\t\t}\r\n\t\t\tif( opts.activeVisible ){\r\n\t\t\t\tthis.makeVisible();\r\n\t\t\t}\r\n\t\t\tthis.tree.activeNode = this;\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-active\", this.data.key, opts.cookie);\r\n\t\t\t}\r\n\t\t\tthis.tree.persistence.activeKey = this.data.key;\r\n\t\t\t$(this.span).addClass(opts.classNames.active);\r\n\t\t\tif ( fireEvents && opts.onActivate ){\r\n\t\t\t\topts.onActivate.call(this.tree, this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Deactivate\r\n\t\t\tif( this.tree.activeNode === this ) {\r\n\t\t\t\tif ( opts.onQueryActivate && opts.onQueryActivate.call(this.tree, false, this) === false ){\r\n\t\t\t\t\treturn; // Callback returned false\r\n\t\t\t\t}\r\n\t\t\t\t$(this.span).removeClass(opts.classNames.active);\r\n\t\t\t\tif( opts.persist ) {\r\n\t\t\t\t\t// Note: we don't pass null, but ''. So the cookie is not deleted.\r\n\t\t\t\t\t// If we pass null, we also have to pass a COPY of opts, because $cookie will override opts.expires (issue 84)\r\n\t\t\t\t\t$.cookie(opts.cookieId + \"-active\", \"\", opts.cookie);\r\n\t\t\t\t}\r\n\t\t\t\tthis.tree.persistence.activeKey = null;\r\n\t\t\t\tthis.tree.activeNode = null;\r\n\t\t\t\tif ( fireEvents && opts.onDeactivate ){\r\n\t\t\t\t\topts.onDeactivate.call(this.tree, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tactivate: function() {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode.activate(): %o\", this);\r\n\t\tthis._activate(true, true);\r\n\t},\r\n\r\n\tactivateSilently: function() {\r\n\t\tthis._activate(true, false);\r\n\t},\r\n\r\n\tdeactivate: function() {\r\n//      this.tree.logDebug(\"dtnode.deactivate(): %o\", this);\r\n\t\tthis._activate(false, true);\r\n\t},\r\n\r\n\tisActive: function() {\r\n\t\treturn (this.tree.activeNode === this);\r\n\t},\r\n\r\n\t_userActivate: function() {\r\n\t\t// Handle user click / [space] / [enter], according to clickFolderMode.\r\n\t\tvar activate = true;\r\n\t\tvar expand = false;\r\n\t\tif ( this.data.isFolder ) {\r\n\t\t\tswitch( this.tree.options.clickFolderMode ) {\r\n\t\t\tcase 2:\r\n\t\t\t\tactivate = false;\r\n\t\t\t\texpand = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tactivate = expand = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( this.parent === null ) {\r\n\t\t\texpand = false;\r\n\t\t}\r\n\t\tif( expand ) {\r\n\t\t\tthis.toggleExpand();\r\n\t\t\tthis.focus();\r\n\t\t}\r\n\t\tif( activate ) {\r\n\t\t\tthis.activate();\r\n\t\t}\r\n\t},\r\n\r\n\t_setSubSel: function(hasSubSel) {\r\n\t\tif( hasSubSel ) {\r\n\t\t\tthis.hasSubSel = true;\r\n\t\t\t$(this.span).addClass(this.tree.options.classNames.partsel);\r\n\t\t} else {\r\n\t\t\tthis.hasSubSel = false;\r\n\t\t\t$(this.span).removeClass(this.tree.options.classNames.partsel);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * Fix selection and partsel status, of parent nodes, according to current status of\r\n\t * end nodes.\r\n\t */\r\n\t_updatePartSelectionState: function() {\r\n//      alert(\"_updatePartSelectionState \" + this);\r\n//      this.tree.logDebug(\"_updatePartSelectionState() - %o\", this);\r\n\t\tvar sel;\r\n\t\t// Return `true` or `false` for end nodes and remove part-sel flag\r\n\t\tif( ! this.hasChildren() ){\r\n\t\t\tsel = (this.bSelected && !this.data.unselectable && !this.data.isStatusNode);\r\n\t\t\tthis._setSubSel(false);\r\n\t\t\treturn sel;\r\n\t\t}\r\n\t\t// Return `true`, `false`, or `undefined` for parent nodes\r\n\t\tvar i, l,\r\n\t\t\tcl = this.childList,\r\n\t\t\tallSelected = true,\r\n\t\t\tallDeselected = true;\r\n\t\tfor(i=0, l=cl.length; i<l;  i++) {\r\n\t\t\tvar n = cl[i],\r\n\t\t\t\ts = n._updatePartSelectionState();\r\n\t\t\tif( s !== false){\r\n\t\t\t\tallDeselected = false;\r\n\t\t\t}\r\n\t\t\tif( s !== true){\r\n\t\t\t\tallSelected = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( allSelected ){\r\n\t\t\tsel = true;\r\n\t\t} else if ( allDeselected ){\r\n\t\t\tsel = false;\r\n\t\t} else {\r\n\t\t\tsel = undefined;\r\n\t\t}\r\n\t\tthis._setSubSel(sel === undefined);\r\n\t\tthis.bSelected = (sel === true);\r\n\t\treturn sel;\r\n\t},\r\n\r\n\t/**\r\n\t * Fix selection status, after this node was (de)selected in multi-hier mode.\r\n\t * This includes (de)selecting all children.\r\n\t */\r\n\t_fixSelectionState: function() {\r\n//      alert(\"_fixSelectionState \" + this);\r\n//      this.tree.logDebug(\"_fixSelectionState(%s) - %o\", this.bSelected, this);\r\n\t\tvar p, i, l;\r\n\t\tif( this.bSelected ) {\r\n\t\t\t// Select all children\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode.parent._setSubSel(true);\r\n\t\t\t\tif(!node.data.unselectable){\r\n\t\t\t\t\tnode._select(true, false, false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Select parents, if all children are selected\r\n\t\t\tp = this.parent;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tp._setSubSel(true);\r\n\t\t\t\tvar allChildsSelected = true;\r\n\t\t\t\tfor(i=0, l=p.childList.length; i<l;  i++) {\r\n\t\t\t\t\tvar n = p.childList[i];\r\n\t\t\t\t\tif( !n.bSelected && !n.data.isStatusNode && !n.data.unselectable) {\r\n\t\t\t\t\t// issue 305 proposes this:\r\n//                  if( !n.bSelected && !n.data.isStatusNode ) {\r\n\t\t\t\t\t\tallChildsSelected = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif( allChildsSelected ){\r\n\t\t\t\t\tp._select(true, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Deselect all children\r\n\t\t\tthis._setSubSel(false);\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode._setSubSel(false);\r\n\t\t\t\tnode._select(false, false, false);\r\n\t\t\t});\r\n\t\t\t// Deselect parents, and recalc hasSubSel\r\n\t\t\tp = this.parent;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tp._select(false, false, false);\r\n\t\t\t\tvar isPartSel = false;\r\n\t\t\t\tfor(i=0, l=p.childList.length; i<l;  i++) {\r\n\t\t\t\t\tif( p.childList[i].bSelected || p.childList[i].hasSubSel ) {\r\n\t\t\t\t\t\tisPartSel = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp._setSubSel(isPartSel);\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_select: function(sel, fireEvents, deep) {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode._select(%o) - %o\", sel, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( this.data.isStatusNode ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//\r\n\t\tif( this.bSelected === sel ) {\r\n//          this.tree.logDebug(\"dtnode._select(%o) IGNORED - %o\", sel, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Allow event listener to abort selection\r\n\t\tif ( fireEvents && opts.onQuerySelect && opts.onQuerySelect.call(this.tree, sel, this) === false ){\r\n\t\t\treturn; // Callback returned false\r\n\t\t}\r\n\t\t// Force single-selection\r\n\t\tif( opts.selectMode==1 && sel ) {\r\n\t\t\tthis.tree.visit(function(node){\r\n\t\t\t\tif( node.bSelected ) {\r\n\t\t\t\t\t// Deselect; assuming that in selectMode:1 there's max. one other selected node\r\n\t\t\t\t\tnode._select(false, false, false);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.bSelected = sel;\r\n//        this.tree._changeNodeList(\"select\", this, sel);\r\n\r\n\t\tif( sel ) {\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\tthis.tree.persistence.addSelect(this.data.key);\r\n\t\t\t}\r\n\t\t\t$(this.span).addClass(opts.classNames.selected);\r\n\r\n\t\t\tif( deep && opts.selectMode === 3 ){\r\n\t\t\t\tthis._fixSelectionState();\r\n\t\t\t}\r\n\t\t\tif ( fireEvents && opts.onSelect ){\r\n\t\t\t\topts.onSelect.call(this.tree, true, this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\tthis.tree.persistence.clearSelect(this.data.key);\r\n\t\t\t}\r\n\t\t\t$(this.span).removeClass(opts.classNames.selected);\r\n\r\n\t\t\tif( deep && opts.selectMode === 3 ){\r\n\t\t\t\tthis._fixSelectionState();\r\n\t\t\t}\r\n\t\t\tif ( fireEvents && opts.onSelect ){\r\n\t\t\t\topts.onSelect.call(this.tree, false, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tselect: function(sel) {\r\n\t\t// Select - but not focus - this node.\r\n//      this.tree.logDebug(\"dtnode.select(%o) - %o\", sel, this);\r\n\t\tif( this.data.unselectable ){\r\n\t\t\treturn this.bSelected;\r\n\t\t}\r\n\t\treturn this._select(sel!==false, true, true);\r\n\t},\r\n\r\n\ttoggleSelect: function() {\r\n//      this.tree.logDebug(\"dtnode.toggleSelect() - %o\", this);\r\n\t\treturn this.select(!this.bSelected);\r\n\t},\r\n\r\n\tisSelected: function() {\r\n\t\treturn this.bSelected;\r\n\t},\r\n\r\n\tisLazy: function() {\r\n\t\treturn !!this.data.isLazy;\r\n\t},\r\n\r\n\t_loadContent: function() {\r\n\t\ttry {\r\n\t\t\tvar opts = this.tree.options;\r\n\t\t\tthis.tree.logDebug(\"_loadContent: start - %o\", this);\r\n\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Loading);\r\n\t\t\tif( true === opts.onLazyRead.call(this.tree, this) ) {\r\n\t\t\t\t// If function returns 'true', we assume that the loading is done:\r\n\t\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Ok);\r\n\t\t\t\t// Otherwise (i.e. if the loading was started as an asynchronous process)\r\n\t\t\t\t// the onLazyRead(dtnode) handler is expected to call dtnode.setLazyNodeStatus(DTNodeStatus_Ok/_Error) when done.\r\n\t\t\t\tthis.tree.logDebug(\"_loadContent: succeeded - %o\", this);\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tthis.tree.logWarning(\"_loadContent: failed - %o\", e);\r\n\t\t\tthis.setLazyNodeStatus(DTNodeStatus_Error, {tooltip: \"\"+e});\r\n\t\t}\r\n\t},\r\n\r\n\t_expand: function(bExpand, forceSync) {\r\n\t\tif( this.bExpanded === bExpand ) {\r\n\t\t\tthis.tree.logDebug(\"dtnode._expand(%o) IGNORED - %o\", bExpand, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.tree.logDebug(\"dtnode._expand(%o) - %o\", bExpand, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif( !bExpand && this.getLevel() < opts.minExpandLevel ) {\r\n\t\t\tthis.tree.logDebug(\"dtnode._expand(%o) prevented collapse - %o\", bExpand, this);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( opts.onQueryExpand && opts.onQueryExpand.call(this.tree, bExpand, this) === false ){\r\n\t\t\treturn; // Callback returned false\r\n\t\t}\r\n\t\tthis.bExpanded = bExpand;\r\n\r\n\t\t// Persist expand state\r\n\t\tif( opts.persist ) {\r\n\t\t\tif( bExpand ){\r\n\t\t\t\tthis.tree.persistence.addExpand(this.data.key);\r\n\t\t\t}else{\r\n\t\t\t\tthis.tree.persistence.clearExpand(this.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Do not apply animations in init phase, or before lazy-loading\r\n\t\tvar allowEffects = !(this.data.isLazy && this.childList === null)\r\n\t\t\t&& !this._isLoading\r\n\t\t\t&& !forceSync;\r\n\t\tthis.render(allowEffects);\r\n\r\n\t\t// Auto-collapse mode: collapse all siblings\r\n\t\tif( this.bExpanded && this.parent && opts.autoCollapse ) {\r\n\t\t\tvar parents = this._parentList(false, true);\r\n\t\t\tfor(var i=0, l=parents.length; i<l; i++){\r\n\t\t\t\tparents[i].collapseSiblings();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If the currently active node is now hidden, deactivate it\r\n\t\tif( opts.activeVisible && this.tree.activeNode && ! this.tree.activeNode.isVisible() ) {\r\n\t\t\tthis.tree.activeNode.deactivate();\r\n\t\t}\r\n\t\t// Expanding a lazy node: set 'loading...' and call callback\r\n\t\tif( bExpand && this.data.isLazy && this.childList === null && !this._isLoading ) {\r\n\t\t\tthis._loadContent();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( opts.onExpand ){\r\n\t\t\topts.onExpand.call(this.tree, bExpand, this);\r\n\t\t}\r\n\t},\r\n\r\n\tisExpanded: function() {\r\n\t\treturn this.bExpanded;\r\n\t},\r\n\r\n\texpand: function(flag) {\r\n\t\tflag = (flag !== false);\r\n\t\tif( !this.childList && !this.data.isLazy && flag ){\r\n\t\t\treturn; // Prevent expanding empty nodes\r\n\t\t} else if( this.parent === null && !flag ){\r\n\t\t\treturn; // Prevent collapsing the root\r\n\t\t}\r\n\t\tthis._expand(flag);\r\n\t},\r\n\r\n\tscheduleAction: function(mode, ms) {\r\n\t\t/** Schedule activity for delayed execution (cancel any pending request).\r\n\t\t *  scheduleAction('cancel') will cancel the request.\r\n\t\t */\r\n\t\tif( this.tree.timer ) {\r\n\t\t\tclearTimeout(this.tree.timer);\r\n\t\t\tthis.tree.logDebug(\"clearTimeout(%o)\", this.tree.timer);\r\n\t\t}\r\n\t\tvar self = this; // required for closures\r\n\t\tswitch (mode) {\r\n\t\tcase \"cancel\":\r\n\t\t\t// Simply made sure that timer was cleared\r\n\t\t\tbreak;\r\n\t\tcase \"expand\":\r\n\t\t\tthis.tree.timer = setTimeout(function(){\r\n\t\t\t\tself.tree.logDebug(\"setTimeout: trigger expand\");\r\n\t\t\t\tself.expand(true);\r\n\t\t\t}, ms);\r\n\t\t\tbreak;\r\n\t\tcase \"activate\":\r\n\t\t\tthis.tree.timer = setTimeout(function(){\r\n\t\t\t\tself.tree.logDebug(\"setTimeout: trigger activate\");\r\n\t\t\t\tself.activate();\r\n\t\t\t}, ms);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow \"Invalid mode \" + mode;\r\n\t\t}\r\n\t\tthis.tree.logDebug(\"setTimeout(%s, %s): %s\", mode, ms, this.tree.timer);\r\n\t},\r\n\r\n\ttoggleExpand: function() {\r\n\t\tthis.expand(!this.bExpanded);\r\n\t},\r\n\r\n\tcollapseSiblings: function() {\r\n\t\tif( this.parent === null ){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar ac = this.parent.childList;\r\n\t\tfor (var i=0, l=ac.length; i<l; i++) {\r\n\t\t\tif ( ac[i] !== this && ac[i].bExpanded ){\r\n\t\t\t\tac[i]._expand(false);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_onClick: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onClick(\" + event.type + \"): dtnode:\" + this + \", button:\" + event.button + \", which: \" + event.which);\r\n\t\tvar targetType = this.getEventTargetType(event);\r\n\t\tif( targetType === \"expander\" ) {\r\n\t\t\t// Clicking the expander icon always expands/collapses\r\n\t\t\tthis.toggleExpand();\r\n\t\t\tthis.focus(); // issue 95\r\n\t\t} else if( targetType === \"checkbox\" ) {\r\n\t\t\t// Clicking the checkbox always (de)selects\r\n\t\t\tthis.toggleSelect();\r\n\t\t\tthis.focus(); // issue 95\r\n\t\t} else {\r\n\t\t\tthis._userActivate();\r\n\t\t\tvar aTag = this.span.getElementsByTagName(\"a\");\r\n\t\t\tif(aTag[0]){\r\n\t\t\t\t// issue 154, 313\r\n\t\t\t\tif(!(BROWSER.msie && parseInt(BROWSER.version, 10) < 9)){\r\n\t\t\t\t\taTag[0].focus();\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// 'noLink' option was set\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Make sure that clicks stop, otherwise <a href='#'> jumps to the top\r\n\t\tevent.preventDefault();\r\n\t},\r\n\r\n\t_onDblClick: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onDblClick(\" + event.type + \"): dtnode:\" + this + \", button:\" + event.button + \", which: \" + event.which);\r\n\t},\r\n\r\n\t_onKeydown: function(event) {\r\n//      this.tree.logDebug(\"dtnode.onKeydown(\" + event.type + \"): dtnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\r\n\t\tvar handled = true,\r\n\t\t\tsib;\r\n//      alert(\"keyDown\" + event.which);\r\n\r\n\t\tswitch( event.which ) {\r\n\t\t\t// charCodes:\r\n//          case 43: // '+'\r\n\t\t\tcase 107: // '+'\r\n\t\t\tcase 187: // '+' @ Chrome, Safari\r\n\t\t\t\tif( !this.bExpanded ){ this.toggleExpand(); }\r\n\t\t\t\tbreak;\r\n//          case 45: // '-'\r\n\t\t\tcase 109: // '-'\r\n\t\t\tcase 189: // '+' @ Chrome, Safari\r\n\t\t\t\tif( this.bExpanded ){ this.toggleExpand(); }\r\n\t\t\t\tbreak;\r\n\t\t\t//~ case 42: // '*'\r\n\t\t\t\t//~ break;\r\n\t\t\t//~ case 47: // '/'\r\n\t\t\t\t//~ break;\r\n\t\t\t// case 13: // <enter>\r\n\t\t\t\t// <enter> on a focused <a> tag seems to generate a click-event.\r\n\t\t\t\t// this._userActivate();\r\n\t\t\t\t// break;\r\n\t\t\tcase 32: // <space>\r\n\t\t\t\tthis._userActivate();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // <backspace>\r\n\t\t\t\tif( this.parent ){\r\n\t\t\t\t\tthis.parent.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // <left>\r\n\t\t\t\tif( this.bExpanded ) {\r\n\t\t\t\t\tthis.toggleExpand();\r\n\t\t\t\t\tthis.focus();\r\n//              } else if( this.parent && (this.tree.options.rootVisible || this.parent.parent) ) {\r\n\t\t\t\t} else if( this.parent && this.parent.parent ) {\r\n\t\t\t\t\tthis.parent.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // <right>\r\n\t\t\t\tif( !this.bExpanded && (this.childList || this.data.isLazy) ) {\r\n\t\t\t\t\tthis.toggleExpand();\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t} else if( this.childList ) {\r\n\t\t\t\t\tthis.childList[0].focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // <up>\r\n\t\t\t\tsib = this.getPrevSibling();\r\n\t\t\t\twhile( sib && sib.bExpanded && sib.childList ){\r\n\t\t\t\t\tsib = sib.childList[sib.childList.length-1];\r\n\t\t\t\t}\r\n//              if( !sib && this.parent && (this.tree.options.rootVisible || this.parent.parent) )\r\n\t\t\t\tif( !sib && this.parent && this.parent.parent ){\r\n\t\t\t\t\tsib = this.parent;\r\n\t\t\t\t}\r\n\t\t\t\tif( sib ){\r\n\t\t\t\t\tsib.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // <down>\r\n\t\t\t\tif( this.bExpanded && this.childList ) {\r\n\t\t\t\t\tsib = this.childList[0];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar parents = this._parentList(false, true);\r\n\t\t\t\t\tfor(var i=parents.length-1; i>=0; i--) {\r\n\t\t\t\t\t\tsib = parents[i].getNextSibling();\r\n\t\t\t\t\t\tif( sib ){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif( sib ){\r\n\t\t\t\t\tsib.focus();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\thandled = false;\r\n\t\t}\r\n\t\t// Return false, if handled, to prevent default processing\r\n//      return !handled;\r\n\t\tif(handled){\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t_onKeypress: function(event) {\r\n\t\t// onKeypress is only hooked to allow user callbacks.\r\n\t\t// We don't process it, because IE and Safari don't fire keypress for cursor keys.\r\n//      this.tree.logDebug(\"dtnode.onKeypress(\" + event.type + \"): dtnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\r\n\t},\r\n\r\n\t_onFocus: function(event) {\r\n\t\t// Handles blur and focus events.\r\n//      this.tree.logDebug(\"dtnode._onFocus(%o): %o\", event, this);\r\n\t\tvar opts = this.tree.options;\r\n\t\tif ( event.type == \"blur\" || event.type == \"focusout\" ) {\r\n\t\t\tif ( opts.onBlur ){\r\n\t\t\t\topts.onBlur.call(this.tree, this);\r\n\t\t\t}\r\n\t\t\tif( this.tree.tnFocused ){\r\n\t\t\t\t$(this.tree.tnFocused.span).removeClass(opts.classNames.focused);\r\n\t\t\t}\r\n\t\t\tthis.tree.tnFocused = null;\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-focus\", \"\", opts.cookie);\r\n\t\t\t}\r\n\t\t} else if ( event.type==\"focus\" || event.type==\"focusin\") {\r\n\t\t\t// Fix: sometimes the blur event is not generated\r\n\t\t\tif( this.tree.tnFocused && this.tree.tnFocused !== this ) {\r\n\t\t\t\tthis.tree.logDebug(\"dtnode.onFocus: out of sync: curFocus: %o\", this.tree.tnFocused);\r\n\t\t\t\t$(this.tree.tnFocused.span).removeClass(opts.classNames.focused);\r\n\t\t\t}\r\n\t\t\tthis.tree.tnFocused = this;\r\n\t\t\tif ( opts.onFocus ){\r\n\t\t\t\topts.onFocus.call(this.tree, this);\r\n\t\t\t}\r\n\t\t\t$(this.tree.tnFocused.span).addClass(opts.classNames.focused);\r\n\t\t\tif( opts.persist ){\r\n\t\t\t\t$.cookie(opts.cookieId + \"-focus\", this.data.key, opts.cookie);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO: return anything?\r\n//      return false;\r\n\t},\r\n\r\n\tvisit: function(fn, includeSelf) {\r\n\t\t// Call fn(node) for all child nodes. Stop iteration, if fn() returns false.\r\n\t\tvar res = true;\r\n\t\tif( includeSelf === true ) {\r\n\t\t\tres = fn(this);\r\n\t\t\tif( res === false || res === \"skip\" ){\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.childList){\r\n\t\t\tfor(var i=0, l=this.childList.length; i<l; i++){\r\n\t\t\t\tres = this.childList[i].visit(fn, true);\r\n\t\t\t\tif( res === false ){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t},\r\n\r\n\tvisitParents: function(fn, includeSelf) {\r\n\t\t// Visit parent nodes (bottom up)\r\n\t\tif(includeSelf && fn(this) === false){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar p = this.parent;\r\n\t\twhile( p ) {\r\n\t\t\tif(fn(p) === false){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\tremove: function() {\r\n\t\t// Remove this node\r\n//      this.tree.logDebug (\"%s.remove()\", this);\r\n\t\tif ( this === this.tree.root ){\r\n\t\t\tthrow \"Cannot remove system root\";\r\n\t\t}\r\n\t\treturn this.parent.removeChild(this);\r\n\t},\r\n\r\n\tremoveChild: function(tn) {\r\n\t\t// Remove tn from list of direct children.\r\n\t\tvar ac = this.childList;\r\n\t\tif( ac.length === 1 ) {\r\n\t\t\tif( tn !== ac[0] ){\r\n\t\t\t\tthrow \"removeChild: invalid child\";\r\n\t\t\t}\r\n\t\t\treturn this.removeChildren();\r\n\t\t}\r\n\t\tif( tn === this.tree.activeNode ){\r\n\t\t\ttn.deactivate();\r\n\t\t}\r\n\t\tif( this.tree.options.persist ) {\r\n\t\t\tif( tn.bSelected ){\r\n\t\t\t\tthis.tree.persistence.clearSelect(tn.data.key);\r\n\t\t\t}\r\n\t\t\tif ( tn.bExpanded ){\r\n\t\t\t\tthis.tree.persistence.clearExpand(tn.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\ttn.removeChildren(true);\r\n\t\tif(this.ul && tn.li\t){\r\n//          $(\"li\", $(this.ul)).remove(); // issue 399\r\n\t\t\tthis.ul.removeChild(tn.li); // issue 402\r\n\t\t}\r\n\t\tfor(var i=0, l=ac.length; i<l; i++) {\r\n\t\t\tif( ac[i] === tn ) {\r\n\t\t\t\tthis.childList.splice(i, 1);\r\n//              delete tn;  // JSLint complained\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveChildren: function(isRecursiveCall, retainPersistence) {\r\n\t\t// Remove all child nodes (more efficiently than recursive remove())\r\n\t\tthis.tree.logDebug(\"%s.removeChildren(%o)\", this, isRecursiveCall);\r\n\t\tvar tree = this.tree;\r\n\t\tvar ac = this.childList;\r\n\t\tif( ac ) {\r\n\t\t\tfor(var i=0, l=ac.length; i<l; i++) {\r\n\t\t\t\tvar tn = ac[i];\r\n\t\t\t\tif ( tn === tree.activeNode && !retainPersistence ){\r\n\t\t\t\t\ttn.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( this.tree.options.persist && !retainPersistence ) {\r\n\t\t\t\t\tif( tn.bSelected ){\r\n\t\t\t\t\t\tthis.tree.persistence.clearSelect(tn.data.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( tn.bExpanded ){\r\n\t\t\t\t\t\tthis.tree.persistence.clearExpand(tn.data.key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttn.removeChildren(true, retainPersistence);\r\n\t\t\t\tif(this.ul && tn.li){\r\n//                  this.ul.removeChild(tn.li);\r\n\t\t\t\t\t$(\"li\", $(this.ul)).remove(); // issue 231\r\n\t\t\t\t}\r\n//              delete tn;  JSLint complained\r\n\t\t\t}\r\n\t\t\t// Set to 'null' which is interpreted as 'not yet loaded' for lazy\r\n\t\t\t// nodes\r\n\t\t\tthis.childList = null;\r\n\t\t}\r\n\t\tif( ! isRecursiveCall ) {\r\n//          this._expand(false);\r\n//          this.isRead = false;\r\n\t\t\tthis._isLoading = false;\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\tsetTitle: function(title) {\r\n\t\tthis.fromDict({title: title});\r\n\t},\r\n\r\n\treload: function(force) {\r\n\t\tthrow \"Use reloadChildren() instead\";\r\n\t},\r\n\r\n\treloadChildren: function(callback) {\r\n\t\t// Reload lazy content (expansion state is maintained).\r\n\t\tif( this.parent === null ){\r\n\t\t\tthrow \"Use tree.reload() instead\";\r\n\t\t}else if( ! this.data.isLazy ){\r\n\t\t\tthrow \"node.reloadChildren() requires lazy nodes.\";\r\n\t\t}\r\n\t\t// appendAjax triggers 'nodeLoaded' event.\r\n\t\t// We listen to this, if a callback was passed to reloadChildren\r\n\t\tif(callback){\r\n\t\t\tvar self = this;\r\n\t\t\tvar eventType = \"nodeLoaded.dynatree.\" + this.tree.$tree.attr(\"id\")\r\n\t\t\t\t+ \".\" + this.data.key;\r\n\t\t\tthis.tree.$tree.bind(eventType, function(e, node, isOk){\r\n\t\t\t\tself.tree.$tree.unbind(eventType);\r\n\t\t\t\tself.tree.logDebug(\"loaded %o, %o, %o\", e, node, isOk);\r\n\t\t\t\tif(node !== self){\r\n\t\t\t\t\tthrow \"got invalid load event\";\r\n\t\t\t\t}\r\n\t\t\t\tcallback.call(self.tree, node, isOk);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// The expansion state is maintained\r\n\t\tthis.removeChildren();\r\n\t\tthis._loadContent();\r\n//      if( this.bExpanded ) {\r\n//          // Remove children first, to prevent effects being applied\r\n//          this.removeChildren();\r\n//          // then force re-expand to trigger lazy loading\r\n////            this.expand(false);\r\n////            this.expand(true);\r\n//          this._loadContent();\r\n//      } else {\r\n//          this.removeChildren();\r\n//          this._loadContent();\r\n//      }\r\n\t},\r\n\r\n\t/**\r\n\t * Make sure the node with a given key path is available in the tree.\r\n\t */\r\n\t_loadKeyPath: function(keyPath, callback) {\r\n\t\tvar tree = this.tree;\r\n\t\ttree.logDebug(\"%s._loadKeyPath(%s)\", this, keyPath);\r\n\t\tif(keyPath === \"\"){\r\n\t\t\tthrow \"Key path must not be empty\";\r\n\t\t}\r\n\t\tvar segList = keyPath.split(tree.options.keyPathSeparator);\r\n\t\tif(segList[0] === \"\"){\r\n\t\t\tthrow \"Key path must be relative (don't start with '/')\";\r\n\t\t}\r\n\t\tvar seg = segList.shift();\r\n\t\tif(this.childList){\r\n\t\t\tfor(var i=0, l=this.childList.length; i < l; i++){\r\n\t\t\t\tvar child = this.childList[i];\r\n\t\t\t\tif( child.data.key === seg ){\r\n\t\t\t\t\tif(segList.length === 0) {\r\n\t\t\t\t\t\t// Found the end node\r\n\t\t\t\t\t\tcallback.call(tree, child, \"ok\");\r\n\r\n\t\t\t\t\t}else if(child.data.isLazy && (child.childList === null || child.childList === undefined)){\r\n\t\t\t\t\t\ttree.logDebug(\"%s._loadKeyPath(%s) -> reloading %s...\", this, keyPath, child);\r\n\t\t\t\t\t\tvar self = this;\r\n\t\t\t\t\t\t// Note: this line gives a JSLint warning (Don't make functions within a loop)\r\n\t\t\t\t\t\t/*jshint loopfunc:true */\r\n\t\t\t\t\t\tchild.reloadChildren(function(node, isOk){\r\n\t\t\t\t\t\t\t// After loading, look for direct child with that key\r\n\t\t\t\t\t\t\tif(isOk){\r\n\t\t\t\t\t\t\t\ttree.logDebug(\"%s._loadKeyPath(%s) -> reloaded %s.\", node, keyPath, node);\r\n\t\t\t\t\t\t\t\tcallback.call(tree, child, \"loaded\");\r\n\t\t\t\t\t\t\t\tnode._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\ttree.logWarning(\"%s._loadKeyPath(%s) -> reloadChildren() failed.\", self, keyPath);\r\n\t\t\t\t\t\t\t\tcallback.call(tree, child, \"error\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// we can ignore it, since it will only be exectuted once, the the loop is ended\r\n\t\t\t\t\t\t// See also http://stackoverflow.com/questions/3037598/how-to-get-around-the-jslint-error-dont-make-functions-within-a-loop\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback.call(tree, child, \"loaded\");\r\n\t\t\t\t\t\t// Look for direct child with that key\r\n\t\t\t\t\t\tchild._loadKeyPath(segList.join(tree.options.keyPathSeparator), callback);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Could not find key\r\n\t\t// Callback params: child: undefined, the segment, isEndNode (segList.length === 0)\r\n\t\tcallback.call(tree, undefined, \"notfound\", seg, segList.length === 0);\r\n\t\ttree.logWarning(\"Node not found: \" + seg);\r\n\t\treturn;\r\n\t},\r\n\r\n\tresetLazy: function() {\r\n\t\t// Discard lazy content.\r\n\t\tif( this.parent === null ){\r\n\t\t\tthrow \"Use tree.reload() instead\";\r\n\t\t}else if( ! this.data.isLazy ){\r\n\t\t\tthrow \"node.resetLazy() requires lazy nodes.\";\r\n\t\t}\r\n\t\tthis.expand(false);\r\n\t\tthis.removeChildren();\r\n\t},\r\n\r\n\t_addChildNode: function(dtnode, beforeNode) {\r\n\t\t/**\r\n\t\t * Internal function to add one single DynatreeNode as a child.\r\n\t\t *\r\n\t\t */\r\n\t\tvar tree = this.tree,\r\n\t\t\topts = tree.options,\r\n\t\t\tpers = tree.persistence;\r\n\r\n//      tree.logDebug(\"%s._addChildNode(%o)\", this, dtnode);\r\n\r\n\t\t// --- Update and fix dtnode attributes if necessary\r\n\t\tdtnode.parent = this;\r\n//      if( beforeNode && (beforeNode.parent !== this || beforeNode === dtnode ) )\r\n//          throw \"<beforeNode> must be another child of <this>\";\r\n\r\n\t\t// --- Add dtnode as a child\r\n\t\tif ( this.childList === null ) {\r\n\t\t\tthis.childList = [];\r\n\t\t} else if( ! beforeNode ) {\r\n\t\t\t// Fix 'lastsib'\r\n\t\t\tif(this.childList.length > 0) {\r\n\t\t\t\t$(this.childList[this.childList.length-1].span).removeClass(opts.classNames.lastsib);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( beforeNode ) {\r\n\t\t\tvar iBefore = $.inArray(beforeNode, this.childList);\r\n\t\t\tif( iBefore < 0 ){\r\n\t\t\t\tthrow \"<beforeNode> must be a child of <this>\";\r\n\t\t\t}\r\n\t\t\tthis.childList.splice(iBefore, 0, dtnode);\r\n\t\t} else {\r\n\t\t\t// Append node\r\n\t\t\tthis.childList.push(dtnode);\r\n\t\t}\r\n\r\n\t\t// --- Handle persistence\r\n\t\t// Initial status is read from cookies, if persistence is active and\r\n\t\t// cookies are already present.\r\n\t\t// Otherwise the status is read from the data attributes and then persisted.\r\n\t\tvar isInitializing = tree.isInitializing();\r\n\t\tif( opts.persist && pers.cookiesFound && isInitializing ) {\r\n\t\t\t// Init status from cookies\r\n//          tree.logDebug(\"init from cookie, pa=%o, dk=%o\", pers.activeKey, dtnode.data.key);\r\n\t\t\tif( pers.activeKey === dtnode.data.key ){\r\n\t\t\t\ttree.activeNode = dtnode;\r\n\t\t\t}\r\n\t\t\tif( pers.focusedKey === dtnode.data.key ){\r\n\t\t\t\ttree.focusNode = dtnode;\r\n\t\t\t}\r\n\t\t\tdtnode.bExpanded = ($.inArray(dtnode.data.key, pers.expandedKeyList) >= 0);\r\n\t\t\tdtnode.bSelected = ($.inArray(dtnode.data.key, pers.selectedKeyList) >= 0);\r\n//          tree.logDebug(\"    key=%o, bSelected=%o\", dtnode.data.key, dtnode.bSelected);\r\n\t\t} else {\r\n\t\t\t// Init status from data (Note: we write the cookies after the init phase)\r\n//          tree.logDebug(\"init from data\");\r\n\t\t\tif( dtnode.data.activate ) {\r\n\t\t\t\ttree.activeNode = dtnode;\r\n\t\t\t\tif( opts.persist ){\r\n\t\t\t\t\tpers.activeKey = dtnode.data.key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( dtnode.data.focus ) {\r\n\t\t\t\ttree.focusNode = dtnode;\r\n\t\t\t\tif( opts.persist ){\r\n\t\t\t\t\tpers.focusedKey = dtnode.data.key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdtnode.bExpanded = ( dtnode.data.expand === true ); // Collapsed by default\r\n\t\t\tif( dtnode.bExpanded && opts.persist ){\r\n\t\t\t\tpers.addExpand(dtnode.data.key);\r\n\t\t\t}\r\n\t\t\tdtnode.bSelected = ( dtnode.data.select === true ); // Deselected by default\r\n/*\r\n\t\t\tDoesn't work, cause pers.selectedKeyList may be null\r\n\t\t\tif( dtnode.bSelected && opts.selectMode==1\r\n\t\t\t\t&& pers.selectedKeyList && pers.selectedKeyList.length>0 ) {\r\n\t\t\t\ttree.logWarning(\"Ignored multi-selection in single-mode for %o\", dtnode);\r\n\t\t\t\tdtnode.bSelected = false; // Fixing bad input data (multi selection for mode:1)\r\n\t\t\t}\r\n*/\r\n\t\t\tif( dtnode.bSelected && opts.persist ){\r\n\t\t\t\tpers.addSelect(dtnode.data.key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Always expand, if it's below minExpandLevel\r\n//      tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, dtnode, dtnode.getLevel());\r\n\t\tif ( opts.minExpandLevel >= dtnode.getLevel() ) {\r\n//          tree.logDebug (\"Force expand for %o\", dtnode);\r\n\t\t\tthis.bExpanded = true;\r\n\t\t}\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\t// issue #82: only if not initializing, because the children may not exist yet\r\n//      if( !dtnode.data.isStatusNode && opts.selectMode==3 && !isInitializing )\r\n//          dtnode._fixSelectionState();\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\tif( dtnode.bSelected && opts.selectMode==3 ) {\r\n\t\t\tvar p = this;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tif( !p.hasSubSel ){\r\n\t\t\t\t\tp._setSubSel(true);\r\n\t\t\t\t}\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// render this node and the new child\r\n\t\tif ( tree.bEnableUpdate ){\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\taddChild: function(obj, beforeNode) {\r\n\t\t/**\r\n\t\t * Add a node object as child.\r\n\t\t *\r\n\t\t * This should be the only place, where a DynaTreeNode is constructed!\r\n\t\t * (Except for the root node creation in the tree constructor)\r\n\t\t *\r\n\t\t * @param obj A JS object (may be recursive) or an array of those.\r\n\t\t * @param {DynaTreeNode} beforeNode (optional) sibling node.\r\n\t\t *\r\n\t\t * Data format: array of node objects, with optional 'children' attributes.\r\n\t\t * [\r\n\t\t *  { title: \"t1\", isFolder: true, ... }\r\n\t\t *  { title: \"t2\", isFolder: true, ...,\r\n\t\t *      children: [\r\n\t\t *          {title: \"t2.1\", ..},\r\n\t\t *          {..}\r\n\t\t *          ]\r\n\t\t *  }\r\n\t\t * ]\r\n\t\t * A simple object is also accepted instead of an array.\r\n\t\t *\r\n\t\t */\r\n//      this.tree.logDebug(\"%s.addChild(%o, %o)\", this, obj, beforeNode);\r\n\t\tif(typeof(obj) == \"string\"){\r\n\t\t\tthrow \"Invalid data type for \" + obj;\r\n\t\t}else if( !obj || obj.length === 0 ){ // Passed null or undefined or empty array\r\n\t\t\treturn;\r\n\t\t}else if( obj instanceof DynaTreeNode ){\r\n\t\t\treturn this._addChildNode(obj, beforeNode);\r\n\t\t}\r\n\r\n\t\tif( !obj.length ){ // Passed a single data object\r\n\t\t\tobj = [ obj ];\r\n\t\t}\r\n\t\tvar prevFlag = this.tree.enableUpdate(false);\r\n\r\n\t\tvar tnFirst = null;\r\n\t\tfor (var i=0, l=obj.length; i<l; i++) {\r\n\t\t\tvar data = obj[i];\r\n\t\t\tvar dtnode = this._addChildNode(new DynaTreeNode(this, this.tree, data), beforeNode);\r\n\t\t\tif( !tnFirst ){\r\n\t\t\t\ttnFirst = dtnode;\r\n\t\t\t}\r\n\t\t\t// Add child nodes recursively\r\n\t\t\tif( data.children ){\r\n\t\t\t\tdtnode.addChild(data.children, null);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.tree.enableUpdate(prevFlag);\r\n\t\treturn tnFirst;\r\n\t},\r\n\r\n\tappend: function(obj) {\r\n\t\tthis.tree.logWarning(\"node.append() is deprecated (use node.addChild() instead).\");\r\n\t\treturn this.addChild(obj, null);\r\n\t},\r\n\r\n\tappendAjax: function(ajaxOptions) {\r\n\t\tvar self = this;\r\n\t\tthis.removeChildren(false, true);\r\n\t\tthis.setLazyNodeStatus(DTNodeStatus_Loading);\r\n\t\t// Debug feature: force a delay, to simulate slow loading...\r\n\t\tif(ajaxOptions.debugLazyDelay){\r\n\t\t\tvar ms = ajaxOptions.debugLazyDelay;\r\n\t\t\tajaxOptions.debugLazyDelay = 0;\r\n\t\t\tthis.tree.logInfo(\"appendAjax: waiting for debugLazyDelay \" + ms);\r\n\t\t\tsetTimeout(function(){self.appendAjax(ajaxOptions);}, ms);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Ajax option inheritance: $.ajaxSetup < $.ui.dynatree.prototype.options.ajaxDefaults < tree.options.ajaxDefaults < ajaxOptions\r\n\t\tvar orgSuccess = ajaxOptions.success,\r\n\t\t\torgError = ajaxOptions.error,\r\n\t\t\teventType = \"nodeLoaded.dynatree.\" + this.tree.$tree.attr(\"id\") + \".\" + this.data.key;\r\n\t\tvar options = $.extend({}, this.tree.options.ajaxDefaults, ajaxOptions, {\r\n\t\t\tsuccess: function(data, textStatus, jqXHR){\r\n\t\t\t\t// <this> is the request options\r\n//              self.tree.logDebug(\"appendAjax().success\");\r\n\t\t\t\tvar prevPhase = self.tree.phase,\r\n\t\t\t\t\toptions = self.tree.options; // #473\r\n\r\n\t\t\t\tself.tree.phase = \"init\";\r\n\t\t\t\t// postProcess is similar to the standard dataFilter hook,\r\n\t\t\t\t// but it is also called for JSONP\r\n\t\t\t\tif( options.postProcess ){\r\n\t\t\t\t\tdata = options.postProcess.call(this, data, this.dataType);\r\n\t\t\t\t}\r\n\t\t\t\t// Process ASPX WebMethod JSON object inside \"d\" property\r\n\t\t\t\t// http://code.google.com/p/dynatree/issues/detail?id=202\r\n\t\t\t\telse if (data && data.hasOwnProperty(\"d\")) {\r\n\t\t\t\t   data = (typeof data.d) == \"string\" ? $.parseJSON(data.d) : data.d;\r\n\t\t\t\t}\r\n\t\t\t\tif(!$.isArray(data) || data.length !== 0){\r\n\t\t\t\t\tself.addChild(data, null);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.phase = \"postInit\";\r\n\t\t\t\tif( orgSuccess ){\r\n\t\t\t\t\torgSuccess.call(options, self, data, textStatus);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.logDebug(\"trigger \" + eventType);\r\n\t\t\t\tself.tree.$tree.trigger(eventType, [self, true]);\r\n\t\t\t\tself.tree.phase = prevPhase;\r\n\t\t\t\t// This should be the last command, so node._isLoading is true\r\n\t\t\t\t// while the callbacks run\r\n\t\t\t\tself.setLazyNodeStatus(DTNodeStatus_Ok);\r\n\t\t\t\tif($.isArray(data) && data.length === 0){\r\n\t\t\t\t\t// Set to [] which is interpreted as 'no children' for lazy\r\n\t\t\t\t\t// nodes\r\n\t\t\t\t\tself.childList = [];\r\n\t\t\t\t\tself.render();\r\n\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t// <this> is the request options\r\n\t\t\t\tself.tree.logWarning(\"appendAjax failed:\", textStatus, \":\\n\", jqXHR, \"\\n\", errorThrown);\r\n\t\t\t\tif( orgError ){\r\n\t\t\t\t\torgError.call(options, self, jqXHR, textStatus, errorThrown);\r\n\t\t\t\t}\r\n\t\t\t\tself.tree.$tree.trigger(eventType, [self, false]);\r\n\t\t\t\tself.setLazyNodeStatus(DTNodeStatus_Error, {info: textStatus, tooltip: \"\" + errorThrown});\r\n\t\t\t\t}\r\n\t\t});\r\n\t\t$.ajax(options);\r\n\t},\r\n\r\n\tmove: function(targetNode, mode) {\r\n\t\t/**Move this node to targetNode.\r\n\t\t *  mode 'child': append this node as last child of targetNode.\r\n\t\t *                This is the default. To be compatble with the D'n'd\r\n\t\t *                hitMode, we also accept 'over'.\r\n\t\t *  mode 'before': add this node as sibling before targetNode.\r\n\t\t *  mode 'after': add this node as sibling after targetNode.\r\n\t\t */\r\n\t\tvar pos;\r\n\t\tif(this === targetNode){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif( !this.parent  ){\r\n\t\t\tthrow \"Cannot move system root\";\r\n\t\t}\r\n\t\tif(mode === undefined || mode == \"over\"){\r\n\t\t\tmode = \"child\";\r\n\t\t}\r\n\t\tvar prevParent = this.parent;\r\n\t\tvar targetParent = (mode === \"child\") ? targetNode : targetNode.parent;\r\n\t\tif( targetParent.isDescendantOf(this) ){\r\n\t\t\tthrow \"Cannot move a node to it's own descendant\";\r\n\t\t}\r\n\t\t// Unlink this node from current parent\r\n\t\tif( this.parent.childList.length == 1 ) {\r\n\t\t\tthis.parent.childList = this.parent.data.isLazy ? [] : null;\r\n\t\t\tthis.parent.bExpanded = false;\r\n\t\t} else {\r\n\t\t\tpos = $.inArray(this, this.parent.childList);\r\n\t\t\tif( pos < 0 ){\r\n\t\t\t\tthrow \"Internal error\";\r\n\t\t\t}\r\n\t\t\tthis.parent.childList.splice(pos, 1);\r\n\t\t}\r\n\t\t// Remove from source DOM parent\r\n\t\tif(this.parent.ul && this.li){\r\n\t\t\tthis.parent.ul.removeChild(this.li);\r\n\t\t}\r\n\r\n\t\t// Insert this node to target parent's child list\r\n\t\tthis.parent = targetParent;\r\n\t\tif( targetParent.hasChildren() ) {\r\n\t\t\tswitch(mode) {\r\n\t\t\tcase \"child\":\r\n\t\t\t\t// Append to existing target children\r\n\t\t\t\ttargetParent.childList.push(this);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"before\":\r\n\t\t\t\t// Insert this node before target node\r\n\t\t\t\tpos = $.inArray(targetNode, targetParent.childList);\r\n\t\t\t\tif( pos < 0 ){\r\n\t\t\t\t\tthrow \"Internal error\";\r\n\t\t\t\t}\r\n\t\t\t\ttargetParent.childList.splice(pos, 0, this);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"after\":\r\n\t\t\t\t// Insert this node after target node\r\n\t\t\t\tpos = $.inArray(targetNode, targetParent.childList);\r\n\t\t\t\tif( pos < 0 ){\r\n\t\t\t\t\tthrow \"Internal error\";\r\n\t\t\t\t}\r\n\t\t\t\ttargetParent.childList.splice(pos+1, 0, this);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Invalid mode \" + mode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttargetParent.childList = [ this ];\r\n\t\t}\r\n\t\t// Parent has no <ul> tag yet:\r\n\t\tif( !targetParent.ul ) {\r\n\t\t\t// This is the parent's first child: create UL tag\r\n\t\t\t// (Hidden, because it will be\r\n\t\t\ttargetParent.ul = document.createElement(\"ul\");\r\n\t\t\ttargetParent.ul.style.display = \"none\";\r\n\t\t\tif( targetParent.li ){\r\n\t\t\t\ttargetParent.li.appendChild(targetParent.ul);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Issue 319: Add to target DOM parent (only if node was already rendered(expanded))\r\n\t\tif(this.li){\r\n\t\t\ttargetParent.ul.appendChild(this.li);\r\n\t\t}\r\n\r\n\t\tif( this.tree !== targetNode.tree ) {\r\n\t\t\t// Fix node.tree for all source nodes\r\n\t\t\tthis.visit(function(node){\r\n\t\t\t\tnode.tree = targetNode.tree;\r\n\t\t\t}, null, true);\r\n\t\t\tthrow \"Not yet implemented.\";\r\n\t\t}\r\n\t\t// TODO: fix selection state\r\n\t\t// TODO: fix active state\r\n\t\tif( !prevParent.isDescendantOf(targetParent)) {\r\n\t\t\tprevParent.render();\r\n\t\t}\r\n\t\tif( !targetParent.isDescendantOf(prevParent) ) {\r\n\t\t\ttargetParent.render();\r\n\t\t}\r\n//      this.tree.redraw();\r\n/*\r\n\t\tvar tree = this.tree;\r\n\t\tvar opts = tree.options;\r\n\t\tvar pers = tree.persistence;\r\n\r\n\r\n\t\t// Always expand, if it's below minExpandLevel\r\n//      tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, dtnode, dtnode.getLevel());\r\n\t\tif ( opts.minExpandLevel >= dtnode.getLevel() ) {\r\n//          tree.logDebug (\"Force expand for %o\", dtnode);\r\n\t\t\tthis.bExpanded = true;\r\n\t\t}\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\t// issue #82: only if not initializing, because the children may not exist yet\r\n//      if( !dtnode.data.isStatusNode && opts.selectMode==3 && !isInitializing )\r\n//          dtnode._fixSelectionState();\r\n\r\n\t\t// In multi-hier mode, update the parents selection state\r\n\t\tif( dtnode.bSelected && opts.selectMode==3 ) {\r\n\t\t\tvar p = this;\r\n\t\t\twhile( p ) {\r\n\t\t\t\tif( !p.hasSubSel )\r\n\t\t\t\t\tp._setSubSel(true);\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// render this node and the new child\r\n\t\tif ( tree.bEnableUpdate )\r\n\t\t\tthis.render();\r\n\r\n\t\treturn dtnode;\r\n\r\n*/\r\n\t},\r\n\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n/*************************************************************************\r\n * class DynaTreeStatus\r\n */\r\n\r\nvar DynaTreeStatus = Class.create();\r\n\r\n\r\nDynaTreeStatus._getTreePersistData = function(cookieId, cookieOpts) {\r\n\t// Static member: Return persistence information from cookies\r\n\tvar ts = new DynaTreeStatus(cookieId, cookieOpts);\r\n\tts.read();\r\n\treturn ts.toDict();\r\n};\r\n// Make available in global scope\r\ngetDynaTreePersistData = DynaTreeStatus._getTreePersistData; // TODO: deprecated\r\n\r\n\r\nDynaTreeStatus.prototype = {\r\n\t// Constructor\r\n\tinitialize: function(cookieId, cookieOpts) {\r\n//      this._log(\"DynaTreeStatus: initialize\");\r\n\t\tif( cookieId === undefined ){\r\n\t\t\tcookieId = $.ui.dynatree.prototype.options.cookieId;\r\n\t\t}\r\n\t\tcookieOpts = $.extend({}, $.ui.dynatree.prototype.options.cookie, cookieOpts);\r\n\r\n\t\tthis.cookieId = cookieId;\r\n\t\tthis.cookieOpts = cookieOpts;\r\n\t\tthis.cookiesFound = undefined;\r\n\t\tthis.activeKey = null;\r\n\t\tthis.focusedKey = null;\r\n\t\tthis.expandedKeyList = null;\r\n\t\tthis.selectedKeyList = null;\r\n\t},\r\n\t// member functions\r\n\t_log: function(msg) {\r\n\t\t//  this.logDebug(\"_changeNodeList(%o): nodeList:%o, idx:%o\", mode, nodeList, idx);\r\n\t\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t\t_log.apply(this, arguments);\r\n\t},\r\n\tread: function() {\r\n//      this._log(\"DynaTreeStatus: read\");\r\n\t\t// Read or init cookies.\r\n\t\tthis.cookiesFound = false;\r\n\r\n\t\tvar cookie = $.cookie(this.cookieId + \"-active\");\r\n\t\tthis.activeKey = cookie || \"\";\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-focus\");\r\n\t\tthis.focusedKey = cookie || \"\";\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-expand\");\r\n\t\tthis.expandedKeyList = cookie ? cookie.split(\",\") : [];\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t\tcookie = $.cookie(this.cookieId + \"-select\");\r\n\t\tthis.selectedKeyList = cookie ? cookie.split(\",\") : [];\r\n\t\tif( cookie ){\r\n\t\t\tthis.cookiesFound = true;\r\n\t\t}\r\n\t},\r\n\twrite: function() {\r\n//      this._log(\"DynaTreeStatus: write\");\r\n\t\t$.cookie(this.cookieId + \"-active\", ( this.activeKey === null ) ? \"\" : this.activeKey, this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-focus\", ( this.focusedKey === null ) ? \"\" : this.focusedKey, this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-expand\", ( this.expandedKeyList === null ) ? \"\" : this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t$.cookie(this.cookieId + \"-select\", ( this.selectedKeyList === null ) ? \"\" : this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t},\r\n\taddExpand: function(key) {\r\n//      this._log(\"addExpand(%o)\", key);\r\n\t\tif( $.inArray(key, this.expandedKeyList) < 0 ) {\r\n\t\t\tthis.expandedKeyList.push(key);\r\n\t\t\t$.cookie(this.cookieId + \"-expand\", this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tclearExpand: function(key) {\r\n//      this._log(\"clearExpand(%o)\", key);\r\n\t\tvar idx = $.inArray(key, this.expandedKeyList);\r\n\t\tif( idx >= 0 ) {\r\n\t\t\tthis.expandedKeyList.splice(idx, 1);\r\n\t\t\t$.cookie(this.cookieId + \"-expand\", this.expandedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\taddSelect: function(key) {\r\n//      this._log(\"addSelect(%o)\", key);\r\n\t\tif( $.inArray(key, this.selectedKeyList) < 0 ) {\r\n\t\t\tthis.selectedKeyList.push(key);\r\n\t\t\t$.cookie(this.cookieId + \"-select\", this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tclearSelect: function(key) {\r\n//      this._log(\"clearSelect(%o)\", key);\r\n\t\tvar idx = $.inArray(key, this.selectedKeyList);\r\n\t\tif( idx >= 0 ) {\r\n\t\t\tthis.selectedKeyList.splice(idx, 1);\r\n\t\t\t$.cookie(this.cookieId + \"-select\", this.selectedKeyList.join(\",\"), this.cookieOpts);\r\n\t\t}\r\n\t},\r\n\tisReloading: function() {\r\n\t\treturn this.cookiesFound === true;\r\n\t},\r\n\ttoDict: function() {\r\n\t\treturn {\r\n\t\t\tcookiesFound: this.cookiesFound,\r\n\t\t\tactiveKey: this.activeKey,\r\n\t\t\tfocusedKey: this.activeKey,\r\n\t\t\texpandedKeyList: this.expandedKeyList,\r\n\t\t\tselectedKeyList: this.selectedKeyList\r\n\t\t};\r\n\t},\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n\r\n/*************************************************************************\r\n * class DynaTree\r\n */\r\n\r\nvar DynaTree = Class.create();\r\n\r\n// --- Static members ----------------------------------------------------------\r\n\r\nDynaTree.version = \"@@Version\";\r\n\r\n//--- Class members ------------------------------------------------------------\r\n\r\nDynaTree.prototype = {\r\n\t// Constructor\r\n\tinitialize: function($widget) {\r\n\t\t// instance members\r\n\t\tthis.phase = \"init\";\r\n\t\tthis.$widget = $widget;\r\n\t\tthis.options = $widget.options;\r\n\t\tthis.$tree = $widget.element;\r\n\t\tthis.timer = null;\r\n\t\t// find container element\r\n\t\tthis.divTree = this.$tree.get(0);\r\n\r\n\t\t_initDragAndDrop(this);\r\n\t},\r\n\r\n\t// member functions\r\n\r\n\t_load: function(callback) {\r\n\t\tvar $widget = this.$widget;\r\n\t\tvar opts = this.options,\r\n\t\t\tself = this;\r\n\t\tthis.bEnableUpdate = true;\r\n\t\tthis._nodeCount = 1;\r\n\t\tthis.activeNode = null;\r\n\t\tthis.focusNode = null;\r\n\r\n\t\t// Some deprecation warnings to help with migration\r\n\t\tif( opts.rootVisible !== undefined ){\r\n\t\t\tthis.logWarning(\"Option 'rootVisible' is no longer supported.\");\r\n\t\t}\r\n\t\tif( opts.minExpandLevel < 1 ) {\r\n\t\t\tthis.logWarning(\"Option 'minExpandLevel' must be >= 1.\");\r\n\t\t\topts.minExpandLevel = 1;\r\n\t\t}\r\n//      _log(\"warn\", \"jQuery.support.boxModel \" + jQuery.support.boxModel);\r\n\r\n\t\t// If a 'options.classNames' dictionary was passed, still use defaults\r\n\t\t// for undefined classes:\r\n\t\tif( opts.classNames !== $.ui.dynatree.prototype.options.classNames ) {\r\n\t\t\topts.classNames = $.extend({}, $.ui.dynatree.prototype.options.classNames, opts.classNames);\r\n\t\t}\r\n\t\tif( opts.ajaxDefaults !== $.ui.dynatree.prototype.options.ajaxDefaults ) {\r\n\t\t\topts.ajaxDefaults = $.extend({}, $.ui.dynatree.prototype.options.ajaxDefaults, opts.ajaxDefaults);\r\n\t\t}\r\n\t\tif( opts.dnd !== $.ui.dynatree.prototype.options.dnd ) {\r\n\t\t\topts.dnd = $.extend({}, $.ui.dynatree.prototype.options.dnd, opts.dnd);\r\n\t\t}\r\n\t\t// Guess skin path, if not specified\r\n\t\tif(!opts.imagePath) {\r\n\t\t\t$(\"script\").each( function () {\r\n\t\t\t\tvar _rexDtLibName = /.*dynatree[^\\/]*\\.js$/i;\r\n\t\t\t\tif( this.src.search(_rexDtLibName) >= 0 ) {\r\n\t\t\t\t\tif( this.src.indexOf(\"/\")>=0 ){ // issue #47\r\n\t\t\t\t\t\topts.imagePath = this.src.slice(0, this.src.lastIndexOf(\"/\")) + \"/skin/\";\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\topts.imagePath = \"skin/\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.logDebug(\"Guessing imagePath from '%s': '%s'\", this.src, opts.imagePath);\r\n\t\t\t\t\treturn false; // first match\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.persistence = new DynaTreeStatus(opts.cookieId, opts.cookie);\r\n\t\tif( opts.persist ) {\r\n\t\t\tif( !$.cookie ){\r\n\t\t\t\t_log(\"warn\", \"Please include jquery.cookie.js to use persistence.\");\r\n\t\t\t}\r\n\t\t\tthis.persistence.read();\r\n\t\t}\r\n\t\tthis.logDebug(\"DynaTree.persistence: %o\", this.persistence.toDict());\r\n\r\n\t\t// Cached tag strings\r\n\t\tthis.cache = {\r\n\t\t\ttagEmpty: \"<span class='\" + opts.classNames.empty + \"'></span>\",\r\n\t\t\ttagVline: \"<span class='\" + opts.classNames.vline + \"'></span>\",\r\n\t\t\ttagExpander: \"<span class='\" + opts.classNames.expander + \"'></span>\",\r\n\t\t\ttagConnector: \"<span class='\" + opts.classNames.connector + \"'></span>\",\r\n\t\t\ttagNodeIcon: \"<span class='\" + opts.classNames.nodeIcon + \"'></span>\",\r\n\t\t\ttagCheckbox: \"<span class='\" + opts.classNames.checkbox + \"'></span>\",\r\n\t\t\tlastentry: undefined\r\n\t\t};\r\n\r\n\t\t// Clear container, in case it contained some 'waiting' or 'error' text\r\n\t\t// for clients that don't support JS.\r\n\t\t// We don't do this however, if we try to load from an embedded UL element.\r\n\t\tif( opts.children || (opts.initAjax && opts.initAjax.url) || opts.initId ){\r\n\t\t\t$(this.divTree).empty();\r\n\t\t}\r\n\t\tvar $ulInitialize = this.$tree.find(\">ul:first\").hide();\r\n\r\n\t\t// Create the root element\r\n\t\tthis.tnRoot = new DynaTreeNode(null, this, {});\r\n\t\tthis.tnRoot.bExpanded = true;\r\n\t\tthis.tnRoot.render();\r\n\t\tthis.divTree.appendChild(this.tnRoot.ul);\r\n\r\n\t\tvar root = this.tnRoot,\r\n\t\t\tisReloading = ( opts.persist && this.persistence.isReloading() ),\r\n\t\t\tisLazy = false,\r\n\t\t\tprevFlag = this.enableUpdate(false);\r\n\r\n\t\tthis.logDebug(\"Dynatree._load(): read tree structure...\");\r\n\r\n\t\t// Init tree structure\r\n\t\tif( opts.children ) {\r\n\t\t\t// Read structure from node array\r\n\t\t\troot.addChild(opts.children);\r\n\r\n\t\t} else if( opts.initAjax && opts.initAjax.url ) {\r\n\t\t\t// Init tree from AJAX request\r\n\t\t\tisLazy = true;\r\n\t\t\troot.data.isLazy = true;\r\n\t\t\tthis._reloadAjax(callback);\r\n\r\n\t\t} else if( opts.initId ) {\r\n\t\t\t// Init tree from another UL element\r\n\t\t\tthis._createFromTag(root, $(\"#\"+opts.initId));\r\n\r\n\t\t} else {\r\n\t\t\t// Init tree from the first UL element inside the container <div>\r\n//          var $ul = this.$tree.find(\">ul:first\").hide();\r\n\t\t\tthis._createFromTag(root, $ulInitialize);\r\n\t\t\t$ulInitialize.remove();\r\n\t\t}\r\n\r\n\t\tthis._checkConsistency();\r\n\t\t// Fix part-sel flags\r\n\t\tif(!isLazy && opts.selectMode == 3){\r\n\t\t\troot._updatePartSelectionState();\r\n\t\t}\r\n\t\t// Render html markup\r\n\t\tthis.logDebug(\"Dynatree._load(): render nodes...\");\r\n\t\tthis.enableUpdate(prevFlag);\r\n\r\n\t\t// bind event handlers\r\n\t\tthis.logDebug(\"Dynatree._load(): bind events...\");\r\n\t\tthis.$widget.bind();\r\n\r\n\t\t// --- Post-load processing\r\n\t\tthis.logDebug(\"Dynatree._load(): postInit...\");\r\n\t\tthis.phase = \"postInit\";\r\n\r\n\t\t// In persist mode, make sure that cookies are written, even if they are empty\r\n\t\tif( opts.persist ) {\r\n\t\t\tthis.persistence.write();\r\n\t\t}\r\n\t\t// Set focus, if possible (this will also fire an event and write a cookie)\r\n\t\tif( this.focusNode && this.focusNode.isVisible() ) {\r\n\t\t\tthis.logDebug(\"Focus on init: %o\", this.focusNode);\r\n\t\t\tthis.focusNode.focus();\r\n\t\t}\r\n\t\tif( !isLazy ) {\r\n\t\t\tif( opts.onPostInit ) {\r\n\t\t\t\topts.onPostInit.call(this, isReloading, false);\r\n\t\t\t}\r\n\t\t\tif( callback ){\r\n\t\t\t\tcallback.call(this, \"ok\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.phase = \"idle\";\r\n\t},\r\n\r\n\t_reloadAjax: function(callback) {\r\n\t\t// Reload\r\n\t\tvar opts = this.options;\r\n\t\tif( ! opts.initAjax || ! opts.initAjax.url ){\r\n\t\t\tthrow \"tree.reload() requires 'initAjax' mode.\";\r\n\t\t}\r\n\t\tvar pers = this.persistence;\r\n\t\tvar ajaxOpts = $.extend({}, opts.initAjax);\r\n\t\t// Append cookie info to the request\r\n//      this.logDebug(\"reloadAjax: key=%o, an.key:%o\", pers.activeKey, this.activeNode?this.activeNode.data.key:\"?\");\r\n\t\tif( ajaxOpts.addActiveKey ){\r\n\t\t\tajaxOpts.data.activeKey = pers.activeKey;\r\n\t\t}\r\n\t\tif( ajaxOpts.addFocusedKey ){\r\n\t\t\tajaxOpts.data.focusedKey = pers.focusedKey;\r\n\t\t}\r\n\t\tif( ajaxOpts.addExpandedKeyList ){\r\n\t\t\tajaxOpts.data.expandedKeyList = pers.expandedKeyList.join(\",\");\r\n\t\t}\r\n\t\tif( ajaxOpts.addSelectedKeyList ){\r\n\t\t\tajaxOpts.data.selectedKeyList = pers.selectedKeyList.join(\",\");\r\n\t\t}\r\n\t\t// Set up onPostInit callback to be called when Ajax returns\r\n\t\tif( ajaxOpts.success ){\r\n\t\t\tthis.logWarning(\"initAjax: success callback is ignored; use onPostInit instead.\");\r\n\t\t}\r\n\t\tif( ajaxOpts.error ){\r\n\t\t\tthis.logWarning(\"initAjax: error callback is ignored; use onPostInit instead.\");\r\n\t\t}\r\n\t\tvar isReloading = pers.isReloading();\r\n\t\tajaxOpts.success = function(dtnode, data, textStatus) {\r\n\t\t\tif(opts.selectMode == 3){\r\n\t\t\t\tdtnode.tree.tnRoot._updatePartSelectionState();\r\n\t\t\t}\r\n\t\t\tif(opts.onPostInit){\r\n\t\t\t\topts.onPostInit.call(dtnode.tree, isReloading, false);\r\n\t\t\t}\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback.call(dtnode.tree, \"ok\");\r\n\t\t\t}\r\n\t\t};\r\n\t\tajaxOpts.error = function(dtnode, XMLHttpRequest, textStatus, errorThrown) {\r\n\t\t\tif(opts.onPostInit){\r\n\t\t\t\topts.onPostInit.call(dtnode.tree, isReloading, true, XMLHttpRequest, textStatus, errorThrown);\r\n\t\t\t}\r\n\t\t\tif(callback){\r\n\t\t\t\tcallback.call(dtnode.tree, \"error\", XMLHttpRequest, textStatus, errorThrown);\r\n\t\t\t}\r\n\t\t};\r\n//      }\r\n\t\tthis.logDebug(\"Dynatree._init(): send Ajax request...\");\r\n\t\tthis.tnRoot.appendAjax(ajaxOpts);\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn \"Dynatree '\" + this.$tree.attr(\"id\") + \"'\";\r\n\t},\r\n\r\n\ttoDict: function(includeRoot) {\r\n\t\tvar dict = this.tnRoot.toDict(true);\r\n\t\treturn includeRoot ? dict : dict.children;\r\n\t},\r\n\r\n\tserializeArray: function(stopOnParents) {\r\n\t\t// Return a JavaScript array of objects, ready to be encoded as a JSON\r\n\t\t// string for selected nodes\r\n\t\tvar nodeList = this.getSelectedNodes(stopOnParents),\r\n\t\t\tname = this.$tree.attr(\"name\") || this.$tree.attr(\"id\"),\r\n\t\t\tarr = [];\r\n\t\tfor(var i=0, l=nodeList.length; i<l; i++){\r\n\t\t\tarr.push({name: name, value: nodeList[i].data.key});\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\r\n\tgetPersistData: function() {\r\n\t\treturn this.persistence.toDict();\r\n\t},\r\n\r\n\tlogDebug: function(msg) {\r\n\t\tif( this.options.debugLevel >= 2 ) {\r\n\t\t\tArray.prototype.unshift.apply(arguments, [\"debug\"]);\r\n\t\t\t_log.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tlogInfo: function(msg) {\r\n\t\tif( this.options.debugLevel >= 1 ) {\r\n\t\t\tArray.prototype.unshift.apply(arguments, [\"info\"]);\r\n\t\t\t_log.apply(this, arguments);\r\n\t\t}\r\n\t},\r\n\r\n\tlogWarning: function(msg) {\r\n\t\tArray.prototype.unshift.apply(arguments, [\"warn\"]);\r\n\t\t_log.apply(this, arguments);\r\n\t},\r\n\r\n\tisInitializing: function() {\r\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" );\r\n\t},\r\n\tisReloading: function() {\r\n\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" ) && this.options.persist && this.persistence.cookiesFound;\r\n\t},\r\n\tisUserEvent: function() {\r\n\t\treturn ( this.phase==\"userEvent\" );\r\n\t},\r\n\r\n\tredraw: function() {\r\n//      this.logDebug(\"dynatree.redraw()...\");\r\n\t\tthis.tnRoot.render(false, false);\r\n//      this.logDebug(\"dynatree.redraw() done.\");\r\n\t},\r\n\trenderInvisibleNodes: function() {\r\n\t\tthis.tnRoot.render(false, true);\r\n\t},\r\n\treload: function(callback) {\r\n\t\tthis._load(callback);\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\t\treturn this.tnRoot;\r\n\t},\r\n\r\n\tenable: function() {\r\n\t\tthis.$widget.enable();\r\n\t},\r\n\r\n\tdisable: function() {\r\n\t\tthis.$widget.disable();\r\n\t},\r\n\r\n\tgetNodeByKey: function(key) {\r\n\t\t// Search the DOM by element ID (assuming this is faster than traversing all nodes).\r\n\t\t// $(\"#...\") has problems, if the key contains '.', so we use getElementById()\r\n\t\tvar el = document.getElementById(this.options.idPrefix + key);\r\n\t\tif( el ){\r\n\t\t\treturn el.dtnode ? el.dtnode : null;\r\n\t\t}\r\n\t\t// Not found in the DOM, but still may be in an unrendered part of tree\r\n\t\tvar match = null;\r\n\t\tthis.visit(function(node){\r\n//          window.console.log(\"%s\", node);\r\n\t\t\tif(node.data.key === key) {\r\n\t\t\t\tmatch = node;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}, true);\r\n\t\treturn match;\r\n\t},\r\n\r\n\tgetActiveNode: function() {\r\n\t\treturn this.activeNode;\r\n\t},\r\n\r\n\treactivate: function(setFocus) {\r\n\t\t// Re-fire onQueryActivate and onActivate events.\r\n\t\tvar node = this.activeNode;\r\n//      this.logDebug(\"reactivate %o\", node);\r\n\t\tif( node ) {\r\n\t\t\tthis.activeNode = null; // Force re-activating\r\n\t\t\tnode.activate();\r\n\t\t\tif( setFocus ){\r\n\t\t\t\tnode.focus();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tgetSelectedNodes: function(stopOnParents) {\r\n\t\tvar nodeList = [];\r\n\t\tthis.tnRoot.visit(function(node){\r\n\t\t\tif( node.bSelected ) {\r\n\t\t\t\tnodeList.push(node);\r\n\t\t\t\tif( stopOnParents === true ){\r\n\t\t\t\t\treturn \"skip\"; // stop processing this branch\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn nodeList;\r\n\t},\r\n\r\n\tactivateKey: function(key) {\r\n\t\tvar dtnode = (key === null) ? null : this.getNodeByKey(key);\r\n\t\tif( !dtnode ) {\r\n\t\t\tif( this.activeNode ){\r\n\t\t\t\tthis.activeNode.deactivate();\r\n\t\t\t}\r\n\t\t\tthis.activeNode = null;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdtnode.focus();\r\n\t\tdtnode.activate();\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\tloadKeyPath: function(keyPath, callback) {\r\n\t\tvar segList = keyPath.split(this.options.keyPathSeparator);\r\n\t\t// Remove leading '/'\r\n\t\tif(segList[0] === \"\"){\r\n\t\t\tsegList.shift();\r\n\t\t}\r\n\t\t// Remove leading system root key\r\n\t\tif(segList[0] == this.tnRoot.data.key){\r\n\t\t\tthis.logDebug(\"Removed leading root key.\");\r\n\t\t\tsegList.shift();\r\n\t\t}\r\n\t\tkeyPath = segList.join(this.options.keyPathSeparator);\r\n\t\treturn this.tnRoot._loadKeyPath(keyPath, callback);\r\n\t},\r\n\r\n\tselectKey: function(key, select) {\r\n\t\tvar dtnode = this.getNodeByKey(key);\r\n\t\tif( !dtnode ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tdtnode.select(select);\r\n\t\treturn dtnode;\r\n\t},\r\n\r\n\tenableUpdate: function(bEnable) {\r\n\t\tif ( this.bEnableUpdate==bEnable ){\r\n\t\t\treturn bEnable;\r\n\t\t}\r\n\t\tthis.bEnableUpdate = bEnable;\r\n\t\tif ( bEnable ){\r\n\t\t\tthis.redraw();\r\n\t\t}\r\n\t\treturn !bEnable; // return previous value\r\n\t},\r\n\r\n\tcount: function() {\r\n\t\treturn this.tnRoot.countChildren();\r\n\t},\r\n\r\n\tvisit: function(fn, includeRoot) {\r\n\t\treturn this.tnRoot.visit(fn, includeRoot);\r\n\t},\r\n\r\n\t_createFromTag: function(parentTreeNode, $ulParent) {\r\n\t\t// Convert a <UL>...</UL> list into children of the parent tree node.\r\n\t\tvar self = this;\r\n/*\r\nTODO: better?\r\n\t\tthis.$lis = $(\"li:has(a[href])\", this.element);\r\n\t\tthis.$tabs = this.$lis.map(function() { return $(\"a\", this)[0]; });\r\n */\r\n\t\t$ulParent.find(\">li\").each(function() {\r\n\t\t\tvar $li = $(this),\r\n\t\t\t\t$liSpan = $li.find(\">span:first\"),\r\n\t\t\t\t$liA = $li.find(\">a:first\"),\r\n\t\t\t\ttitle,\r\n\t\t\t\thref = null,\r\n\t\t\t\ttarget = null,\r\n\t\t\t\ttooltip;\r\n\t\t\tif( $liSpan.length ) {\r\n\t\t\t\t// If a <li><span> tag is specified, use it literally.\r\n\t\t\t\ttitle = $liSpan.html();\r\n\t\t\t} else if( $liA.length ) {\r\n\t\t\t\ttitle = $liA.html();\r\n\t\t\t\thref = $liA.attr(\"href\");\r\n\t\t\t\ttarget = $liA.attr(\"target\");\r\n\t\t\t\ttooltip = $liA.attr(\"title\");\r\n\t\t\t} else {\r\n\t\t\t\t// If only a <li> tag is specified, use the trimmed string up to\r\n\t\t\t\t// the next child <ul> tag.\r\n\t\t\t\ttitle = $li.html();\r\n\t\t\t\tvar iPos = title.search(/<ul/i);\r\n\t\t\t\tif( iPos >= 0 ){\r\n\t\t\t\t\ttitle = $.trim(title.substring(0, iPos));\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttitle = $.trim(title);\r\n\t\t\t\t}\r\n//              self.logDebug(\"%o\", title);\r\n\t\t\t}\r\n\t\t\t// Parse node options from ID, title and class attributes\r\n\t\t\tvar data = {\r\n\t\t\t\ttitle: title,\r\n\t\t\t\ttooltip: tooltip,\r\n\t\t\t\tisFolder: $li.hasClass(\"folder\"),\r\n\t\t\t\tisLazy: $li.hasClass(\"lazy\"),\r\n\t\t\t\texpand: $li.hasClass(\"expanded\"),\r\n\t\t\t\tselect: $li.hasClass(\"selected\"),\r\n\t\t\t\tactivate: $li.hasClass(\"active\"),\r\n\t\t\t\tfocus: $li.hasClass(\"focused\"),\r\n\t\t\t\tnoLink: $li.hasClass(\"noLink\")\r\n\t\t\t};\r\n\t\t\tif( href ){\r\n\t\t\t\tdata.href = href;\r\n\t\t\t\tdata.target = target;\r\n\t\t\t}\r\n\t\t\tif( $li.attr(\"title\") ){\r\n\t\t\t\tdata.tooltip = $li.attr(\"title\"); // overrides <a title='...'>\r\n\t\t\t}\r\n\t\t\tif( $li.attr(\"id\") ){\r\n\t\t\t\tdata.key = \"\" + $li.attr(\"id\");\r\n\t\t\t}\r\n\t\t\t// If a data attribute is present, evaluate as a JavaScript object\r\n\t\t\tif( $li.attr(\"data\") ) {\r\n\t\t\t\tvar dataAttr = $.trim($li.attr(\"data\"));\r\n\t\t\t\tif( dataAttr ) {\r\n\t\t\t\t\tif( dataAttr.charAt(0) != \"{\" ){\r\n\t\t\t\t\t\tdataAttr = \"{\" + dataAttr + \"}\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$.extend(data, eval(\"(\" + dataAttr + \")\"));\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow (\"Error parsing node data: \" + e + \"\\ndata:\\n'\" + dataAttr + \"'\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar childNode = parentTreeNode.addChild(data);\r\n\t\t\t// Recursive reading of child nodes, if LI tag contains an UL tag\r\n\t\t\tvar $ul = $li.find(\">ul:first\");\r\n\t\t\tif( $ul.length ) {\r\n\t\t\t\tself._createFromTag(childNode, $ul); // must use 'self', because 'this' is the each() context\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_checkConsistency: function() {\r\n//      this.logDebug(\"tree._checkConsistency() NOT IMPLEMENTED - %o\", this);\r\n\t},\r\n\r\n\t_setDndStatus: function(sourceNode, targetNode, helper, hitMode, accept) {\r\n\t\t// hitMode: 'after', 'before', 'over', 'out', 'start', 'stop'\r\n\t\tvar $source = sourceNode ? $(sourceNode.span) : null,\r\n\t\t\t$target = $(targetNode.span),\r\n\t\t\tposOpts,\r\n\t\t\tmarkerOffsetX = 0,\r\n\t\t\tmarkerAt = \"center\";\r\n\r\n\t\tif( !this.$dndMarker ) {\r\n\t\t\tthis.$dndMarker = $(\"<div id='dynatree-drop-marker'></div>\")\r\n\t\t\t\t.hide()\r\n\t\t\t\t.css({\"z-index\": 1000})\r\n\t\t\t\t.prependTo($(this.divTree).parent());\r\n\r\n//          logMsg(\"Creating marker: %o\", this.$dndMarker);\r\n\t\t}\r\n/*\r\n\t\tif(hitMode === \"start\"){\r\n\t\t}\r\n\t\tif(hitMode === \"stop\"){\r\n//          sourceNode.removeClass(\"dynatree-drop-target\");\r\n\t\t}\r\n*/\r\n\t\tif(hitMode === \"after\" || hitMode === \"before\" || hitMode === \"over\"){\r\n//          $source && $source.addClass(\"dynatree-drag-source\");\r\n//          $target.addClass(\"dynatree-drop-target\");\r\n\r\n\t\t\tswitch(hitMode){\r\n\t\t\tcase \"before\":\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-after dynatree-drop-over\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-before\");\r\n\t\t\t\tmarkerAt = \"top\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"after\":\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-before dynatree-drop-over\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-after\");\r\n\t\t\t\tmarkerAt = \"bottom\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.$dndMarker.removeClass(\"dynatree-drop-after dynatree-drop-before\");\r\n\t\t\t\tthis.$dndMarker.addClass(\"dynatree-drop-over\");\r\n\t\t\t\t$target.addClass(\"dynatree-drop-target\");\r\n\t\t\t\tmarkerOffsetX = 8;\r\n\t\t\t}\r\n//          logMsg(\"Creating marker: %o\", this.$dndMarker);\r\n//          logMsg(\"    $target.offset=%o\", $target);\r\n//          logMsg(\"    pos/$target.offset=%o\", pos);\r\n//          logMsg(\"    $target.position=%o\", $target.position());\r\n//          logMsg(\"    $target.offsetParent=%o, ot:%o\", $target.offsetParent(), $target.offsetParent().offset());\r\n//          logMsg(\"    $(this.divTree).offset=%o\", $(this.divTree).offset());\r\n//          logMsg(\"    $(this.divTree).parent=%o\", $(this.divTree).parent());\r\n//          var pos = $target.offset();\r\n//          var parentPos = $target.offsetParent().offset();\r\n//          var bodyPos = $target.offsetParent().offset();\r\n\r\n\t\t\tif( jquerySupports.positionMyOfs ){\r\n\t\t\t\tposOpts = {\r\n\t\t\t\t\tmy: \"left\" + offsetString(markerOffsetX) + \" center\",\r\n\t\t\t\t\tat: \"left \" + markerAt,\r\n\t\t\t\t\tof: $target\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tposOpts = {\r\n\t\t\t\t\tmy: \"left center\",\r\n\t\t\t\t\tat: \"left \" + markerAt,\r\n\t\t\t\t\tof: $target,\r\n\t\t\t\t\toffset: \"\" + markerOffsetX + \" 0\"\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tthis.$dndMarker\r\n\t\t\t\t.show()\r\n\t\t\t\t.position(posOpts);\r\n\r\n//          helper.addClass(\"dynatree-drop-hover\");\r\n\t\t} else {\r\n//          $source && $source.removeClass(\"dynatree-drag-source\");\r\n\t\t\t$target.removeClass(\"dynatree-drop-target\");\r\n\t\t\tthis.$dndMarker.hide();\r\n//          helper.removeClass(\"dynatree-drop-hover\");\r\n\t\t}\r\n\t\tif(hitMode === \"after\"){\r\n\t\t\t$target.addClass(\"dynatree-drop-after\");\r\n\t\t} else {\r\n\t\t\t$target.removeClass(\"dynatree-drop-after\");\r\n\t\t}\r\n\t\tif(hitMode === \"before\"){\r\n\t\t\t$target.addClass(\"dynatree-drop-before\");\r\n\t\t} else {\r\n\t\t\t$target.removeClass(\"dynatree-drop-before\");\r\n\t\t}\r\n\t\tif(accept === true){\r\n\t\t\tif($source){\r\n\t\t\t\t$source.addClass(\"dynatree-drop-accept\");\r\n\t\t\t}\r\n\t\t\t$target.addClass(\"dynatree-drop-accept\");\r\n\t\t\thelper.addClass(\"dynatree-drop-accept\");\r\n\t\t}else{\r\n\t\t\tif($source){\r\n\t\t\t\t$source.removeClass(\"dynatree-drop-accept\");\r\n\t\t\t}\r\n\t\t\t$target.removeClass(\"dynatree-drop-accept\");\r\n\t\t\thelper.removeClass(\"dynatree-drop-accept\");\r\n\t\t}\r\n\t\tif(accept === false){\r\n\t\t\tif($source){\r\n\t\t\t\t$source.addClass(\"dynatree-drop-reject\");\r\n\t\t\t}\r\n\t\t\t$target.addClass(\"dynatree-drop-reject\");\r\n\t\t\thelper.addClass(\"dynatree-drop-reject\");\r\n\t\t}else{\r\n\t\t\tif($source){\r\n\t\t\t\t$source.removeClass(\"dynatree-drop-reject\");\r\n\t\t\t}\r\n\t\t\t$target.removeClass(\"dynatree-drop-reject\");\r\n\t\t\thelper.removeClass(\"dynatree-drop-reject\");\r\n\t\t}\r\n\t},\r\n\r\n\t_onDragEvent: function(eventName, node, otherNode, event, ui, draggable) {\r\n\t\t/**\r\n\t\t * Handles drag'n'drop functionality.\r\n\t\t *\r\n\t\t * A standard jQuery drag-and-drop process may generate these calls:\r\n\t\t *\r\n\t\t * draggable helper():\r\n\t\t *     _onDragEvent(\"helper\", sourceNode, null, event, null, null);\r\n\t\t * start:\r\n\t\t *     _onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\r\n\t\t * drag:\r\n\t\t *     _onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t * stop:\r\n\t\t *     _onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t *     _onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\r\n\t\t */\r\n\t\tvar hitMode, enterResponse, r,\r\n\t\t\tdnd = this.options.dnd,\r\n\t\t\tres = null,\r\n\t\t\tnodeTag = $(node.span);\r\n\r\n\t\tswitch (eventName) {\r\n\t\tcase \"helper\":\r\n\t\t\t// Only event and node argument is available\r\n\t\t\tvar $helper = $(\"<div class='dynatree-drag-helper'><span class='dynatree-drag-helper-img' /></div>\")\r\n\t\t\t\t\t// .append($(event.target).closest(\".dynatree-title\").clone());\r\n\t\t\t\t\t.append(nodeTag.find(\".dynatree-title\").clone());\r\n\t\t\t// issue 244: helper should be child of scrollParent\r\n\t\t\t$(\"ul.dynatree-container\", node.tree.divTree).append($helper);\r\n//          $(node.tree.divTree).append($helper);\r\n\t\t\t// Attach node reference to helper object\r\n\t\t\t$helper.data(\"dtSourceNode\", node);\r\n\t\t\tres = $helper;\r\n\t\t\tbreak;\r\n\t\tcase \"start\":\r\n\t\t\tif(node.isStatusNode()) {\r\n\t\t\t\tres = false;\r\n\t\t\t} else if(dnd.onDragStart) {\r\n\t\t\t\tres = dnd.onDragStart(node);\r\n\t\t\t}\r\n\t\t\tif(res === false) {\r\n\t\t\t\tthis.logDebug(\"tree.onDragStart() cancelled\");\r\n\t\t\t\t//draggable._clear();\r\n\t\t\t\t// NOTE: the return value seems to be ignored (drag is not canceled, when false is returned)\r\n\t\t\t\tui.helper.trigger(\"mouseup\");\r\n\t\t\t\tui.helper.hide();\r\n\t\t\t} else {\r\n\t\t\t\tnodeTag.addClass(\"dynatree-drag-source\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"enter\":\r\n\t\t\tr = dnd.onDragEnter ? dnd.onDragEnter(node, otherNode, ui, draggable) : null;\r\n\t\t\tif(!r){\r\n\t\t\t\t// convert null, undefined, false to false\r\n\t\t\t\tres = false;\r\n\t\t\t}else if ( $.isArray(r) ) {\r\n\t\t\t\tres = {\r\n\t\t\t\t\tover: ($.inArray(\"over\", r) >= 0),\r\n\t\t\t\t\tbefore: ($.inArray(\"before\", r) >= 0),\r\n\t\t\t\t\tafter: ($.inArray(\"after\", r) >= 0)\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tres = {\r\n\t\t\t\t\tover: ((r === true) || (r === \"over\")),\r\n\t\t\t\t\tbefore: ((r === true) || (r === \"before\")),\r\n\t\t\t\t\tafter: ((r === true) || (r === \"after\"))\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tui.helper.data(\"enterResponse\", res);\r\n//            this.logDebug(\"helper.enterResponse: %o\", res);\r\n\t\t\tbreak;\r\n\t\tcase \"over\":\r\n\t\t\tenterResponse = ui.helper.data(\"enterResponse\");\r\n\t\t\thitMode = null;\r\n\t\t\tif(enterResponse === false){\r\n\t\t\t\t// Don't call onDragOver if onEnter returned false.\r\n\t\t\t\t// issue 332\r\n//              break;\r\n\t\t\t} else if(typeof enterResponse === \"string\") {\r\n\t\t\t\t// Use hitMode from onEnter if provided.\r\n\t\t\t\thitMode = enterResponse;\r\n\t\t\t} else {\r\n\t\t\t\t// Calculate hitMode from relative cursor position.\r\n\t\t\t\tvar nodeOfs = nodeTag.offset();\r\n\t\t\t\tvar relPos = { x: event.pageX - nodeOfs.left,\r\n\t\t\t\t\t\t\t   y: event.pageY - nodeOfs.top };\r\n\t\t\t\tvar relPos2 = { x: relPos.x / nodeTag.width(),\r\n\t\t\t\t\t\t\t\ty: relPos.y / nodeTag.height() };\r\n\r\n\t\t\t\tif( enterResponse.after && relPos2.y > 0.75 ){\r\n\t\t\t\t\thitMode = \"after\";\r\n\t\t\t\t} else if(!enterResponse.over && enterResponse.after && relPos2.y > 0.5 ){\r\n\t\t\t\t\thitMode = \"after\";\r\n\t\t\t\t} else if(enterResponse.before && relPos2.y <= 0.25) {\r\n\t\t\t\t\thitMode = \"before\";\r\n\t\t\t\t} else if(!enterResponse.over && enterResponse.before && relPos2.y <= 0.5) {\r\n\t\t\t\t\thitMode = \"before\";\r\n\t\t\t\t} else if(enterResponse.over) {\r\n\t\t\t\t\thitMode = \"over\";\r\n\t\t\t\t}\r\n\t\t\t\t// Prevent no-ops like 'before source node'\r\n\t\t\t\t// TODO: these are no-ops when moving nodes, but not in copy mode\r\n\t\t\t\tif( dnd.preventVoidMoves ){\r\n\t\t\t\t\tif(node === otherNode){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"before\" && otherNode && node === otherNode.getNextSibling()){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"after\" && otherNode && node === otherNode.getPrevSibling()){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}else if(hitMode === \"over\" && otherNode\r\n\t\t\t\t\t\t\t&& otherNode.parent === node && otherNode.isLastSibling() ){\r\n\t\t\t\t\t\thitMode = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n//              this.logDebug(\"hitMode: %s - %s - %s\", hitMode, (node.parent === otherNode), node.isLastSibling());\r\n\t\t\t\tui.helper.data(\"hitMode\", hitMode);\r\n\t\t\t}\r\n\t\t\t// Auto-expand node (only when 'over' the node, not 'before', or 'after')\r\n\t\t\tif(hitMode === \"over\"\r\n\t\t\t\t&& dnd.autoExpandMS && node.hasChildren() !== false && !node.bExpanded) {\r\n\t\t\t\tnode.scheduleAction(\"expand\", dnd.autoExpandMS);\r\n\t\t\t}\r\n\t\t\tif(hitMode && dnd.onDragOver){\r\n\t\t\t\tres = dnd.onDragOver(node, otherNode, hitMode, ui, draggable);\r\n\t\t\t\tif(res === \"over\" || res === \"before\" || res === \"after\") {\r\n\t\t\t\t\thitMode = res;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// issue 332\r\n//          this._setDndStatus(otherNode, node, ui.helper, hitMode, res!==false);\r\n\t\t\tthis._setDndStatus(otherNode, node, ui.helper, hitMode, res!==false && hitMode !== null);\r\n\t\t\tbreak;\r\n\t\tcase \"drop\":\r\n\t\t\t// issue 286: don't trigger onDrop, if DnD status is 'reject'\r\n\t\t\tvar isForbidden = ui.helper.hasClass(\"dynatree-drop-reject\");\r\n\t\t\thitMode = ui.helper.data(\"hitMode\");\r\n\t\t\tif(hitMode && dnd.onDrop && !isForbidden){\r\n\t\t\t\tdnd.onDrop(node, otherNode, hitMode, ui, draggable);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"leave\":\r\n\t\t\t// Cancel pending expand request\r\n\t\t\tnode.scheduleAction(\"cancel\");\r\n\t\t\tui.helper.data(\"enterResponse\", null);\r\n\t\t\tui.helper.data(\"hitMode\", null);\r\n\t\t\tthis._setDndStatus(otherNode, node, ui.helper, \"out\", undefined);\r\n\t\t\tif(dnd.onDragLeave){\r\n\t\t\t\tdnd.onDragLeave(node, otherNode, ui, draggable);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"stop\":\r\n\t\t\tnodeTag.removeClass(\"dynatree-drag-source\");\r\n\t\t\tif(dnd.onDragStop){\r\n\t\t\t\tdnd.onDragStop(node);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow \"Unsupported drag event: \" + eventName;\r\n\t\t}\r\n\t\treturn res;\r\n\t},\r\n\r\n\tcancelDrag: function() {\r\n\t\t var dd = $.ui.ddmanager.current;\r\n\t\t if(dd){\r\n\t\t\t dd.cancel();\r\n\t\t }\r\n\t},\r\n\r\n\t// --- end of class\r\n\tlastentry: undefined\r\n};\r\n\r\n/*************************************************************************\r\n * Widget $(..).dynatree\r\n */\r\n\r\n$.widget(\"ui.dynatree\", {\r\n/*\r\n\tinit: function() {\r\n\t\t// ui.core 1.6 renamed init() to _init(): this stub assures backward compatibility\r\n\t\t_log(\"warn\", \"ui.dynatree.init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.\");\r\n\t\treturn this._init();\r\n\t},\r\n */\r\n\t_init: function() {\r\n//      if( parseFloat($.ui.version) < 1.8 ) {\r\n\t\tif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t\t\t// jquery.ui.core 1.8 renamed _init() to _create(): this stub assures backward compatibility\r\n\t\t\tif(this.options.debugLevel >= 0){\r\n\t\t\t\t_log(\"warn\", \"ui.dynatree._init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.\");\r\n\t\t\t}\r\n\t\t\treturn this._create();\r\n\t\t}\r\n\t\t// jquery.ui.core 1.8 still uses _init() to perform \"default functionality\"\r\n\t\tif(this.options.debugLevel >= 2){\r\n\t\t\t_log(\"debug\", \"ui.dynatree._init() was called; no current default functionality.\");\r\n\t\t}\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar opts = this.options;\r\n\t\tif(opts.debugLevel >= 1){\r\n\t\t\tlogMsg(\"Dynatree._create(): version='%s', debugLevel=%o.\", $.ui.dynatree.version, this.options.debugLevel);\r\n\t\t}\r\n\t\t// The widget framework supplies this.element and this.options.\r\n\t\tthis.options.event += \".dynatree\"; // namespace event\r\n\r\n\t\tvar divTree = this.element.get(0);\r\n/*      // Clear container, in case it contained some 'waiting' or 'error' text\r\n\t\t// for clients that don't support JS\r\n\t\tif( opts.children || (opts.initAjax && opts.initAjax.url) || opts.initId )\r\n\t\t\t$(divTree).empty();\r\n*/\r\n\t\t// Create the DynaTree object\r\n\t\tthis.tree = new DynaTree(this);\r\n\t\tthis.tree._load();\r\n\t\tthis.tree.logDebug(\"Dynatree._init(): done.\");\r\n\t},\r\n\r\n\tbind: function() {\r\n\t\t// Prevent duplicate binding\r\n\t\tthis.unbind();\r\n\r\n\t\tvar eventNames = \"click.dynatree dblclick.dynatree\";\r\n\t\tif( this.options.keyboard ){\r\n\t\t\t// Note: leading ' '!\r\n\t\t\teventNames += \" keypress.dynatree keydown.dynatree\";\r\n\t\t}\r\n\t\tthis.element.bind(eventNames, function(event){\r\n\t\t\tvar dtnode = $.ui.dynatree.getNode(event.target);\r\n\t\t\tif( !dtnode ){\r\n\t\t\t\treturn true;  // Allow bubbling of other events\r\n\t\t\t}\r\n\t\t\tvar tree = dtnode.tree;\r\n\t\t\tvar o = tree.options;\r\n\t\t\ttree.logDebug(\"event(%s): dtnode: %s\", event.type, dtnode);\r\n\t\t\tvar prevPhase = tree.phase;\r\n\t\t\ttree.phase = \"userEvent\";\r\n\t\t\ttry {\r\n\t\t\t\tswitch(event.type) {\r\n\t\t\t\tcase \"click\":\r\n\t\t\t\t\treturn ( o.onClick && o.onClick.call(tree, dtnode, event)===false ) ? false : dtnode._onClick(event);\r\n\t\t\t\tcase \"dblclick\":\r\n\t\t\t\t\treturn ( o.onDblClick && o.onDblClick.call(tree, dtnode, event)===false ) ? false : dtnode._onDblClick(event);\r\n\t\t\t\tcase \"keydown\":\r\n\t\t\t\t\treturn ( o.onKeydown && o.onKeydown.call(tree, dtnode, event)===false ) ? false : dtnode._onKeydown(event);\r\n\t\t\t\tcase \"keypress\":\r\n\t\t\t\t\treturn ( o.onKeypress && o.onKeypress.call(tree, dtnode, event)===false ) ? false : dtnode._onKeypress(event);\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {\r\n\t\t\t\tvar _ = null; // issue 117\r\n\t\t\t\ttree.logWarning(\"bind(%o): dtnode: %o, error: %o\", event, dtnode, e);\r\n\t\t\t} finally {\r\n\t\t\t\ttree.phase = prevPhase;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// focus/blur don't bubble, i.e. are not delegated to parent <div> tags,\r\n\t\t// so we use the addEventListener capturing phase.\r\n\t\t// See http://www.howtocreate.co.uk/tutorials/javascript/domevents\r\n\t\tfunction __focusHandler(event) {\r\n\t\t\t// Handles blur and focus.\r\n\t\t\t// Fix event for IE:\r\n\t\t\t// doesn't pass JSLint:\r\n//          event = arguments[0] = $.event.fix( event || window.event );\r\n\t\t\t// what jQuery does:\r\n//          var args = jQuery.makeArray( arguments );\r\n//          event = args[0] = jQuery.event.fix( event || window.event );\r\n\t\t\tevent = $.event.fix( event || window.event );\r\n\t\t\tvar dtnode = $.ui.dynatree.getNode(event.target);\r\n\t\t\treturn dtnode ? dtnode._onFocus(event) : false;\r\n\t\t}\r\n\t\tvar div = this.tree.divTree;\r\n\r\n\t\tif( div.addEventListener ) {\r\n\t\t\tdiv.addEventListener(\"focus\", __focusHandler, true);\r\n\t\t\tdiv.addEventListener(\"blur\", __focusHandler, true);\r\n\t\t} else {\r\n\t\t\tdiv.onfocusin = div.onfocusout = __focusHandler;\r\n\t\t}\r\n\t\t// EVENTS\r\n\t\t// disable click if event is configured to something else\r\n//      if (!(/^click/).test(o.event))\r\n//          this.$tabs.bind(\"click.tabs\", function() { return false; });\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\t\tthis.element.unbind(\".dynatree\");\r\n\t},\r\n\r\n/* TODO: we could handle option changes during runtime here (maybe to re-render, ...)\r\n\tsetData: function(key, value) {\r\n\t\tthis.tree.logDebug(\"dynatree.setData('\" + key + \"', '\" + value + \"')\");\r\n\t},\r\n*/\r\n\tenable: function() {\r\n\t\tthis.bind();\r\n\t\t// Call default disable(): remove -disabled from css:\r\n\t\t$.Widget.prototype.enable.apply(this, arguments);\r\n\t},\r\n\r\n\tdisable: function() {\r\n\t\tthis.unbind();\r\n\t\t// Call default disable(): add -disabled to css:\r\n\t\t$.Widget.prototype.disable.apply(this, arguments);\r\n\t},\r\n\r\n\t// --- getter methods (i.e. NOT returning a reference to $)\r\n\tgetTree: function() {\r\n\t\treturn this.tree;\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\t\treturn this.tree.getRoot();\r\n\t},\r\n\r\n\tgetActiveNode: function() {\r\n\t\treturn this.tree.getActiveNode();\r\n\t},\r\n\r\n\tgetSelectedNodes: function() {\r\n\t\treturn this.tree.getSelectedNodes();\r\n\t},\r\n\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n});\r\n\r\n\r\n// The following methods return a value (thus breaking the jQuery call chain):\r\nif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t$.ui.dynatree.getter = \"getTree getRoot getActiveNode getSelectedNodes\";\r\n}\r\n\r\n/*******************************************************************************\r\n * Tools in ui.dynatree namespace\r\n */\r\n$.extend($.ui.dynatree, {\r\n\t/** @type {String} */\r\n\tversion: \"1.2.8\",\r\n\t/** @type {String} */\r\n\tbuildType: \"release\",\r\n\t/** Expose class object as $.ui.dynatree._DynaTreeClass */\r\n\t_DynaTreeClass: DynaTree,\r\n\t/** Expose class object as $.ui.dynatree._DynaTreeNodeClass */\r\n\t_DynaTreeNodeClass: DynaTreeNode,\r\n\t/**\r\n\t * Return a DynaTreeNode object for a given DOM element\r\n\t */\r\n\tgetNode: function(el) {\r\n\t\tif(el instanceof DynaTreeNode){\r\n\t\t\treturn el; // el already was a DynaTreeNode\r\n\t\t}\r\n\t\tif(el.selector !== undefined){\r\n\t\t\tel = el[0]; // el was a jQuery object: use the DOM element\r\n\t\t}\r\n\t\t// TODO: for some reason $el.parents(\"[dtnode]\") does not work (jQuery 1.6.1)\r\n\t\t// maybe, because dtnode is a property, not an attribute\r\n\t\twhile( el ) {\r\n\t\t\tif(el.dtnode) {\r\n\t\t\t\treturn el.dtnode;\r\n\t\t\t}\r\n\t\t\tel = el.parentNode;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t/**Return persistence information from cookies.*/\r\n\tgetPersistData: DynaTreeStatus._getTreePersistData\r\n});\r\n\r\n\r\n\r\n/*******************************************************************************\r\n * Plugin default options:\r\n */\r\n$.ui.dynatree.prototype.options = {\r\n\ttitle: \"Dynatree\", // Tree's name (only used for debug output)\r\n\tminExpandLevel: 1, // 1: root node is not collapsible\r\n\timagePath: null, // Path to a folder containing icons. Defaults to 'skin/' subdirectory.\r\n\tchildren: null, // Init tree structure from this object array.\r\n\tinitId: null, // Init tree structure from a <ul> element with this ID.\r\n\tinitAjax: null, // Ajax options used to initialize the tree strucuture.\r\n\tautoFocus: true, // Set focus to first child, when expanding or lazy-loading.\r\n\tkeyboard: true, // Support keyboard navigation.\r\n\tpersist: false, // Persist expand-status to a cookie\r\n\tautoCollapse: false, // Automatically collapse all siblings, when a node is expanded.\r\n\tclickFolderMode: 3, // 1:activate, 2:expand, 3:activate and expand\r\n\tactiveVisible: true, // Make sure, active nodes are visible (expanded).\r\n\tcheckbox: false, // Show checkboxes.\r\n\tselectMode: 2, // 1:single, 2:multi, 3:multi-hier\r\n\tfx: null, // Animations, e.g. null or { height: \"toggle\", duration: 200 }\r\n\tnoLink: false, // Use <span> instead of <a> tags for all nodes\r\n\t// Low level event handlers: onEvent(dtnode, event): return false, to stop default processing\r\n\tonClick: null, // null: generate focus, expand, activate, select events.\r\n\tonDblClick: null, // (No default actions.)\r\n\tonKeydown: null, // null: generate keyboard navigation (focus, expand, activate).\r\n\tonKeypress: null, // (No default actions.)\r\n\tonFocus: null, // null: set focus to node.\r\n\tonBlur: null, // null: remove focus from node.\r\n\r\n\t// Pre-event handlers onQueryEvent(flag, dtnode): return false, to stop processing\r\n\tonQueryActivate: null, // Callback(flag, dtnode) before a node is (de)activated.\r\n\tonQuerySelect: null, // Callback(flag, dtnode) before a node is (de)selected.\r\n\tonQueryExpand: null, // Callback(flag, dtnode) before a node is expanded/collpsed.\r\n\r\n\t// High level event handlers\r\n\tonPostInit: null, // Callback(isReloading, isError) when tree was (re)loaded.\r\n\tonActivate: null, // Callback(dtnode) when a node is activated.\r\n\tonDeactivate: null, // Callback(dtnode) when a node is deactivated.\r\n\tonSelect: null, // Callback(flag, dtnode) when a node is (de)selected.\r\n\tonExpand: null, // Callback(flag, dtnode) when a node is expanded/collapsed.\r\n\tonLazyRead: null, // Callback(dtnode) when a lazy node is expanded for the first time.\r\n\tonCustomRender: null, // Callback(dtnode) before a node is rendered. Return a HTML string to override.\r\n\tonCreate: null, // Callback(dtnode, nodeSpan) after a node was rendered for the first time.\r\n\tonRender: null, // Callback(dtnode, nodeSpan) after a node was rendered.\r\n\t\t\t\t// postProcess is similar to the standard dataFilter hook,\r\n\t\t\t\t// but it is also called for JSONP\r\n\tpostProcess: null, // Callback(data, dataType) before an Ajax result is passed to dynatree\r\n\r\n\t// Drag'n'drop support\r\n\tdnd: {\r\n\t\t// Make tree nodes draggable:\r\n\t\tonDragStart: null, // Callback(sourceNode), return true, to enable dnd\r\n\t\tonDragStop: null, // Callback(sourceNode)\r\n//      helper: null,\r\n\t\trevert: false, // true: slide helper back to source if drop is rejected\r\n\t\t// Make tree nodes accept draggables\r\n\t\tautoExpandMS: 1000, // Expand nodes after n milliseconds of hovering.\r\n\t\tpreventVoidMoves: true, // Prevent dropping nodes 'before self', etc.\r\n\t\tonDragEnter: null, // Callback(targetNode, sourceNode, ui, draggable)\r\n\t\tonDragOver: null, // Callback(targetNode, sourceNode, hitMode)\r\n\t\tonDrop: null, // Callback(targetNode, sourceNode, hitMode, ui, draggable)\r\n\t\tonDragLeave: null // Callback(targetNode, sourceNode)\r\n\t},\r\n\tajaxDefaults: { // Used by initAjax option\r\n\t\tcache: false, // false: Append random '_' argument to the request url to prevent caching.\r\n\t\ttimeout: 0, // >0: Make sure we get an ajax error for invalid URLs\r\n\t\tdataType: \"json\" // Expect json format and pass json object to callbacks.\r\n\t},\r\n\tstrings: {\r\n\t\tloading: \"Loading&#8230;\",\r\n\t\tloadError: \"Load error!\"\r\n\t},\r\n\tgenerateIds: false, // Generate id attributes like <span id='dynatree-id-KEY'>\r\n\tidPrefix: \"dynatree-id-\", // Used to generate node id's like <span id=\"dynatree-id-<key>\">.\r\n\tkeyPathSeparator: \"/\", // Used by node.getKeyPath() and tree.loadKeyPath().\r\n//    cookieId: \"dynatree-cookie\", // Choose a more unique name, to allow multiple trees.\r\n\tcookieId: \"dynatree\", // Choose a more unique name, to allow multiple trees.\r\n\tcookie: {\r\n\t\texpires: null //7, // Days or Date; null: session cookie\r\n//      path: \"/\", // Defaults to current page\r\n//      domain: \"jquery.com\",\r\n//      secure: true\r\n\t},\r\n\t// Class names used, when rendering the HTML markup.\r\n\t// Note:\r\n\t// These settings only apply on initialisation.\r\n\t// If only single entries are passed for options.classNames, all other\r\n\t// values are still set to default.\r\n\tclassNames: {\r\n\t\tcontainer: \"dynatree-container\",\r\n\t\tnode: \"dynatree-node\",\r\n\t\tfolder: \"dynatree-folder\",\r\n//      document: \"dynatree-document\",\r\n\r\n\t\tempty: \"dynatree-empty\",\r\n\t\tvline: \"dynatree-vline\",\r\n\t\texpander: \"dynatree-expander\",\r\n\t\tconnector: \"dynatree-connector\",\r\n\t\tcheckbox: \"dynatree-checkbox\",\r\n\t\tradio: \"dynatree-radio\",\r\n\t\tnodeIcon: \"dynatree-icon\",\r\n\t\ttitle: \"dynatree-title\",\r\n\t\tnoConnector: \"dynatree-no-connector\",\r\n\r\n\t\tnodeError: \"dynatree-statusnode-error\",\r\n\t\tnodeWait: \"dynatree-statusnode-wait\",\r\n\t\thidden: \"dynatree-hidden\",\r\n\t\tcombinedExpanderPrefix: \"dynatree-exp-\",\r\n\t\tcombinedIconPrefix: \"dynatree-ico-\",\r\n\t\tnodeLoading: \"dynatree-loading\",\r\n//      disabled: \"dynatree-disabled\",\r\n\t\thasChildren: \"dynatree-has-children\",\r\n\t\tactive: \"dynatree-active\",\r\n\t\tselected: \"dynatree-selected\",\r\n\t\texpanded: \"dynatree-expanded\",\r\n\t\tlazy: \"dynatree-lazy\",\r\n\t\tfocused: \"dynatree-focused\",\r\n\t\tpartsel: \"dynatree-partsel\",\r\n\t\tlastsib: \"dynatree-lastsib\"\r\n\t},\r\n\tdebugLevel: 1, // 0:quiet, 1:normal, 2:debug\r\n\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n};\r\n//\r\nif(versionCompare($.ui.version, \"1.8\") < 0){\r\n\t$.ui.dynatree.defaults = $.ui.dynatree.prototype.options;\r\n}\r\n\r\n/*******************************************************************************\r\n * Reserved data attributes for a tree node.\r\n */\r\n$.ui.dynatree.nodedatadefaults = {\r\n\ttitle: null, // (required) Displayed name of the node (html is allowed here)\r\n\tkey: null, // May be used with activate(), select(), find(), ...\r\n\tisFolder: false, // Use a folder icon. Also the node is expandable but not selectable.\r\n\tisLazy: false, // Call onLazyRead(), when the node is expanded for the first time to allow for delayed creation of children.\r\n\ttooltip: null, // Show this popup text.\r\n\thref: null, // Added to the generated <a> tag.\r\n\ticon: null, // Use a custom image (filename relative to tree.options.imagePath). 'null' for default icon, 'false' for no icon.\r\n\taddClass: null, // Class name added to the node's span tag.\r\n\tnoLink: false, // Use <span> instead of <a> tag for this node\r\n\tactivate: false, // Initial active status.\r\n\tfocus: false, // Initial focused status.\r\n\texpand: false, // Initial expanded status.\r\n\tselect: false, // Initial selected status.\r\n\thideCheckbox: false, // Suppress checkbox display for this node.\r\n\tunselectable: false, // Prevent selection.\r\n//  disabled: false,\r\n\t// The following attributes are only valid if passed to some functions:\r\n\tchildren: null, // Array of child nodes.\r\n\t// NOTE: we can also add custom attributes here.\r\n\t// This may then also be used in the onActivate(), onSelect() or onLazyTree() callbacks.\r\n\t// ------------------------------------------------------------------------\r\n\tlastentry: undefined\r\n};\r\n\r\n/*******************************************************************************\r\n * Drag and drop support\r\n */\r\nfunction _initDragAndDrop(tree) {\r\n\tvar dnd = tree.options.dnd || null;\r\n\t// Register 'connectToDynatree' option with ui.draggable\r\n\tif(dnd && (dnd.onDragStart || dnd.onDrop)) {\r\n\t\t_registerDnd();\r\n\t}\r\n\t// Attach ui.draggable to this Dynatree instance\r\n\tif(dnd && dnd.onDragStart ) {\r\n\t\ttree.$tree.draggable({\r\n\t\t\taddClasses: false,\r\n\t\t\tappendTo: \"body\",\r\n\t\t\tcontainment: false,\r\n\t\t\tdelay: 0,\r\n\t\t\tdistance: 4,\r\n//            revert: false,\r\n\t\t\t// slide back, when dropping over non-target\r\n\t\t\trevert: dnd.revert !== true ? false : function(dropped){\r\n\t\t\t\t// This is called by ui-draggable._mouseStop() when a drag stops.\r\n\t\t\t\t// Return `true` to let the helper slide back.\r\n\t\t\t\tlogMsg(\"draggable.revert(), dropped=\", dropped);\r\n\t\t\t\tif(typeof dropped === \"boolean\"){\r\n\t\t\t\t\t// dropped == true, when dropped over a simple, valid droppable target.\r\n\t\t\t\t\t// false, when dropped outside a drop target.\r\n\t\t\t\t\treturn !dropped;\r\n\t\t\t\t}\r\n\t\t\t\t// Drop comes from another tree. Default behavior is to assume\r\n\t\t\t\t// a valid drop, since we are over a drop-target.\r\n\t\t\t\t// Therefore we have to make an extra check, if the target node\r\n\t\t\t\t// was rejected by a Dynatree callback.\r\n\t\t\t\tvar helper = $.ui.ddmanager && $.ui.ddmanager.current && $.ui.ddmanager.current.helper;\r\n\t\t\t\tvar isRejected = helper && helper.hasClass(\"dynatree-drop-reject\");\r\n\t\t\t\treturn isRejected;\r\n\t\t\t\t},\r\n\t\t\tscroll: true, // issue 244: enable scrolling (if ul.dynatree-container)\r\n\t\t\tscrollSpeed: 7,\r\n\t\t\tscrollSensitivity: 10,\r\n\t\t\t// Delegate draggable.start, drag, and stop events to our handler\r\n\t\t\tconnectToDynatree: true,\r\n\t\t\t// Let source tree create the helper element\r\n\t\t\thelper: function(event) {\r\n\t\t\t\tvar sourceNode = $.ui.dynatree.getNode(event.target);\r\n\t\t\t\tif(!sourceNode){ // issue 211\r\n\t\t\t\t\treturn \"<div></div>\";\r\n\t\t\t\t}\r\n\t\t\t\treturn sourceNode.tree._onDragEvent(\"helper\", sourceNode, null, event, null, null);\r\n\t\t\t},\r\n\t\t\tstart: function(event, ui) {\r\n\t\t\t\t// See issues 211, 268, 278\r\n//              var sourceNode = $.ui.dynatree.getNode(event.target);\r\n\t\t\t\tvar sourceNode = ui.helper.data(\"dtSourceNode\");\r\n\t\t\t\treturn !!sourceNode; // Abort dragging if no Node could be found\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t// Attach ui.droppable to this Dynatree instance\r\n\tif(dnd && dnd.onDrop) {\r\n\t\ttree.$tree.droppable({\r\n\t\t\taddClasses: false,\r\n\t\t\ttolerance: \"pointer\",\r\n//            tolerance: \"intersect\",\r\n\t\t\tgreedy: false\r\n\t\t});\r\n\t}\r\n}\r\n\r\n//--- Extend ui.draggable event handling --------------------------------------\r\nvar didRegisterDnd = false;\r\nvar _registerDnd = function() {\r\n\tif(didRegisterDnd){\r\n\t\treturn;\r\n\t}\r\n\t// Register proxy-functions for draggable.start/drag/stop\r\n\t$.ui.plugin.add(\"draggable\", \"connectToDynatree\", {\r\n\t\tstart: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null;\r\n//          logMsg(\"draggable-connectToDynatree.start, %s\", sourceNode);\r\n//          logMsg(\"    this: %o\", this);\r\n//          logMsg(\"    event: %o\", event);\r\n//          logMsg(\"    draggable: %o\", draggable);\r\n//          logMsg(\"    ui: %o\", ui);\r\n\r\n\t\t\tif(sourceNode) {\r\n\t\t\t\t// Adjust helper offset, so cursor is slightly outside top/left corner\r\n//              draggable.offset.click.top -= event.target.offsetTop;\r\n//              draggable.offset.click.left -= event.target.offsetLeft;\r\n\t\t\t\tdraggable.offset.click.top = -2;\r\n\t\t\t\tdraggable.offset.click.left = + 16;\r\n//              logMsg(\"    draggable2: %o\", draggable);\r\n//              logMsg(\"    draggable.offset.click FIXED: %s/%s\", draggable.offset.click.left, draggable.offset.click.top);\r\n\t\t\t\t// Trigger onDragStart event\r\n\t\t\t\t// TODO: when called as connectTo..., the return value is ignored(?)\r\n\t\t\t\treturn sourceNode.tree._onDragEvent(\"start\", sourceNode, null, event, ui, draggable);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrag: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null,\r\n\t\t\t\tprevTargetNode = ui.helper.data(\"dtTargetNode\") || null,\r\n\t\t\t\ttargetNode = $.ui.dynatree.getNode(event.target);\r\n//          logMsg(\"$.ui.dynatree.getNode(%o): %s\", event.target, targetNode);\r\n//          logMsg(\"connectToDynatree.drag: helper: %o\", ui.helper[0]);\r\n\t\t\tif(event.target && !targetNode){\r\n\t\t\t\t// We got a drag event, but the targetNode could not be found\r\n\t\t\t\t// at the event location. This may happen,\r\n\t\t\t\t// 1. if the mouse jumped over the drag helper,\r\n\t\t\t\t// 2. or if non-dynatree element is dragged\r\n\t\t\t\t// We ignore it:\r\n\t\t\t\tvar isHelper = $(event.target).closest(\"div.dynatree-drag-helper,#dynatree-drop-marker\").length > 0;\r\n\t\t\t\tif(isHelper){\r\n//                  logMsg(\"Drag event over helper: ignored.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n//          logMsg(\"draggable-connectToDynatree.drag: targetNode(from event): %s, dtTargetNode: %s\", targetNode, ui.helper.data(\"dtTargetNode\"));\r\n\t\t\tui.helper.data(\"dtTargetNode\", targetNode);\r\n\t\t\t// Leaving a tree node\r\n\t\t\tif(prevTargetNode && prevTargetNode !== targetNode ) {\r\n\t\t\t\tprevTargetNode.tree._onDragEvent(\"leave\", prevTargetNode, sourceNode, event, ui, draggable);\r\n\t\t\t}\r\n\t\t\tif(targetNode){\r\n\t\t\t\tif(!targetNode.tree.options.dnd.onDrop) {\r\n\t\t\t\t\t// not enabled as drop target\r\n\t\t\t\t} else if(targetNode === prevTargetNode) {\r\n\t\t\t\t\t// Moving over same node\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"over\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Entering this node first time\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"enter\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// else go ahead with standard event handling\r\n\t\t},\r\n\t\tstop: function(event, ui) {\r\n\t\t\t// issue 386\r\n\t\t\tvar draggable = $(this).data(\"ui-draggable\") || $(this).data(\"draggable\"),\r\n\t\t\t\tsourceNode = ui.helper.data(\"dtSourceNode\") || null,\r\n\t\t\t\ttargetNode = ui.helper.data(\"dtTargetNode\") || null,\r\n//              mouseDownEvent = draggable._mouseDownEvent,\r\n\t\t\t\teventType = event.type,\r\n\t\t\t\tdropped = (eventType == \"mouseup\" && event.which == 1);\r\n\t\t\tlogMsg(\"draggable-connectToDynatree.stop: targetNode(from event): %s, dtTargetNode: %s\", targetNode, ui.helper.data(\"dtTargetNode\"));\r\n//          logMsg(\"draggable-connectToDynatree.stop, %s\", sourceNode);\r\n//          logMsg(\"    type: %o, downEvent: %o, upEvent: %o\", eventType, mouseDownEvent, event);\r\n//          logMsg(\"    targetNode: %o\", targetNode);\r\n\t\t\tif(!dropped){\r\n\t\t\t\tlogMsg(\"Drag was cancelled\");\r\n\t\t\t}\r\n\t\t\tif(targetNode) {\r\n\t\t\t\tif(dropped){\r\n\t\t\t\t\ttargetNode.tree._onDragEvent(\"drop\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t\t}\r\n\t\t\t\ttargetNode.tree._onDragEvent(\"leave\", targetNode, sourceNode, event, ui, draggable);\r\n\t\t\t}\r\n\t\t\tif(sourceNode){\r\n\t\t\t\tsourceNode.tree._onDragEvent(\"stop\", sourceNode, null, event, ui, draggable);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tdidRegisterDnd = true;\r\n};\r\n\r\n// ---------------------------------------------------------------------------\r\n}(jQuery));\r\n"]}