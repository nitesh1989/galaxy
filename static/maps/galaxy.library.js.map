{"version":3,"sources":["galaxy.library.js"],"names":["LibraryRouter","Backbone","Router","extend","initialize","this","routesHit","history","on","bind","trackPageview","routes","","page/:show_page","library/:library_id/permissions","folders/:folder_id/permissions","folders/:id","folders/:id/page/:show_page","folders/:folder_id/datasets/:dataset_id","folders/:folder_id/datasets/:dataset_id/permissions","folders/:folder_id/datasets/:dataset_id/versions/:ldda_id","back","window","navigate","trigger","replace","url","getFragment","test","ga","Galaxy","root","LibraryPrefs","_baseMvc2","default","SessionStorageModel","defaults","with_deleted","without_restricted","sort_order","sort_by","library_page_size","GalaxyLibrary","View","libraryToolbarView","libraryListView","library_router","libraryView","folderToolbarView","ga_code","folder_page_size","m","i","r","q","push","arguments","l","Date","a","s","createElement","o","getElementsByTagName","insertBefore","config","libraries","preferences","id","$el","unbind","_libraryLibrarytoolbarView2","LibraryToolbarView","_libraryLibrarylistView2","LibraryListView","show_page","render","_libraryFoldertoolbarView2","FolderToolbarView","folderListView","_libraryFolderlistView2","FolderListView","parseInt","folder_id","format","$","find","length","_toastr2","info","dataset_id","datasetView","_libraryDatasetView2","LibraryDatasetView","show_version","show_permissions","download","ldda_id","library_id","_libraryLibraryView2","LibraryView","folderView","_libraryFolderView2","FolderView","source","showImportModal","GalaxyApp"],"mappings":"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","file":"../scripts/galaxy.library.js","sourcesContent":["// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n// === MAIN GALAXY LIBRARY MODULE ====\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n\nimport mod_masthead from \"layout/masthead\";\nimport mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_baseMVC from \"mvc/base-mvc\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_folderlist_view from \"mvc/library/library-folderlist-view\";\nimport mod_librarylist_view from \"mvc/library/library-librarylist-view\";\nimport mod_librarytoolbar_view from \"mvc/library/library-librarytoolbar-view\";\nimport mod_foldertoolbar_view from \"mvc/library/library-foldertoolbar-view\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nimport mod_library_library_view from \"mvc/library/library-library-view\";\nimport mod_library_folder_view from \"mvc/library/library-folder-view\";\n// ============================================================================\n/**\n * The Data Libraries router. Takes care about triggering routes\n * and sends users to proper pieces of the application.\n */\nvar LibraryRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"libraries\",\n        \"page/:show_page\": \"libraries_page\",\n        \"library/:library_id/permissions\": \"library_permissions\",\n        \"folders/:folder_id/permissions\": \"folder_permissions\",\n        \"folders/:id\": \"folder_content\",\n        \"folders/:id/page/:show_page\": \"folder_page\",\n        \"folders/:folder_id/datasets/:dataset_id\": \"dataset_detail\",\n        \"folders/:folder_id/datasets/:dataset_id/permissions\": \"dataset_permissions\",\n        \"folders/:folder_id/datasets/:dataset_id/versions/:ldda_id\": \"dataset_version\",\n        \"folders/:folder_id/download/:format\": \"download\",\n        \"folders/:folder_id/import/:source\": \"import_datasets\"\n    },\n\n    /**\n   * If more than one route has been hit the user did not land on current\n   * page directly so we can go back safely. Otherwise go to the home page.\n   * Use replaceState if available so the navigation doesn't create an\n   * extra history entry\n   */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    },\n\n    /**\n   * Track every route change as a page view in Google Analytics.\n   */\n    trackPageview: function() {\n        var url = Backbone.history.getFragment();\n        //prepend slash\n        if (!/^\\//.test(url) && url != \"\") {\n            url = `/${url}`;\n        }\n        if (typeof ga !== \"undefined\") {\n            ga(\"send\", \"pageview\", `${Galaxy.root}library/list${url}`);\n        }\n    }\n});\n\n// ============================================================================\n/** session storage for library preferences */\nvar LibraryPrefs = mod_baseMVC.SessionStorageModel.extend({\n    defaults: {\n        with_deleted: false,\n        without_restricted: false,\n        sort_order: \"asc\",\n        sort_by: \"name\",\n        library_page_size: 20,\n        folder_page_size: 15\n    }\n});\n\n// ============================================================================\n/**\n * Main view of the Galaxy Data Libraries. Stores pointers to other subviews\n * and defines what router should do on the route triggers.\n */\nvar GalaxyLibrary = Backbone.View.extend({\n    libraryToolbarView: null,\n    libraryListView: null,\n    library_router: null,\n    libraryView: null,\n    folderToolbarView: null,\n    folderListView: null,\n    datasetView: null,\n\n    initialize: function() {\n        // This should go upstream in the js app once available\n        if (window.Galaxy.config.ga_code) {\n            ((i, s, o, g, r, a, m) => {\n                i[\"GoogleAnalyticsObject\"] = r;\n                (i[r] =\n                    i[r] ||\n                    function() {\n                        (i[r].q = i[r].q || []).push(arguments);\n                    }),\n                    (i[r].l = 1 * new Date());\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n            ga(\"create\", window.Galaxy.config.ga_code, \"auto\");\n            ga(\"send\", \"pageview\");\n        }\n\n        Galaxy.libraries = this;\n\n        this.preferences = new LibraryPrefs({ id: \"global-lib-prefs\" });\n\n        this.library_router = new LibraryRouter();\n\n        this.library_router.on(\"route:libraries\", () => {\n            if (Galaxy.libraries.libraryToolbarView) {\n                Galaxy.libraries.libraryToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n            Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView();\n        });\n\n        this.library_router.on(\"route:libraries_page\", show_page => {\n            if (Galaxy.libraries.libraryToolbarView === null) {\n                Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n                Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView({ show_page: show_page });\n            } else {\n                Galaxy.libraries.libraryListView.render({\n                    show_page: show_page\n                });\n            }\n        });\n\n        this.library_router.on(\"route:folder_content\", id => {\n            if (Galaxy.libraries.folderToolbarView) {\n                Galaxy.libraries.folderToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n            Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: id });\n        });\n\n        this.library_router.on(\"route:folder_page\", (id, show_page) => {\n            if (Galaxy.libraries.folderToolbarView === null) {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({\n                    id: id,\n                    show_page: show_page\n                });\n            } else {\n                Galaxy.libraries.folderListView.render({\n                    id: id,\n                    show_page: parseInt(show_page)\n                });\n            }\n        });\n\n        this.library_router.on(\"route:download\", (folder_id, format) => {\n            if ($(\"#folder_list_body\").find(\":checked\").length === 0) {\n                mod_toastr.info(\"You must select at least one dataset to download\");\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: true, replace: true });\n            } else {\n                Galaxy.libraries.folderToolbarView.download(folder_id, format);\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: false, replace: true });\n            }\n        });\n\n        this.library_router.on(\"route:dataset_detail\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_version: false,\n                show_permissions: false\n            });\n        });\n\n        this.library_router.on(\"route:dataset_version\", (folder_id, dataset_id, ldda_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                ldda_id: ldda_id,\n                show_version: true\n            });\n        });\n\n        this.library_router.on(\"route:dataset_permissions\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:library_permissions\", library_id => {\n            if (Galaxy.libraries.libraryView) {\n                Galaxy.libraries.libraryView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryView = new mod_library_library_view.LibraryView({\n                id: library_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:folder_permissions\", folder_id => {\n            if (Galaxy.libraries.folderView) {\n                Galaxy.libraries.folderView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderView = new mod_library_folder_view.FolderView({\n                id: folder_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:import_datasets\", (folder_id, source) => {\n            if (Galaxy.libraries.folderToolbarView && Galaxy.libraries.folderListView) {\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            } else {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: folder_id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: folder_id });\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyLibrary\n};\n"]}