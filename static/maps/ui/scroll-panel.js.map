{"version":3,"sources":["ui/scroll-panel.js"],"names":["$","ui","plugin","add","drag","e","instance","this","data","clearTimeout","timeout","options","element","panel_pos","position","panel_w","panel_h","panel","viewport","viewport_w","width","viewport_h","height","element_w","element_h","moved","p_min_x","nudge","p_min_y","min_vis_x","p_max_y","left","max_vis_x","max_vis_y","min_vis_y","mouse_x","click","mouse_y","top","offset","css","t","Math","p_max_x","parent","amount_moved","min","max","prepareOffsets","old_e","setTimeout","mouseMove","stop"],"mappings":"oDACAA,EAAAC,GAAAC,OAAAC,IAAA,YAAA,eACAC,KAAA,SAAAC,EAAAJ,GAIQ,IAAIK,EAAWN,EAAEO,MAAMC,KAAK,aAFpCC,aAAgBH,EAAAI,SACZN,IAAAA,EAAMH,EAAAU,QACFC,EAAIN,EAAaM,QACjBH,EAAAA,EAAAA,MACAI,EAAWF,EAAXG,WACAC,EAAIH,EAAUN,QACdU,EAAIC,EAAUA,SACdC,EAAIL,EAAYI,SAChBE,EAAIJ,EAAgBK,QACpBC,EAAIL,EAAgBM,SACpBC,EAAIL,EAAWD,QACfO,EAAIL,EAAaD,SACjBO,GAAIJ,EAKJK,IAAIC,EAAJR,GAEAS,IAAIZ,EAAAK,GAKJQ,GAAIC,EAAJC,KAEAC,EAAIH,EAAAV,EACJU,GAAahB,EAAUkB,IAInBE,EAAYC,EAAYb,EAA5Bc,EAAIF,EAAAA,SAAYC,KAAAA,EAAYb,OAA5Be,MAAAL,KAOA,GALAM,QAAIpC,EAAAa,SAAAwB,IAAAhC,EAAAiC,OAAAH,MAAAE,IAKAzB,EAAUkB,KAlBJ,GAkBsBI,EAzB5BZ,EAyBmDM,EAAW,CAFlEQ,EAAAA,KAAavB,IAtBTU,GAMM,EAgBkBlB,EAAgB8B,MAC5CnB,EAAAuB,IAAA,OAAA3B,EAAAkB,KAAAU,GACAhB,GAAIZ,EACAP,EAAImC,OAAIC,OAASf,MAAOgB,EACxB1B,EAAAA,SAAMuB,MAANC,EAEAnC,IAAAA,GAAAA,EAAgBsC,KAAOb,GAAvBI,EA7BAZ,EA6BAS,EAAA,CACA/B,EAAGa,KAAAA,IA7BHU,GA6BoBiB,EAApBV,KAAAL,GACHT,EAAAuB,IAAA,OAAA3B,EAAAkB,KAAAU,GACDhB,GAAKA,EACDnB,EAAImC,OAAIC,OAASf,MAAOd,EACxBI,EAAAA,SAAMuB,MAANC,EAEAnC,IAAAA,GAAAA,EAAgBsC,IAzBN,GAyBVP,QApCAd,EAoCAW,EAAA,CACAjC,EAAGa,KAAAA,IApCHU,GAUU,EA0BVX,EAAAyB,KACHrB,EAAAuB,IAAA,MAAA3B,EAAAyB,IAAAG,GAEGI,EAAaC,EAAInB,WAAOG,IAAUjB,EAAlCyB,IACArB,EAAAA,OAAU2B,OAAO/B,KAAAA,EACjBZ,EAAAa,SAAAwB,KAAAO,EACApB,GAAIoB,EAEJ5C,IAAAA,GAAGa,EAAHwB,IAAmBO,GAAnBR,QA7CAd,EA6CAU,EAAA,CACAR,IAAAA,EAAAA,KAAQqB,IA7CRtB,GA6CAX,EAAAyB,IAAAZ,GACHT,EAAAuB,IAAA,MAAA3B,EAAAyB,IAAAG,EAAA,MAEG,IAAAI,EAAaC,EAAWjC,IAAAA,EAAAC,WAAxBwB,IACArB,EAAAA,OAAU2B,OAAU/B,KAAAA,EACpBZ,EAAAa,SAAAwB,KAAAO,EACApB,GAAIoB,EAGJpB,EAAAA,SAAAA,KAAQiB,KAARK,IAAA9C,EAAAa,SAAAiB,KAAA,GACH9B,EAAAa,SAAAwB,IAAAI,KAAAK,IAAA9C,EAAAa,SAAAwB,IAAA,GACDrC,EAAAa,SAAAiB,KAAAW,KAAAI,IAAA7C,EAAAa,SAAAiB,KAAAhB,EAAAQ,GACAtB,EAAAA,SAAGa,IAASiB,KAAOW,IAAAA,EAAKK,SAAOjC,IAASiB,EAAxCP,GAEAvB,GACAA,EAAAA,GAAGa,UAAHkC,eAA8BlC,EAASwB,GAGnCtC,IACHM,EAAA2C,MAAA5C,EACDC,EAAAI,QAAAwC,WAAA,WACIzB,EAAO0B,UAAA9C,IACPC,MAGC8C,KAAA,SAAE/C,EAFHJ,GAGH,IAAAK,EAAAN,EAAAO,MAAAC,KAAA,aACJC,aAtFuCH,EAAAI","file":"../../scripts/ui/scroll-panel.js","sourcesContent":["// This is an extension to jQuery UI draggable\n// When dragging move the parent element (\"panel\") relative to its parent\n// (\"viewport\") so that the draggable is always visible.\n\n$.ui.plugin.add(\"draggable\", \"scrollPanel\", {\n    drag: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout(instance.timeout);\n        var o = ui.options;\n        var element = instance.element;\n        var panel = o.panel;\n        var panel_pos = panel.position();\n        var panel_w = panel.width();\n        var panel_h = panel.height();\n        var viewport = panel.parent();\n        var viewport_w = viewport.width();\n        var viewport_h = viewport.height();\n        var element_w = element.width();\n        var element_h = element.height();\n        var moved = false;\n        var close_dist = 5;\n        var nudge = 23;\n\n        var // Legal panel range\n        p_min_x = -(panel_w - viewport_w);\n\n        var p_min_y = -(panel_h - viewport_h);\n        var p_max_x = 0;\n        var p_max_y = 0;\n\n        var // Visible\n        min_vis_x = -panel_pos.left;\n\n        var max_vis_x = min_vis_x + viewport_w;\n        var min_vis_y = -panel_pos.top;\n        var max_vis_y = min_vis_y + viewport_h;\n\n        var // Mouse\n        mouse_x = ui.position.left + instance.offset.click.left;\n\n        mouse_y = ui.position.top + instance.offset.click.top;\n        // Move it\n        if (panel_pos.left < p_max_x && mouse_x - close_dist < min_vis_x) {\n            var t = Math.min(nudge, p_max_x - panel_pos.left);\n            panel.css(\"left\", panel_pos.left + t);\n            moved = true;\n            instance.offset.parent.left += t;\n            ui.position.left -= t;\n        }\n        if (!moved && panel_pos.left > p_min_x && mouse_x + close_dist > max_vis_x) {\n            var t = Math.min(nudge, panel_pos.left - p_min_x);\n            panel.css(\"left\", panel_pos.left - t);\n            moved = true;\n            instance.offset.parent.left -= t;\n            ui.position.left += t;\n        }\n        if (!moved && panel_pos.top < p_max_y && mouse_y - close_dist < min_vis_y) {\n            var t = Math.min(nudge, p_max_y - panel_pos.top);\n            panel.css(\"top\", panel_pos.top + t);\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel.position().top - panel_pos.top;\n            instance.offset.parent.top += amount_moved;\n            ui.position.top -= amount_moved;\n            moved = true;\n        }\n        if (!moved && panel_pos.top > p_min_y && mouse_y + close_dist > max_vis_y) {\n            var t = Math.min(nudge, panel_pos.top - p_min_x);\n            panel.css(\"top\", `${panel_pos.top - t}px`);\n            // Firefox sometimes moves by less, so we need to check. Yuck.\n            var amount_moved = panel_pos.top - panel.position().top;\n            instance.offset.parent.top -= amount_moved;\n            ui.position.top += amount_moved;\n            moved = true;\n        }\n        // Still contain in panel\n        ui.position.left = Math.max(ui.position.left, 0);\n        ui.position.top = Math.max(ui.position.top, 0);\n        ui.position.left = Math.min(ui.position.left, panel_w - element_w);\n        ui.position.top = Math.min(ui.position.top, panel_h - element_h);\n        // Update offsets\n        if (moved) {\n            $.ui.ddmanager.prepareOffsets(instance, e);\n        }\n        // Keep moving even if mouse doesn't move\n        if (moved) {\n            instance.old_e = e;\n            instance.timeout = setTimeout(() => {\n                instance.mouseMove(e);\n            }, 50);\n        }\n    },\n    stop: function(e, ui) {\n        var instance = $(this).data(\"draggable\");\n        clearTimeout(instance.timeout);\n    }\n});\n"]}