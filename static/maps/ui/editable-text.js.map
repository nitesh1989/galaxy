{"version":3,"sources":["ui/editable-text.js"],"names":["$","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","on_finish","help_text","container","addClass","click","e","this","children","length","button_elt","remove","text","new_text","removeClass","cur_text","input_elt","attr","rows","cols","trim","keyup","set_text","val","value","size","blur","keyCode","stopPropagation","append","select","tooltip"],"mappings":"kEAGIA,uDAAAA,QAFHA,EAAAC,GAAAC,mBAAD,SAAAC,GAEA,IAAIH,EAAAA,aAAJG,EAAAA,EAAAC,SAAA,GAEAC,EAAA,aAAAF,EAAAA,EAAAE,SAAA,EAYQC,EAAe,iBAAkBH,GAAcA,EAAYG,aAE3DC,EAAY,cAAeJ,EAAcA,EAAYI,UAAY,KACjEC,EAAY,cAAeL,EAAcA,EAAYK,UAAY,KAPrEC,EAAIL,EAAAA,MA+FH,OApFDK,EAAUC,SAAS,iBAAiBC,MAAM,SAASC,GAE/C,KAAIZ,EAAEa,MAAMC,SAAS,UAAUC,OAAS,GAAxC,CANJN,EAAID,YAAY,iBAGhB,IAmBQC,EAWAO,EA9BJP,EAAAA,SAAAA,GACJA,EAAUC,KAAS,UAAAO,SAEHH,KAARd,EACAS,EAAAS,KAAAC,GAGJV,EAAUW,KAAAA,QAEVX,EAAAC,SAAA,iBAEID,GAWIF,EAAUY,IALVV,EAAAA,aAAeN,EAAfA,EAAAkB,SAAAZ,EAAAS,OAKAX,GACHe,EAAAtB,EAAA,eAbLuB,MAAAC,KAAAnB,EAAAoB,KAAArB,IAyBSc,KAAKlB,EAAE0B,KAAKL,IATrBM,MAAA,SAAAf,GACe,KAAXS,EAAAA,SAEAC,EAAJD,KAGAL,EAAIV,EAAAA,aACAgB,KAAAA,QAIQX,MAAA,WAGC,OAFGiB,EAAAN,EAAAO,QAEH,KAKDD,EAAAA,EAAAA,wBACAL,MAAAO,MAAA9B,EAAA0B,KAAAL,GAAAU,KAAA3B,IACA4B,KAAA,WALRJ,EAAAP,KAQAC,MAAAA,SAAcV,GAGN,KAAAgB,EAAAA,QAGIhB,EAAEqB,MAAAA,QAAN,QACI,KAAArB,EAAAqB,SADJL,EAGaK,EAAAA,MAAFJ,OAMXjB,EAAEsB,oBAKdzB,EAAUS,KAAK,IADfT,EAAA0B,OAAAb,GACAb,GACAA,EAAU0B,OAAOb,GAEbb,EAAAA,QACHa,EAAAc,SAKDxB,EAAEsB,qBAIF1B,GADJC,EAAAc,KAAA,QAAAf,GAAA6B,UAGC5B","file":"../../scripts/ui/editable-text.js","sourcesContent":["import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n\n// ============================================================================\n/**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n$.fn.make_text_editable = function(config_dict) {\n    // Get config options.\n    var num_cols = \"num_cols\" in config_dict ? config_dict.num_cols : 30;\n\n    var num_rows = \"num_rows\" in config_dict ? config_dict.num_rows : 4;\n\n    var use_textarea = \"use_textarea\" in config_dict ? config_dict.use_textarea : false;\n\n    var on_finish = \"on_finish\" in config_dict ? config_dict.on_finish : null;\n    var help_text = \"help_text\" in config_dict ? config_dict.help_text : null;\n\n    // Add element behavior.\n    var container = $(this);\n    container.addClass(\"editable-text\").click(function(e) {\n        // If there's already an input element, editing is active, so do nothing.\n        if ($(this).children(\":input\").length > 0) {\n            return;\n        }\n\n        container.removeClass(\"editable-text\");\n\n        // Handler for setting element text.\n        var set_text = new_text => {\n            container.find(\":input\").remove();\n\n            if (new_text !== \"\") {\n                container.text(new_text);\n            } else {\n                // No text; need a line so that there is a click target.\n                container.html(\"<br>\");\n            }\n            container.addClass(\"editable-text\");\n\n            if (on_finish) {\n                on_finish(new_text);\n            }\n        };\n\n        // Create input element(s) for editing.\n        var cur_text = \"cur_text\" in config_dict ? config_dict.cur_text : container.text();\n\n        var input_elt;\n        var button_elt;\n\n        if (use_textarea) {\n            input_elt = $(\"<textarea/>\")\n                .attr({ rows: num_rows, cols: num_cols })\n                .text($.trim(cur_text))\n                .keyup(e => {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        set_text(cur_text);\n                    }\n                });\n            button_elt = $(\"<button/>\")\n                .text(\"Done\")\n                .click(() => {\n                    set_text(input_elt.val());\n                    // Return false so that click does not propogate to container.\n                    return false;\n                });\n        } else {\n            input_elt = $(\"<input type='text'/>\")\n                .attr({ value: $.trim(cur_text), size: num_cols })\n                .blur(() => {\n                    set_text(cur_text);\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        // Enter key.\n                        set_text($(this).val());\n                    }\n\n                    // Do not propogate event to avoid unwanted side effects.\n                    e.stopPropagation();\n                });\n        }\n\n        // Replace text with input object(s) and focus & select.\n        container.text(\"\");\n        container.append(input_elt);\n        if (button_elt) {\n            container.append(button_elt);\n        }\n        input_elt.focus();\n        input_elt.select();\n\n        // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n        e.stopPropagation();\n    });\n\n    // Add help text if there some.\n    if (help_text) {\n        container.attr(\"title\", help_text).tooltip();\n    }\n\n    return container;\n};\n\n// ============================================================================\n"]}